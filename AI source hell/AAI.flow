
// 
// FlowScript decompiled by AtlusScriptLib by TGE (2017)
// In the unfortunate case of any bugs, please report them back to me.
// 


// 
// Imports
// 

import( "AAI.msg" );

// 
// Procedure declarations
// 

void AI_EVENT_1A0_BTLSTART()
{
}


void AI_EVENT_1A0_ACTSTART()
{
}


void AI_EVENT_1A0_ACTEND()
{
}


void AI_EVENT_1A1_BTLSTART()
{
}


void AI_EVENT_1A1_ACTSTART()
{
}


void AI_EVENT_1A1_ACTEND()
{
}


void AI_EVENT_1A2_BTLSTART()
{
}


void AI_EVENT_1A2_ACTSTART()
{
}


void AI_EVENT_1A2_ACTEND()
{
}


void AI_EVENT_1A3_BTLSTART()
{
}


void AI_EVENT_1A3_ACTSTART()
{
}


void AI_EVENT_1A3_ACTEND()
{
}


void AI_EVENT_1A4_BTLSTART()
{
}


void AI_EVENT_1A4_ACTSTART()
{
}


void AI_EVENT_1A4_ACTEND()
{
}


void AI_EVENT_1A5_BTLSTART()
{
}


void AI_EVENT_1A5_ACTSTART()
{
}


void AI_EVENT_1A5_ACTEND()
{
}


void AI_EVENT_1A6_BTLSTART()
{
}


void AI_EVENT_1A6_ACTSTART()
{
}


void AI_EVENT_1A6_ACTEND()
{
}


void AI_EVENT_1A7_BTLSTART()
{
}


void AI_EVENT_1A7_ACTSTART()
{
}


void AI_EVENT_1A7_ACTEND()
{
}


void AI_EVENT_1A8_BTLSTART()
{
}


void AI_EVENT_1A8_ACTSTART()
{
}


void AI_EVENT_1A8_ACTEND()
{
}


void AI_JIBAKU()
{
}


void AI_EVENT_1A9_BTLSTART()
{
}


void AI_EVENT_1A9_ACTSTART()
{
}


void AI_EVENT_1A9_ACTEND()
{
}


void AI_EVENT_1AA_BTLSTART()
{
}


void AI_EVENT_1AA_ACTSTART()
{
}


void AI_EVENT_1AA_ACTEND()
{
}


void AI_EVENT_1AB_BTLSTART()
{
}


void AI_EVENT_1AB_ACTSTART()
{
}


void AI_EVENT_1AB_ACTEND()
{
}


void AI_EVENT_1AC_BTLSTART()
{
}


void AI_EVENT_1AC_ACTSTART()
{
}


void AI_EVENT_1AC_ACTEND()
{
}


void NYX_TAROT_CHANGE()
{
}


void NYX_YAMIYO()
{
}


void NYX_YORUNO()
{
}


void AI_EVENT_1AD_BTLSTART()
{
}


void AI_EVENT_1AD_ACTSTART()
{
}


void AI_EVENT_1AD_ACTEND()
{
}


void AI_EVENT_1AE_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B0();
    EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
    MSG( MSG_0864 );
    MSG( MSG_0865 );
    FUNCTION_00B7( 0 );
    EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 3 );
    MSG( MSG_0866 );
    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1AE_ACTSTART()
{
    
    if ( FUNCTION_01BD( 1, 294 ) == 1 )
    {
        
        if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 ) == 0 )
        {
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 0.00f, 101.30f, 0.00f, 0.00f, 93.10f, 0.00f );
            FUNCTION_01B4( 2.90f, 297.70f, 0.00f, 0.00f, 268.00f, 0.00f );
            FUNCTION_01B5( 112 );
            MSG( MSG_0867 );
            FUNCTION_01B3( 399.30f, 400.40f, 63.40f, 348.30f, 346.40f, 0.00f );
            FUNCTION_01B4( 54.30f, 357.40f, 229.20f, 57.50f, 305.40f, 143.80f );
            FUNCTION_01B5( 88 );
            MSG( MSG_0868 );
            FUNCTION_01B3( 31.00f, 408.90f, 456.00f, 38.80f, 367.10f, 365.40f );
            FUNCTION_01B4( 0.00f, 99.80f, 853.80f, 5.20f, 96.20f, 754.30f );
            FUNCTION_01B5( 103 );
            MSG( MSG_0869 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( FUNCTION_0036( 25 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 496 ) == 0 )
        {
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 496 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 124.90f, 151.60f, 0.00f, 94.40f, 134.30f, 0.00f );
            FUNCTION_01B4( 0.00f, 63.30f, 0.00f, 0.00f, 59.00f, 0.00f );
            FUNCTION_01B5( 105 );
            MSG( MSG_0874 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( FUNCTION_0036( 50 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 ) == 0 )
        {
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 0.00f, 315.10f, 0.00f, 0.00f, 272.50f, 0.00f );
            FUNCTION_01B4( 9.20f, 112.80f, 0.00f, 0.00f, 98.20f, 0.00f );
            FUNCTION_01B5( 79 );
            MSG( MSG_0872 );
            FUNCTION_01B3( 3.60f, 83.90f, 626.90f, 10.40f, 81.30f, 527.20f );
            FUNCTION_01B4( 12.30f, 196.40f, 247.20f, 20.60f, 169.20f, 151.40f );
            FUNCTION_01B5( 160 );
            MSG( MSG_0873 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( FUNCTION_0036( 75 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 ) == 0 )
        {
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 371.70f, 345.00f, 215.00f, 332.40f, 304.00f, 132.70f );
            FUNCTION_01B4( 95.70f, 313.50f, 296.30f, 97.50f, 272.50f, 205.10f );
            FUNCTION_01B5( 136 );
            MSG( MSG_0870 );
            FUNCTION_01B3( 0.00f, 370.30f, 0.00f, 0.00f, 329.80f, 0.00f );
            FUNCTION_01B4( 0.00f, 204.30f, 0.00f, 0.00f, 191.50f, 0.00f );
            FUNCTION_01B5( 132 );
            MSG( MSG_0871 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }

    }

}


void AI_EVENT_1AE_ACTEND()
{
    FUNCTION_01AD();
}


void AI_EVENT_1EA_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1EA_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1EA_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1CE_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1CE_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1CE_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1CF_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1CF_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1CF_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D0_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1D0_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
        MSG( MSG_1D0_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D1_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1D1_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1D1_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D6_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1D6_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1D6_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D7_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1D7_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1D7_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D8_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1D8_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1D8_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D9_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1D9_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1D9_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DA_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1DA_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1DA_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DB_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1DB_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1DB_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DC_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1DC_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1DC_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DD_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1DD_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1DD_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DE_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1DE_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1DE_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DF_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1DF_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1DF_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E0_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1E0_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1E0_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E1_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1E1_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1E1_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E2_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1E2_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1E2_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E3_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1E3_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1E3_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E4_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1E4_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1E4_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E5_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1E5_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1E5_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E6_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1E6_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1E6_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E7_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1E7_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1E7_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E8_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1E8_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1E8_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E9_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( 0 + 321 ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( MSG_1E9_M );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_1E9_F );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1AF_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B3( 84.80f, 224.40f, 132.90f, 80.30f, 185.90f, 40.70f );
    FUNCTION_01B4( 208.00f, 186.30f, 129.40f, 179.20f, 157.30f, 38.10f );
    FUNCTION_01B5( 50 );
    MSG( MSG_0875 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1AF_ACTSTART()
{
    FUNCTION_01AD();
}


void AI_EVENT_1AF_ACTEND()
{
    
    if ( FUNCTION_0158( 233, 25 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 496 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 496 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 145.30f, 197.60f, 377.40f, 139.10f, 174.10f, 280.40f );
        FUNCTION_01B4( 190.90f, 132.20f, 633.60f, 167.90f, 112.60f, 538.30f );
        FUNCTION_01B5( 69 );
        MSG( MSG_0878 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 233, 50 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 0.00f, 195.80f, 95.90f, 0.00f, 162.40f, 6.30f );
        FUNCTION_01B4( 0.00f, 152.10f, 72.80f, 0.00f, 130.50f, 0.00f );
        FUNCTION_01B5( 50 );
        MSG( MSG_0877 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 233, 75 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 173.20f, 268.80f, 0.00f, 139.30f, 229.00f, 0.00f );
        FUNCTION_01B4( 125.30f, 98.40f, 0.00f, 92.80f, 89.10f, 0.00f );
        FUNCTION_01B5( 89 );
        MSG( MSG_0876 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1B4_BTLSTART()
{
    FUNCTION_01AD();
}


void AI_EVENT_1B4_ACTSTART()
{
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 500 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 500 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 3 );
        MSG( MSG_0916 );
        MSG( MSG_0917 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 505 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 505 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_0926 );
        MSG( MSG_0927 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 506 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_0918 );
        MSG( MSG_0919 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 503 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 503 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
        MSG( MSG_0920 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 511 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 504 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 504 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
        MSG( MSG_0922 );
        MSG( MSG_0923 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1B4_ACTEND()
{
    
    if ( FUNCTION_0176() == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 496 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 496 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
        MSG( MSG_0924 );
        FUNCTION_00B7( 0 );
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( MSG_0925 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0176() == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 453 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
        MSG( MSG_0914 );
        MSG( MSG_0915 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1B0_BTLSTART()
{
    FUNCTION_01B6( 492, 0 );
}


void AI_EVENT_1B0_ACTSTART()
{
    int localVariable0 = FUNCTION_0192( 0 );
    
    if ( FUNCTION_01BD( 0, 1 ) == 1 )
    {
        localVariable0 = localVariable0 + 1;
        FUNCTION_0193( 10, localVariable0 );
    }

    
    if ( FUNCTION_01EC() == 225 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 496 ) == 0 && localVariable0 > 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 496 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, 0.00f, 101.10f, 343.80f, 0.00f );
        FUNCTION_01B4( 0.00f, 58.40f, 0.00f, 0.00f, 62.40f, 0.00f );
        FUNCTION_01B5( 170 );
        MSG( MSG_0881 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_01EC() == 224 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 ) == 0 && AI_MYBAD( 2, 0x00080000 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, 0.00f, 101.10f, 343.80f, 0.00f );
        FUNCTION_01B4( 0.00f, 58.40f, 0.00f, 0.00f, 62.40f, 0.00f );
        FUNCTION_01B5( 170 );
        MSG( MSG_0880 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_01EC() == 226 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 ) == 0 && AI_MYBAD( 4, 0x00080000 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, 0.00f, 101.10f, 343.80f, 0.00f );
        FUNCTION_01B4( 0.00f, 58.40f, 0.00f, 0.00f, 62.40f, 0.00f );
        FUNCTION_01B5( 170 );
        MSG( MSG_0884 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_01EC() == 227 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 ) == 0 && AI_MYBAD( 5, 0x00080000 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, 0.00f, 101.10f, 343.80f, 0.00f );
        FUNCTION_01B4( 0.00f, 58.40f, 0.00f, 0.00f, 62.40f, 0.00f );
        FUNCTION_01B5( 170 );
        MSG( MSG_0886 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_01EC() == 228 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 500 ) == 0 && AI_MYBAD( 7, 0x00080000 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 500 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, 0.00f, 101.10f, 343.80f, 0.00f );
        FUNCTION_01B4( 0.00f, 58.40f, 0.00f, 0.00f, 62.40f, 0.00f );
        FUNCTION_01B5( 170 );
        MSG( MSG_0888 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_01EC() == 229 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 ) == 0 && AI_MYBAD( 8, 0x00080000 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, 0.00f, 101.10f, 343.80f, 0.00f );
        FUNCTION_01B4( 0.00f, 58.40f, 0.00f, 0.00f, 62.40f, 0.00f );
        FUNCTION_01B5( 170 );
        MSG( MSG_0928 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_01EC() == 230 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 ) == 0 && AI_MYBAD( 10, 0x00080000 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, 0.00f, 101.10f, 343.80f, 0.00f );
        FUNCTION_01B4( 0.00f, 58.40f, 0.00f, 0.00f, 62.40f, 0.00f );
        FUNCTION_01B5( 170 );
        MSG( MSG_0889 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1B0_ACTEND()
{
    FUNCTION_01AD();
}


void AI_EVENT_1B1_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B3( 0.00f, 175.20f, 246.10f, 0.00f, 151.40f, 149.70f );
    FUNCTION_01B4( 63.70f, 99.80f, 659.60f, 38.10f, 83.20f, 564.40f );
    FUNCTION_01B5( 83 );
    MSG( MSG_0890 );
    FUNCTION_01B3( 389.40f, 373.00f, 0.00f, 338.70f, 325.30f, 0.00f );
    FUNCTION_01B4( 227.50f, 125.70f, 0.00f, 193.80f, 106.70f, 0.00f );
    FUNCTION_01B5( 67 );
    MSG( MSG_0894 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1B1_ACTSTART()
{
    
    if ( FUNCTION_01BD( 0, 1 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 503 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 503 );
        FUNCTION_01B6( 494, 0 );
        FUNCTION_01B6( 495, 0 );
    }

}


void AI_EVENT_1B1_ACTEND()
{
    
    if ( FUNCTION_0158( 235, 25 ) == 1 && FUNCTION_015B( 235, 0x00080000 ) == 0 && FUNCTION_015B( 235, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 12.90f, 329.90f, 105.10f, 0.00f, 269.70f, 27.40f );
        FUNCTION_01B4( 27.80f, 58.40f, 680.70f, 0.00f, 57.30f, 584.70f );
        FUNCTION_01B5( 161 );
        MSG( MSG_0893 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 235, 50 ) == 1 && FUNCTION_015B( 235, 0x00080000 ) == 0 && FUNCTION_015B( 235, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 0.00f, 415.90f, 0.00f, 0.00f, 368.60f, 0.00f );
        FUNCTION_01B4( 0.00f, 197.10f, 0.00f, 0.00f, 167.60f, 0.00f );
        FUNCTION_01B5( 120 );
        MSG( MSG_0892 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 235, 75 ) == 1 && FUNCTION_015B( 235, 0x00080000 ) == 0 && FUNCTION_015B( 235, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 0.00f, 254.00f, 146.80f, 0.00f, 213.70f, 80.50f );
        FUNCTION_01B4( 0.00f, 94.10f, 111.90f, 0.00f, 79.80f, 27.30f );
        FUNCTION_01B5( 0x40 );
        MSG( MSG_0891 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 236, 25 ) == 1 && FUNCTION_015B( 236, 0x00080000 ) == 0 && FUNCTION_015B( 236, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 500 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 500 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 384.10f, 360.10f, 0.00f, 332.10f, 310.60f, 0.00f );
        FUNCTION_01B4( 265.20f, 214.20f, 0.00f, 228.90f, 179.30f, 0.00f );
        FUNCTION_01B5( 91 );
        MSG( MSG_0897 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 236, 50 ) == 1 && FUNCTION_015B( 236, 0x00080000 ) == 0 && FUNCTION_015B( 236, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 422.60f, 287.40f, 145.20f, 387.40f, 244.10f, 62.20f );
        FUNCTION_01B4( 186.50f, 159.90f, 140.80f, 192.50f, 130.80f, 45.30f );
        FUNCTION_01B5( 111 );
        MSG( MSG_0896 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 236, 75 ) == 1 && FUNCTION_015B( 236, 0x00080000 ) == 0 && FUNCTION_015B( 236, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 140.40f, 201.80f, 155.00f, 158.40f, 164.30f, 64.00f );
        FUNCTION_01B4( 188.00f, 76.30f, 150.00f, 196.50f, 66.30f, 50.80f );
        FUNCTION_01B5( 50 );
        MSG( MSG_0895 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1B2_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B3( 396.30f, 276.20f, 81.70f, 359.60f, 227.60f, 2.40f );
    FUNCTION_01B4( 361.80f, 210.60f, 613.10f, 331.10f, 172.60f, 525.90f );
    FUNCTION_01B5( 92 );
    MSG( MSG_0898 );
    FUNCTION_01B3( 0.00f, 242.80f, 0.00f, 0.00f, 202.50f, 0.00f );
    FUNCTION_01B4( 0.00f, 113.10f, 0.00f, 0.00f, 94.00f, 0.00f );
    FUNCTION_01B5( 50 );
    MSG( MSG_0902 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1B2_ACTSTART()
{
    
    if ( FUNCTION_01BD( 0, 1 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 503 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 503 );
        FUNCTION_01B6( 496, 0 );
        FUNCTION_01B6( 497, 0 );
    }

}


void AI_EVENT_1B2_ACTEND()
{
    
    if ( FUNCTION_0158( 237, 25 ) == 1 && FUNCTION_015B( 237, 0x00080000 ) == 0 && FUNCTION_015B( 237, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 290.60f, 258.10f, 0.00f, 250.10f, 216.60f, 0.00f );
        FUNCTION_01B4( 0.00f, 161.90f, 0.00f, 0.00f, 136.30f, 0.00f );
        FUNCTION_01B5( 144 );
        MSG( MSG_0901 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 237, 50 ) == 1 && FUNCTION_015B( 237, 0x00080000 ) == 0 && FUNCTION_015B( 237, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 0.00f, 281.60f, 0.00f, 0.00f, 243.10f, 0.00f );
        FUNCTION_01B4( 263.40f, 150.50f, 0.00f, 229.40f, 134.40f, 0.00f );
        FUNCTION_01B5( 160 );
        MSG( MSG_0900 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 237, 75 ) == 1 && FUNCTION_015B( 237, 0x00080000 ) == 0 && FUNCTION_015B( 237, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 0.00f, 320.70f, 188.60f, 36.20f, 273.10f, 109.20f );
        FUNCTION_01B4( 0.00f, 103.80f, 21.00f, 0.00f, 88.80f, 0.00f );
        FUNCTION_01B5( 120 );
        MSG( MSG_0899 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 238, 25 ) == 1 && FUNCTION_015B( 238, 0x00080000 ) == 0 && FUNCTION_015B( 238, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 500 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 500 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 0.00f, 145.60f, 0.00f, 0.00f, 118.80f, 0.00f );
        FUNCTION_01B4( 0.00f, 99.60f, 0.00f, 0.00f, 81.10f, 0.00f );
        FUNCTION_01B5( 50 );
        MSG( MSG_0905 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 238, 50 ) == 1 && FUNCTION_015B( 238, 0x00080000 ) == 0 && FUNCTION_015B( 238, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 0.00f, 234.30f, 0.00f, 0.00f, 200.80f, 0.00f );
        FUNCTION_01B4( 0.00f, 89.50f, 0.00f, 0.00f, 80.20f, 0.00f );
        FUNCTION_01B5( 50 );
        MSG( MSG_0904 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 238, 75 ) == 1 && FUNCTION_015B( 238, 0x00080000 ) == 0 && FUNCTION_015B( 238, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 0.00f, 254.70f, 80.20f, 0.00f, 199.40f, 0.00f );
        FUNCTION_01B4( 9.90f, 173.10f, 57.90f, 0.00f, 135.20f, 0.00f );
        FUNCTION_01B5( 50 );
        MSG( MSG_0903 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1B3_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B3( 0.00f, 341.10f, 353.40f, 0.00f, 295.90f, 267.60f );
    FUNCTION_01B4( 0.00f, 164.50f, 674.90f, 0.00f, 134.60f, 589.00f );
    FUNCTION_01B5( 108 );
    MSG( MSG_0906 );
    FUNCTION_01B3( 115.00f, 317.40f, 0.00f, 107.00f, 272.70f, 0.00f );
    FUNCTION_01B4( 203.60f, 64.00f, 0.00f, 177.00f, 59.70f, 0.00f );
    FUNCTION_01B5( 82 );
    MSG( MSG_0913 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1B3_ACTSTART()
{
    
    if ( FUNCTION_01BD( 0, 1 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 503 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 503 );
        FUNCTION_01B6( 498, 0 );
        FUNCTION_01B6( 499, 0 );
    }

}


void AI_EVENT_1B3_ACTEND()
{
    
    if ( FUNCTION_0158( 239, 25 ) == 1 && FUNCTION_015B( 239, 0x00080000 ) == 0 && FUNCTION_015B( 239, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 497 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 0.00f, 262.00f, 0.00f, 0.00f, 234.30f, 0.00f );
        FUNCTION_01B4( 0.00f, 99.60f, 0.00f, 0.00f, 84.90f, 0.00f );
        FUNCTION_01B5( 83 );
        MSG( MSG_0909 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 239, 50 ) == 1 && FUNCTION_015B( 239, 0x00080000 ) == 0 && FUNCTION_015B( 239, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 0.00f, 383.70f, 0.00f, 0.00f, 331.30f, 0.00f );
        FUNCTION_01B4( 0.00f, 108.10f, 0.00f, 0.00f, 93.00f, 0.00f );
        FUNCTION_01B5( 87 );
        MSG( MSG_0908 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 239, 75 ) == 1 && FUNCTION_015B( 239, 0x00080000 ) == 0 && FUNCTION_015B( 239, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 0.00f, 254.00f, 146.80f, 0.00f, 213.70f, 80.50f );
        FUNCTION_01B4( 0.00f, 94.10f, 111.90f, 0.00f, 79.80f, 27.30f );
        FUNCTION_01B5( 0x40 );
        MSG( MSG_0907 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 240, 25 ) == 1 && FUNCTION_015B( 240, 0x00080000 ) == 0 && FUNCTION_015B( 240, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 500 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 500 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 48.40f, 281.90f, 158.50f, 80.30f, 230.60f, 78.90f );
        FUNCTION_01B4( 0.00f, 90.80f, 707.30f, 0.00f, 80.30f, 615.00f );
        FUNCTION_01B5( 125 );
        MSG( MSG_0912 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 240, 50 ) == 1 && FUNCTION_015B( 240, 0x00080000 ) == 0 && FUNCTION_015B( 240, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 501 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 382.50f, 258.80f, 0.00f, 327.90f, 222.10f, 0.00f );
        FUNCTION_01B4( 460.10f, 119.40f, 0.00f, 386.10f, 101.60f, 0.00f );
        FUNCTION_01B5( 0x40 );
        MSG( MSG_0911 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_0158( 240, 75 ) == 1 && FUNCTION_015B( 240, 0x00080000 ) == 0 && FUNCTION_015B( 240, 0x00100000 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 0.00f, 229.00f, 0.00f, 0.00f, 192.60f, 0.00f );
        FUNCTION_01B4( 0.00f, 55.30f, 0.00f, 0.00f, 54.00f, 0.00f );
        FUNCTION_01B5( 67 );
        MSG( MSG_0910 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_HighPriestess()
{
}


void AI_P_TUKIBITOA()
{
    
    if ( FUNCTION_0043( 0x40 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 458 );
    }

    
    if ( AI_ENBAD( 4 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 458 );
    }

    int localVariable1 = RNG( 100 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 458 ) == 0 )
    {
        
        if ( localVariable1 < 50 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( localVariable1 < 50 + 20 )
        {
            AI_ACT_SKILL( 61 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 1 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 458 ) == 1 )
    {
        AI_ACT_WEAPON();
        AI_FUNCTION_0063( 4 );
        return;
    }

    AI_FUNCTION_0075();
}


void AI_P_TUKIBITOB()
{
    
    if ( MYHP( 0x0100, 99 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
    }
    else if ( MYHP( 0x0100, 99 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
    }

    
    if ( FUNCTION_0033( 99 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 );
    }
    else if ( FUNCTION_0033( 99 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 );
    }

    int localVariable2 = RNG( 100 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 0 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 0 )
    {
        
        if ( localVariable2 < 50 )
        {
            AI_ACT_SKILL( 192 );
            AI_ID( 0x0100 );
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 1 )
    {
        AI_ACT_SKILL( 192 );
        AI_ID( 276 );
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 1 )
    {
        AI_ACT_SKILL( 192 );
        AI_ID( 276 );
        return;
    }
    else 
    {
        FUNCTION_0090();
        AI_MINE();
        return;
    }

    AI_FUNCTION_0075();
}


void AI_RARE()
{
    int localVariable3 = RNG( 100 );
    int localVariable4 = FUNCTION_0192( 0 );
    localVariable4 = localVariable4 + 10;
    FUNCTION_0193( 0, localVariable4 );
    int localVariable5 = RNG( 4 );
    int localVariable6 = RNG( 100 );
    int localVariable7 = FUNCTION_0192( 1 );
    int localVariable8 = RNG( 100 );
    int localVariable9 = FUNCTION_0192( 2 );
    FUNCTION_0033( localVariable3 );
    FUNCTION_0033( localVariable4 );
    
    if ( localVariable7 < 3 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 5 ) == 0 )
    {
        
        if ( BIT_CHK( 0 + 341 ) == 1 && BIT_CHK( 0 + 338 ) == 1 && BIT_CHK( 0 + 337 ) == 0 && BIT_CHK( 0 + 342 ) == 0 && BIT_CHK( 0 + 344 ) == 0 && BIT_CHK( 0 + 343 ) == 0 && BIT_CHK( 0 + 0x0400 + 1569 ) == 1 )
        {
            
            if ( localVariable6 < 25 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 18, 85 );
            }
            else if ( localVariable6 < 25 + 25 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 69, 85 );
            }
            else if ( localVariable6 < 25 + 25 + 25 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 72, 85 );
            }
            else 
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 70, 85 );
            }

        }
        else if ( BIT_CHK( 0 + 337 ) == 1 && BIT_CHK( 0 + 342 ) == 0 && BIT_CHK( 0 + 344 ) == 0 && BIT_CHK( 0 + 343 ) == 0 )
        {
            
            if ( localVariable6 < 20 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 18, 85 );
            }
            else if ( localVariable6 < 20 + 20 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 69, 85 );
            }
            else if ( localVariable6 < 20 + 20 + 20 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 72, 85 );
            }
            else if ( localVariable6 < 20 + 20 + 20 + 20 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 70, 85 );
            }
            else 
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable4 );
                FUNCTION_01ED( 4000 + 75, 85 );
            }

        }
        else if ( BIT_CHK( 0 + 344 ) == 1 && BIT_CHK( 0 + 342 ) == 0 && BIT_CHK( 0 + 343 ) == 0 )
        {
            
            if ( localVariable6 < 17 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 18, 85 );
            }
            else if ( localVariable6 < 17 + 17 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 69, 85 );
            }
            else if ( localVariable6 < 17 + 17 + 0x10 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 72, 85 );
            }
            else if ( localVariable6 < 17 + 17 + 0x10 + 17 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 70, 85 );
            }
            else if ( localVariable6 < 17 + 17 + 0x10 + 17 + 0x10 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 75, 85 );
            }
            else 
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable4 );
                FUNCTION_01ED( 4000 + 74, 85 );
            }

        }
        else if ( BIT_CHK( 0 + 342 ) == 1 && BIT_CHK( 0 + 343 ) == 0 )
        {
            
            if ( localVariable6 < 14 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 18, 85 );
            }
            else if ( localVariable6 < 14 + 14 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 69, 85 );
            }
            else if ( localVariable6 < 14 + 14 + 15 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 72, 85 );
            }
            else if ( localVariable6 < 14 + 14 + 15 + 14 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 70, 85 );
            }
            else if ( localVariable6 < 14 + 14 + 15 + 14 + 14 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 75, 85 );
            }
            else if ( localVariable6 < 14 + 14 + 15 + 14 + 14 + 15 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 74, 85 );
            }
            else 
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 71, 85 );
            }

        }
        else if ( BIT_CHK( 0 + 343 ) == 1 )
        {
            
            if ( localVariable6 < 12 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 18, 85 );
            }
            else if ( localVariable6 < 12 + 13 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 69, 85 );
            }
            else if ( localVariable6 < 12 + 13 + 12 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 72, 85 );
            }
            else if ( localVariable6 < 12 + 13 + 12 + 13 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 70, 85 );
            }
            else if ( localVariable6 < 12 + 13 + 12 + 13 + 12 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 75, 85 );
            }
            else if ( localVariable6 < 12 + 13 + 12 + 13 + 12 + 13 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 74, 85 );
            }
            else if ( localVariable6 < 12 + 13 + 12 + 13 + 12 + 13 + 12 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 71, 85 );
            }
            else 
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 73, 85 );
            }

        }
        else if ( BIT_CHK( 0 + 0x0400 + 1569 ) == 1 )
        {
            
            if ( localVariable6 < 34 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 18, 85 );
            }
            else if ( localVariable6 < 34 + 33 )
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 69, 85 );
            }
            else 
            {
                localVariable7 = localVariable7 + 1;
                FUNCTION_0193( 1, localVariable7 );
                FUNCTION_01ED( 4000 + 72, 85 );
            }

        }

    }

    
    if ( localVariable5 == 1 )
    {
        FUNCTION_011E( 226 );
    }
    else if ( localVariable5 == 2 )
    {
        FUNCTION_011E( 227 );
    }
    else 
    {
        FUNCTION_011E( 228 );
    }

    
    if ( localVariable4 > localVariable3 )
    {
        AI_ASK_TO_LEAVE();
        return;
    }
    else 
    {
        FUNCTION_01D2( 221 );
        return;
    }

}


void AI_TheEmpress()
{
}


void AI_TheEmperor()
{
}


void AI_TheHierophant()
{
}


void AI_TheLovers()
{
}


void AI_TheChariot()
{
}


void AI_TheJustice()
{
}


void AI_JusticeTheChariot()
{
}


void AI_TheHermit()
{
}


void AI_TheHermitJuden()
{
}


void AI_WheelofFortune()
{
}


void AI_Strength()
{
}


void AI_Takaya1()
{
}


void AI_Jin1()
{
}


void AI_TheHangedMan()
{
}


void AI_H_Sekizo_1()
{
    
    if ( RNG( 1 ) == 0 )
    {
        AI_ACT_SKILL( 2 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 1 );
        AI_TAR_RND();
        return;
    }

}


void AI_H_Sekizo_2()
{
    
    if ( RNG( 1 ) == 0 )
    {
        AI_ACT_SKILL( 20 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 1 );
        AI_TAR_RND();
        return;
    }

}


void AI_H_Sekizo_3()
{
    
    if ( RNG( 1 ) == 0 )
    {
        AI_ACT_SKILL( 29 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 1 );
        AI_TAR_RND();
        return;
    }

}


void AI_H_GISEI_1()
{
    
    if ( FUNCTION_003D( 0x0400 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
    }
    else if ( FUNCTION_003D( 0x0400 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
    }

    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 0 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 1 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
        AI_JIBAKU();
        AI_ACT_SKILL( 309 );
        AI_TAR_RND();
        return;
    }

}


void AI_H_GISEI_2()
{
    
    if ( FUNCTION_003D( 0x0400 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 480 );
    }
    else if ( FUNCTION_003D( 0x0400 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 480 );
    }

    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 480 ) == 0 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 480 ) == 1 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 480 );
        AI_JIBAKU();
        AI_ACT_SKILL( 309 );
        AI_TAR_RND();
        return;
    }

}


void AI_Chidori()
{
}


void AI_Jin2()
{
}


void AI_Takaya2()
{
}


void AI_Nyx_FOOL()
{
}


void AI_Nyx_MAGICIAN()
{
}


void AI_Nyx_PRIESTESS()
{
}


void AI_Nyx_EMPRESS()
{
}


void AI_Nyx_EMPEROR()
{
}


void AI_Nyx_HIEROPHANT()
{
}


void AI_Nyx_LOVERS()
{
}


void AI_Nyx_CHARIOT()
{
}


void AI_Nyx_JUSTICE()
{
}


void AI_Nyx_HERMIT()
{
}


void AI_Nyx_FORTUNE()
{
}


void AI_Nyx_STRENGTH()
{
}


void AI_Nyx_HANGEDMAN()
{
}


void AI_Nyx_DEATH()
{
}


void AI_Nyx_DEATH_Dress()
{
}


void AI_Nyx_DEATH_Turn()
{
}


void AI_Nyx2()
{
}


void AI_KILLER()
{
    int localVariable10 = RNG( 100 );
    int localVariable11 = RNG( 100 );
    int localVariable12 = RNG( 100 );
    int localVariable13 = RNG( 100 );
    
    if ( FUNCTION_0044( 0x00010000 ) == 1 || FUNCTION_0044( 0x00020000 ) == 1 )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( localVariable12 < 25 )
        {
            
            if ( localVariable10 < 15 )
            {
                AI_ACT_SKILL( 6 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable10 < 15 + 15 )
            {
                AI_ACT_SKILL( 24 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable10 < 15 + 15 + 15 )
            {
                AI_ACT_SKILL( 33 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable10 < 15 + 15 + 15 + 15 )
            {
                AI_ACT_SKILL( 15 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable10 < 15 + 15 + 15 + 15 + 20 )
            {
                AI_ACT_SKILL( 142 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 147 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable12 < 25 + 25 )
        {
            
            if ( FUNCTION_004D( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                AI_HANSYA( 3 );
                return;
            }
            else if ( FUNCTION_004F( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                AI_KYUSYU( 3 );
                return;
            }
            else if ( FUNCTION_0051( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                AI_MUKOU( 3 );
                return;
            }
            else if ( FUNCTION_004D( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                AI_HANSYA( 4 );
                return;
            }
            else if ( FUNCTION_004F( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                AI_KYUSYU( 4 );
                return;
            }
            else if ( FUNCTION_0051( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                AI_MUKOU( 4 );
                return;
            }
            else if ( FUNCTION_004D( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                AI_HANSYA( 5 );
                return;
            }
            else if ( FUNCTION_004F( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                AI_KYUSYU( 5 );
                return;
            }
            else if ( FUNCTION_0051( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                AI_MUKOU( 5 );
                return;
            }
            else if ( FUNCTION_004D( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                AI_HANSYA( 6 );
                return;
            }
            else if ( FUNCTION_004F( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                AI_KYUSYU( 6 );
                return;
            }
            else if ( FUNCTION_0051( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                AI_MUKOU( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 221 );
                AI_MINE();
                return;
            }

        }
        else if ( localVariable12 < 25 + 25 + 25 )
        {
            
            if ( localVariable13 < 50 )
            {
                AI_ACT_SKILL( 53 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 47 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable12 < 25 + 25 + 25 + 25 )
        {
            
            if ( AI_ENWEAK_PAI( 3 ) == 1 )
            {
                AI_ACT_SKILL( 3 );
                AI_WEAK( 3 );
                return;
            }
            else if ( AI_ENWEAK_PAI( 4 ) == 1 )
            {
                AI_ACT_SKILL( 21 );
                AI_WEAK( 4 );
                return;
            }
            else if ( AI_ENWEAK_PAI( 5 ) == 1 )
            {
                AI_ACT_SKILL( 30 );
                AI_WEAK( 5 );
                return;
            }
            else if ( AI_ENWEAK_PAI( 6 ) == 1 )
            {
                AI_ACT_SKILL( 12 );
                AI_WEAK( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 38 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        
        if ( localVariable12 < 25 )
        {
            
            if ( localVariable11 < 15 )
            {
                AI_ACT_SKILL( 39 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable11 < 15 + 20 )
            {
                AI_ACT_SKILL( 142 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable11 < 15 + 20 + 15 )
            {
                AI_ACT_SKILL( 147 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable11 < 15 + 20 + 15 + 15 )
            {
                AI_ACT_SKILL( 54 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable11 < 15 + 20 + 15 + 15 + 10 )
            {
                AI_ACT_SKILL( 93 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable11 < 15 + 20 + 15 + 15 + 10 + 10 )
            {
                AI_ACT_SKILL( 76 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 144 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable12 < 25 + 25 )
        {
            
            if ( FUNCTION_004D( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                AI_HANSYA( 3 );
                return;
            }
            else if ( FUNCTION_004F( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                AI_KYUSYU( 3 );
                return;
            }
            else if ( FUNCTION_0051( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                AI_MUKOU( 3 );
                return;
            }
            else if ( FUNCTION_004D( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                AI_HANSYA( 4 );
                return;
            }
            else if ( FUNCTION_004F( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                AI_KYUSYU( 4 );
                return;
            }
            else if ( FUNCTION_0051( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                AI_MUKOU( 4 );
                return;
            }
            else if ( FUNCTION_004D( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                AI_HANSYA( 5 );
                return;
            }
            else if ( FUNCTION_004F( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                AI_KYUSYU( 5 );
                return;
            }
            else if ( FUNCTION_0051( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                AI_MUKOU( 5 );
                return;
            }
            else if ( FUNCTION_004D( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                AI_HANSYA( 6 );
                return;
            }
            else if ( FUNCTION_004F( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                AI_KYUSYU( 6 );
                return;
            }
            else if ( FUNCTION_0051( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                AI_MUKOU( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 221 );
                AI_MINE();
                return;
            }

        }
        else if ( localVariable12 < 25 + 25 + 25 )
        {
            
            if ( localVariable13 < 50 )
            {
                AI_ACT_SKILL( 54 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 48 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable12 < 25 + 25 + 25 + 25 )
        {
            
            if ( AI_ENWEAK_PAI( 3 ) == 1 )
            {
                AI_ACT_SKILL( 3 );
                AI_WEAK( 3 );
                return;
            }
            else if ( AI_ENWEAK_PAI( 4 ) == 1 )
            {
                AI_ACT_SKILL( 21 );
                AI_WEAK( 4 );
                return;
            }
            else if ( AI_ENWEAK_PAI( 5 ) == 1 )
            {
                AI_ACT_SKILL( 30 );
                AI_WEAK( 5 );
                return;
            }
            else if ( AI_ENWEAK_PAI( 6 ) == 1 )
            {
                AI_ACT_SKILL( 12 );
                AI_WEAK( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 38 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_ELIZABETH()
{
    
    if ( FUNCTION_0051( 0 ) == 1 || FUNCTION_004D( 0 ) == 1 || FUNCTION_004F( 0 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
    }
    else if ( FUNCTION_0051( 0 ) == 0 && FUNCTION_004D( 0 ) == 0 && FUNCTION_004F( 0 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
    }

    
    if ( FUNCTION_0051( 1 ) == 1 || FUNCTION_004D( 1 ) == 1 || FUNCTION_004F( 1 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 );
    }
    else if ( FUNCTION_0051( 1 ) == 0 && FUNCTION_004D( 1 ) == 0 && FUNCTION_004F( 1 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 );
    }

    
    if ( FUNCTION_0051( 2 ) == 1 || FUNCTION_004D( 2 ) == 1 || FUNCTION_004F( 2 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 );
    }
    else if ( FUNCTION_0051( 2 ) == 0 && FUNCTION_004D( 2 ) == 0 && FUNCTION_004F( 2 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 );
    }

    
    if ( FUNCTION_0051( 3 ) == 1 || FUNCTION_004D( 3 ) == 1 || FUNCTION_004F( 3 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 451 );
    }
    else if ( FUNCTION_0051( 3 ) == 0 && FUNCTION_004D( 3 ) == 0 && FUNCTION_004F( 3 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 451 );
    }

    
    if ( FUNCTION_0051( 4 ) == 1 || FUNCTION_004D( 4 ) == 1 || FUNCTION_004F( 4 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 452 );
    }
    else if ( FUNCTION_0051( 4 ) == 0 && FUNCTION_004D( 4 ) == 0 && FUNCTION_004F( 4 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 452 );
    }

    
    if ( FUNCTION_0051( 5 ) == 1 || FUNCTION_004D( 5 ) == 1 || FUNCTION_004F( 5 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 453 );
    }
    else if ( FUNCTION_0051( 5 ) == 0 && FUNCTION_004D( 5 ) == 0 && FUNCTION_004F( 5 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 453 );
    }

    
    if ( FUNCTION_0051( 6 ) == 1 || FUNCTION_004D( 6 ) == 1 || FUNCTION_004F( 6 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 454 );
    }
    else if ( FUNCTION_0051( 6 ) == 0 && FUNCTION_004D( 6 ) == 0 && FUNCTION_004F( 6 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 454 );
    }

    
    if ( FUNCTION_0051( 8 ) == 1 || FUNCTION_004D( 8 ) == 1 || FUNCTION_004F( 8 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 455 );
    }
    else if ( FUNCTION_0051( 8 ) == 0 && FUNCTION_004D( 8 ) == 0 && FUNCTION_004F( 8 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 455 );
    }

    
    if ( FUNCTION_0051( 9 ) == 1 || FUNCTION_004D( 9 ) == 1 || FUNCTION_004F( 9 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 456 );
    }
    else if ( FUNCTION_0051( 9 ) == 0 && FUNCTION_004D( 9 ) == 0 && FUNCTION_004F( 9 ) == 0 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 456 );
    }

    int localVariable14 = 0;
    
    if ( FUNCTION_01DE() == 1 )
    {
        localVariable14 = FUNCTION_0192( 1 );
        localVariable14 = localVariable14 + 1;
        FUNCTION_0193( 1, localVariable14 );
    }

    
    if ( localVariable14 > 100 )
    {
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( AI_CHK_PLAYER_ID( BattleUnit.Yukari ) == 1 || AI_CHK_PLAYER_ID( BattleUnit.Aigis ) == 1 || AI_CHK_PLAYER_ID( BattleUnit.Mitsuru ) == 1 || AI_CHK_PLAYER_ID( BattleUnit.Junpei ) == 1 || AI_CHK_PLAYER_ID( BattleUnit.Akihiko ) == 1 || AI_CHK_PLAYER_ID( BattleUnit.Ken ) == 1 || AI_CHK_PLAYER_ID( BattleUnit.ShinjiroMetis ) == 1 || AI_CHK_PLAYER_ID( BattleUnit.Koromaru ) == 1 )
    {
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( FUNCTION_0059( 278 ) == 1 || BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 480 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 480 );
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( FUNCTION_0044( 0x00010000 ) == 1 || FUNCTION_0044( 0x00020000 ) == 1 || BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 480 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 480 );
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( FUNCTION_0033( 50 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 481 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 481 );
        AI_ELIZABETH_STOJKOVIC2();
        return;
    }

    
    if ( FUNCTION_0033( 30 ) == 1 )
    {
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( FUNCTION_01DE() == 1 && FUNCTION_008F() == 0 )
    {
        
        if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 ) == 0 )
        {
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 );
        }
        else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 ) == 0 )
        {
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 );
        }
        else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 ) == 0 )
        {
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 );
        }
        else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 ) == 0 )
        {
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 );
        }
        else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 ) == 0 )
        {
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 );
        }
        else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 ) == 0 )
        {
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 );
        }
        else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 ) == 0 )
        {
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 );
        }
        else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 ) == 0 )
        {
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 );
        }
        else 
        {
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 );
        }

    }

    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 464 ) == 1 )
    {
        AI_ELIZABETH_SURUTO();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 465 ) == 1 )
    {
        AI_ELIZABETH_JACK();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 466 ) == 1 )
    {
        AI_ELIZABETH_TORU();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 467 ) == 1 )
    {
        AI_ELIZABETH_KUR();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 468 ) == 1 )
    {
        AI_ELIZABETH_META();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 469 ) == 1 )
    {
        AI_ELIZABETH_ARISU();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 470 ) == 1 )
    {
        AI_ELIZABETH_NEVI();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 471 ) == 1 )
    {
        AI_ELIZABETH_MASA();
        return;
    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

    AI_ACT_WAIT();
}


void AI_ELIZABETH_SURUTO()
{
    int localVariable15 = RNG( 100 );
    FUNCTION_011E( 216 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 451 ) == 0 )
    {
        
        if ( localVariable15 < 55 )
        {
            AI_ACT_PERSONA( 48, 80 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable15 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable15 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_JACK()
{
    int localVariable16 = RNG( 100 );
    FUNCTION_011E( 217 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 452 ) == 0 )
    {
        
        if ( localVariable16 < 55 )
        {
            AI_ACT_PERSONA( 7, 82 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable16 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable16 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_TORU()
{
    int localVariable17 = RNG( 100 );
    FUNCTION_011E( 218 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 453 ) == 0 )
    {
        
        if ( localVariable17 < 55 )
        {
            AI_ACT_PERSONA( 77, 83 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable17 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable17 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_KUR()
{
    int localVariable18 = RNG( 100 );
    FUNCTION_011E( 219 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 454 ) == 0 )
    {
        
        if ( localVariable18 < 55 )
        {
            AI_ACT_PERSONA( 11, 81 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable18 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable18 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_META()
{
    int localVariable19 = RNG( 100 );
    FUNCTION_011E( 211 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 455 ) == 0 )
    {
        
        if ( localVariable19 < 55 )
        {
            AI_ACT_PERSONA( 140, 85 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable19 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable19 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_ARISU()
{
    int localVariable20 = RNG( 100 );
    FUNCTION_011E( 212 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 456 ) == 0 )
    {
        
        if ( localVariable20 < 55 )
        {
            AI_ACT_PERSONA( 91, 86 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable20 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable20 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_NEVI()
{
    int localVariable21 = RNG( 100 );
    FUNCTION_011E( 213 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 ) == 0 )
    {
        
        if ( localVariable21 < 15 )
        {
            AI_ACT_PERSONA( 0x40, 87 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable21 < 30 )
        {
            AI_ACT_PERSONA( 0x40, 88 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable21 < 45 )
        {
            AI_ACT_PERSONA( 0x40, 89 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable21 < 60 )
        {
            AI_ACT_PERSONA( 0x40, 90 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable21 < 75 )
        {
            AI_ACT_PERSONA( 0x40, 91 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable21 < 82 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable21 < 90 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_MASA()
{
    FUNCTION_011E( 214 );
    AI_ACT_PERSONA( 113, 84 );
    AI_TAR_RND();
}


void AI_ELIZABETH_MASA2()
{
    FUNCTION_011E( 214 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 510 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 510 );
        AI_ACT_PERSONA( 113, 84 );
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 510 ) == 1 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 510 );
        FUNCTION_01D2( 224 );
        AI_TAR_RND();
        return;
    }

}


void AI_ELIZABETH_STOJKOVIC()
{
    FUNCTION_011E( 215 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 511 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 511 );
        AI_ACT_PERSONA( 46, 194 );
        AI_MINE();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 511 ) == 1 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 511 );
        AI_ACT_PERSONA( 46, 84 );
        AI_TAR_RND();
        return;
    }

}


void AI_ELIZABETH_STOJKOVIC2()
{
    FUNCTION_011E( 215 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 509 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 509 );
        AI_ACT_PERSONA( 46, 194 );
        AI_MINE();
        return;
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 509 ) == 1 )
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 509 );
        FUNCTION_01D2( 224 );
        AI_TAR_RND();
        return;
    }

}


void AI_DEBUG()
{
    
    if ( FUNCTION_003B( 4 ) == 1 )
    {
        AI_MYAI( 1 );
        return;
    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_OSHIETE_MAYA()
{
    int localVariable22 = RNG( 100 );
    
    if ( FUNCTION_0158( 1, 20 ) == 1 )
    {
        
        if ( localVariable22 < 50 )
        {
            FUNCTION_01D2( 218 );
            AI_MINE();
            return;
        }
        else if ( localVariable22 < 50 + 50 )
        {
            
            if ( AI_CHK_PLAYER_ID( BattleUnit.Yukari ) == 1 || AI_CHK_PLAYER_ID( BattleUnit.Junpei ) == 1 )
            {
                AI_ACT_WEAPON();
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                FUNCTION_01D2( 218 );
                AI_MINE();
                return;
            }

        }

    }
    else if ( FUNCTION_0158( 1, 20 ) == 0 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Eagle()
{
    int localVariable23 = RNG( 100 );
    int localVariable24 = RNG( 100 );
    int localVariable25 = RNG( 100 );
    
    if ( localVariable23 < 25 )
    {
        AI_ACT_SKILL( 10 );
        AI_TAR_RND();
    }
    else if ( localVariable23 < 25 + 45 )
    {
        
        if ( FUNCTION_0057( 13 ) == 0 )
        {
            AI_ACT_SKILL( 10 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable23 < 25 + 45 + 30 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_HENYOU()
{
    int localVariable26 = RNG( 100 );
    int localVariable27 = RNG( 100 );
    
    if ( FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( localVariable26 < 20 )
        {
            AI_ACT_SKILL( 11 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable26 < 20 + 35 )
        {
            AI_ACT_SKILL( 14 );
            AI_TAR_RND();
        }
        else if ( localVariable26 < 20 + 35 + 10 )
        {
            
            if ( FUNCTION_01C7( 0x80 ) == 1 )
            {
                AI_ACT_SKILL( 212 );
                AI_MINE();
                return;
            }
            else if ( FUNCTION_01C7( 0x40 ) == 0 )
            {
                AI_ACT_SKILL( 218 );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable26 < 20 + 35 + 10 + 5 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( localVariable26 < 20 + 35 + 10 + 5 + 30 )
        {
            
            if ( FUNCTION_0040( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 69 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 11 );
                AI_TAR_RND();
                return;
            }

        }

    }
    else if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( localVariable27 < 10 )
        {
            
            if ( FUNCTION_0057( 192 ) == 0 )
            {
                AI_ACT_SKILL( 192 );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable27 < 10 + 5 )
        {
            
            if ( FUNCTION_01C7( 0x80 ) == 1 )
            {
                AI_ACT_SKILL( 212 );
                AI_MINE();
                return;
            }
            else if ( FUNCTION_01C7( 0x40 ) == 0 )
            {
                AI_ACT_SKILL( 218 );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 14 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable27 < 10 + 5 + 25 )
        {
            AI_ACT_SKILL( 11 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable27 < 10 + 5 + 25 + 35 )
        {
            AI_ACT_SKILL( 14 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable27 < 10 + 5 + 25 + 35 + 20 )
        {
            
            if ( FUNCTION_0040( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 69 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable27 < 10 + 5 + 25 + 35 + 20 + 5 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_KING()
{
    int localVariable28 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        AI_ACT_SKILL( 37 );
        AI_TAR_RND();
        return;
    }

    
    if ( localVariable28 < 10 )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( 63 );
            AI_NOTBAD( 8 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 47 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable28 < 10 + 20 )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 221 );
            AI_MINE();
            return;
        }

    }
    else if ( localVariable28 < 10 + 20 + 20 )
    {
        AI_ACT_SKILL( 221 );
        AI_MINE();
        return;
    }
    else if ( localVariable28 < 10 + 20 + 20 + 20 )
    {
        AI_ACT_SKILL( 47 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 48 );
        AI_TAR_RND();
        return;
    }

}


void AI_DANCING_KAI()
{
    int localVariable29 = RNG( 100 );
    int localVariable30 = RNG( 100 );
    
    if ( FUNCTION_0033( 60 ) == 0 )
    {
        
        if ( localVariable29 < 30 )
        {
            AI_ACT_SKILL( 28 );
            AI_NOTBAD( 0x00100000 );
            return;
        }
        else if ( localVariable29 < 30 + 30 )
        {
            AI_ACT_SKILL( 19 );
            AI_NOTBAD( 0x00100000 );
            return;
        }
        else if ( localVariable29 < 30 + 30 + 30 )
        {
            AI_ACT_SKILL( 1 );
            AI_NOTBAD( 0x00100000 );
            return;
        }
        else if ( localVariable29 < 30 + 30 + 30 + 10 )
        {
            
            if ( FUNCTION_0040( 4 ) == 0 )
            {
                AI_ACT_SKILL( 62 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 1 );
                AI_NOTBAD( 0x00100000 );
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 60 ) == 1 )
    {
        
        if ( localVariable30 < 50 )
        {
            AI_ACT_SKILL( 13 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable30 < 50 + 5 )
        {
            AI_ACT_SKILL( 192 );
            AI_HPMIN();
            return;
        }
        else if ( localVariable30 < 50 + 5 + 15 )
        {
            AI_ACT_SKILL( 28 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable30 < 50 + 5 + 15 + 15 )
        {
            AI_ACT_SKILL( 19 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 1 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_NAKU_KAI()
{
    int localVariable31 = RNG( 100 );
    int localVariable32 = RNG( 100 );
    
    if ( FUNCTION_008F() == 0 )
    {
        
        if ( localVariable31 < 30 )
        {
            AI_ACT_SKILL( 4 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable31 < 30 + 50 )
        {
            AI_ACT_SKILL( 2 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0040( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 68 );
            AI_NOTBAD( 0x80 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 4 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_008F() == 1 )
    {
        
        if ( localVariable32 < 50 )
        {
            AI_ACT_SKILL( 125 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 140 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_GOUKI_KAI()
{
    int localVariable33 = RNG( 100 );
    int localVariable34 = RNG( 100 );
    
    if ( FUNCTION_0047() == 1 )
    {
        AI_ACT_SKILL( 214 );
        AI_MINE();
        return;
    }

    
    if ( FUNCTION_01C7( 1 ) == 1 )
    {
        
        if ( localVariable34 < 50 )
        {
            AI_ACT_SKILL( 114 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_01C7( 1 ) == 0 )
    {
        
        if ( localVariable33 < 40 )
        {
            AI_ACT_SKILL( 214 );
            AI_MINE();
            return;
        }
        else if ( localVariable33 < 40 + 20 )
        {
            
            if ( FUNCTION_0044( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 211 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable33 < 40 + 20 + 30 )
        {
            AI_ACT_SKILL( 140 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable33 < 40 + 20 + 30 + 10 )
        {
            
            if ( FUNCTION_0195( 0x10 ) < 3 )
            {
                AI_ACT_SKILL( 216 );
                AI_NOTHOJO( 272 );
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_FUKUTU_KAI()
{
    int localVariable35 = RNG( 100 );
    int localVariable36 = RNG( 100 );
    int localVariable37 = RNG( 100 );
    int localVariable38 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( 192 );
        AI_MINE();
        return;
    }

    
    if ( FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( localVariable36 < 70 )
            {
                AI_ACT_SKILL( 14 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable36 < 70 + 30 )
            {
                AI_ACT_SKILL( 12 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WAIT();
                AI_MINE();
                return;
            }

        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            
            if ( FUNCTION_004D( 6 ) == 1 || FUNCTION_004F( 6 ) == 1 || FUNCTION_0051( 6 ) == 1 )
            {
                
                if ( localVariable38 < 50 )
                {
                    
                    if ( FUNCTION_004D( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( 231 );
                        AI_HANSYA( 6 );
                        return;
                    }
                    else if ( FUNCTION_004F( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( 231 );
                        AI_KYUSYU( 6 );
                        return;
                    }
                    else if ( FUNCTION_0051( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( 231 );
                        AI_MUKOU( 6 );
                        return;
                    }

                }
                else if ( localVariable38 < 50 + 50 )
                {
                    
                    if ( localVariable35 < 30 )
                    {
                        AI_ACT_SKILL( 12 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( localVariable35 < 30 + 15 )
                    {
                        AI_ACT_SKILL( 114 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( localVariable35 < 30 + 15 + 30 )
                    {
                        AI_ACT_SKILL( 221 );
                        AI_MINE();
                        return;
                    }
                    else if ( localVariable35 < 30 + 15 + 30 + 20 )
                    {
                        AI_ACT_SKILL( 45 );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_WEAPON();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_WAIT();
                    AI_MINE();
                    return;
                }

            }
            else if ( localVariable35 < 30 )
            {
                AI_ACT_SKILL( 12 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable35 < 30 + 15 )
            {
                AI_ACT_SKILL( 114 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable35 < 30 + 15 + 30 )
            {
                AI_ACT_SKILL( 221 );
                AI_MINE();
                return;
            }
            else if ( localVariable35 < 30 + 15 + 30 + 20 )
            {
                AI_ACT_SKILL( 45 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( localVariable36 < 70 )
            {
                AI_ACT_SKILL( 14 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable36 < 70 + 30 )
            {
                AI_ACT_SKILL( 12 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WAIT();
                AI_MINE();
                return;
            }

        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            
            if ( FUNCTION_004D( 6 ) == 1 || FUNCTION_004F( 6 ) == 1 || FUNCTION_0051( 6 ) == 1 )
            {
                
                if ( localVariable38 < 50 )
                {
                    
                    if ( FUNCTION_004D( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( 231 );
                        AI_HANSYA( 6 );
                        return;
                    }
                    else if ( FUNCTION_004F( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( 231 );
                        AI_KYUSYU( 6 );
                        return;
                    }
                    else if ( FUNCTION_0051( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( 231 );
                        AI_MUKOU( 6 );
                        return;
                    }

                }
                else if ( localVariable38 < 50 + 50 )
                {
                    
                    if ( localVariable37 < 10 )
                    {
                        AI_ACT_SKILL( 117 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( localVariable37 < 10 + 25 )
                    {
                        AI_ACT_SKILL( 221 );
                        AI_MINE();
                        return;
                    }
                    else if ( localVariable37 < 10 + 25 + 35 )
                    {
                        AI_ACT_SKILL( 12 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( localVariable37 < 10 + 25 + 35 + 20 )
                    {
                        
                        if ( FUNCTION_01C7( 0x40 ) == 0 )
                        {
                            AI_ACT_SKILL( 218 );
                            AI_MINE();
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( 114 );
                            AI_TAR_RND();
                        }

                    }
                    else if ( localVariable37 < 10 + 25 + 35 + 20 + 10 )
                    {
                        
                        if ( FUNCTION_01C7( 0x00020000 ) == 0 )
                        {
                            AI_ACT_SKILL( 242 );
                            AI_TAR_RND();
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( 114 );
                            AI_TAR_RND();
                            return;
                        }

                    }
                    else 
                    {
                        AI_ACT_WAIT();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_WAIT();
                    AI_MINE();
                    return;
                }

            }
            else if ( localVariable37 < 10 )
            {
                AI_ACT_SKILL( 117 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable37 < 10 + 25 )
            {
                AI_ACT_SKILL( 221 );
                AI_MINE();
                return;
            }
            else if ( localVariable37 < 10 + 25 + 35 )
            {
                AI_ACT_SKILL( 12 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable37 < 10 + 25 + 35 + 20 )
            {
                
                if ( FUNCTION_01C7( 0x40 ) == 0 )
                {
                    AI_ACT_SKILL( 218 );
                    AI_MINE();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 114 );
                    AI_TAR_RND();
                }

            }
            else if ( localVariable37 < 10 + 25 + 35 + 20 + 10 )
            {
                
                if ( FUNCTION_01C7( 0x00020000 ) == 0 )
                {
                    AI_ACT_SKILL( 242 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 114 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_WAIT();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_GAIA_KAI()
{
    int localVariable39 = RNG( 100 );
    int localVariable40 = RNG( 100 );
    int localVariable41 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( 75 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( localVariable40 < 40 )
        {
            
            if ( localVariable41 < 10 )
            {
                AI_ACT_SKILL( 118 );
                AI_ID( 1 );
                return;
            }
            else if ( localVariable41 < 10 + 90 )
            {
                AI_ACT_SKILL( 118 );
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable40 < 40 + 40 )
        {
            
            if ( localVariable41 < 10 )
            {
                AI_ACT_SKILL( 122 );
                AI_ID( 1 );
                return;
            }
            else if ( localVariable41 < 10 + 90 )
            {
                AI_ACT_SKILL( 122 );
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_01C7( 0x0400 ) == 0 )
    {
        
        if ( localVariable39 < 40 )
        {
            AI_ACT_SKILL( 220 );
            AI_MINE();
            return;
        }
        else if ( localVariable39 < 40 + 30 )
        {
            
            if ( FUNCTION_0044( 0x4000 ) == 0 )
            {
                AI_ACT_SKILL( 226 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 220 );
                AI_MINE();
                return;
            }

        }
        else if ( localVariable39 < 40 + 30 + 15 )
        {
            
            if ( FUNCTION_0043( 0x10 ) == 0 )
            {
                AI_ACT_SKILL( 216 );
                AI_NOTHOJO( 272 );
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_MEGATON_KAI()
{
    int localVariable42 = RNG( 100 );
    int localVariable43 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( localVariable43 < 50 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable43 < 50 + 50 )
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( 147 );
        AI_FUNCTION_0063( 0x00100000 );
        return;
    }

    
    if ( localVariable42 < 15 )
    {
        
        if ( FUNCTION_0040( 2 ) == 0 )
        {
            AI_ACT_SKILL( 60 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 221 );
            AI_MINE();
            return;
        }

    }
    else if ( localVariable42 < 15 + 20 )
    {
        
        if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable42 < 15 + 20 + 35 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( localVariable42 < 15 + 20 + 35 + 30 )
    {
        AI_ACT_SKILL( 221 );
        AI_MINE();
        return;
    }
    else 
    {
        AI_ACT_WAIT();
        AI_TAR_RND();
        return;
    }

}


void AI_NEMURU_KAI()
{
    int localVariable44 = RNG( 100 );
    
    if ( AI_ENBAD( 8 ) == 1 )
    {
        AI_ACT_SKILL( 65 );
        AI_TAR_RND();
        return;
    }

    
    if ( localVariable44 < 25 )
    {
        
        if ( FUNCTION_003C( 1 ) == 0 )
        {
            AI_ACT_SKILL( 47 );
            FUNCTION_013D( 1 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable44 < 25 + 35 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable44 < 25 + 35 + 25 )
    {
        AI_ACT_SKILL( 38 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0040( 8 ) == 0 )
    {
        AI_ACT_SKILL( 63 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 65 );
        AI_TAR_RND();
        return;
    }

}


void AI_JIGOKU_KAI()
{
    int localVariable45 = RNG( 100 );
    int localVariable46 = RNG( 100 );
    int localVariable47 = RNG( 100 );
    int localVariable48 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_0040( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( localVariable46 < 70 )
            {
                AI_ACT_SKILL( 33 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable46 < 70 + 30 )
            {
                AI_ACT_SKILL( 30 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WAIT();
                AI_MINE();
                return;
            }

        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            
            if ( FUNCTION_004D( 5 ) == 1 || FUNCTION_004F( 5 ) == 1 || FUNCTION_0051( 5 ) == 1 )
            {
                
                if ( localVariable48 < 50 )
                {
                    
                    if ( FUNCTION_004D( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( 232 );
                        AI_HANSYA( 5 );
                        return;
                    }
                    else if ( FUNCTION_004F( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( 232 );
                        AI_KYUSYU( 5 );
                        return;
                    }
                    else if ( FUNCTION_0051( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( 232 );
                        AI_MUKOU( 5 );
                        return;
                    }

                }
                else if ( localVariable48 < 50 + 50 )
                {
                    
                    if ( localVariable45 < 30 )
                    {
                        AI_ACT_SKILL( 30 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( localVariable45 < 30 + 20 )
                    {
                        AI_ACT_SKILL( 117 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( localVariable45 < 30 + 20 + 30 )
                    {
                        AI_ACT_SKILL( 221 );
                        AI_MINE();
                        return;
                    }
                    else if ( localVariable45 < 30 + 20 + 30 + 10 )
                    {
                        AI_ACT_SKILL( 51 );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_WEAPON();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_WAIT();
                    AI_MINE();
                    return;
                }

            }
            else if ( localVariable45 < 30 )
            {
                AI_ACT_SKILL( 30 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable45 < 30 + 20 )
            {
                AI_ACT_SKILL( 117 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable45 < 30 + 20 + 30 )
            {
                AI_ACT_SKILL( 221 );
                AI_MINE();
                return;
            }
            else if ( localVariable45 < 30 + 20 + 30 + 10 )
            {
                AI_ACT_SKILL( 51 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( localVariable46 < 70 )
            {
                AI_ACT_SKILL( 33 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable46 < 70 + 30 )
            {
                AI_ACT_SKILL( 30 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WAIT();
                AI_MINE();
                return;
            }

        }
        else if ( FUNCTION_01C7( 221 ) == 0 )
        {
            
            if ( FUNCTION_004D( 5 ) == 1 || FUNCTION_004F( 5 ) == 1 || FUNCTION_0051( 5 ) == 1 )
            {
                
                if ( localVariable48 < 50 )
                {
                    
                    if ( FUNCTION_004D( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( 232 );
                        AI_HANSYA( 5 );
                        return;
                    }
                    else if ( FUNCTION_004F( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( 232 );
                        AI_KYUSYU( 5 );
                        return;
                    }
                    else if ( FUNCTION_0051( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( 232 );
                        AI_MUKOU( 5 );
                        return;
                    }

                }
                else if ( localVariable48 < 50 + 50 )
                {
                    
                    if ( localVariable47 < 20 )
                    {
                        AI_ACT_SKILL( 140 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( localVariable47 < 20 + 20 )
                    {
                        AI_ACT_SKILL( 221 );
                        AI_MINE();
                        return;
                    }
                    else if ( localVariable47 < 20 + 20 + 30 )
                    {
                        AI_ACT_SKILL( 30 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( localVariable47 < 20 + 20 + 30 + 20 )
                    {
                        
                        if ( FUNCTION_01C7( 0x40 ) == 0 )
                        {
                            AI_ACT_SKILL( 218 );
                            AI_MINE();
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( 140 );
                            AI_TAR_RND();
                        }

                    }
                    else if ( localVariable47 < 20 + 20 + 30 + 20 + 10 )
                    {
                        
                        if ( FUNCTION_0043( 0x00010000 ) == 0 )
                        {
                            AI_ACT_SKILL( 241 );
                            AI_TAR_RND();
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( 140 );
                            AI_TAR_RND();
                            return;
                        }

                    }
                    else 
                    {
                        AI_ACT_WAIT();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_WAIT();
                    AI_MINE();
                    return;
                }

            }
            else if ( localVariable47 < 20 )
            {
                AI_ACT_SKILL( 140 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable47 < 20 + 20 )
            {
                AI_ACT_SKILL( 221 );
                AI_MINE();
                return;
            }
            else if ( localVariable47 < 20 + 20 + 30 )
            {
                AI_ACT_SKILL( 30 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable47 < 20 + 20 + 30 + 20 )
            {
                
                if ( FUNCTION_01C7( 0x40 ) == 0 )
                {
                    AI_ACT_SKILL( 218 );
                    AI_MINE();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 140 );
                    AI_TAR_RND();
                }

            }
            else if ( localVariable47 < 20 + 20 + 30 + 20 + 10 )
            {
                
                if ( FUNCTION_0043( 0x00010000 ) == 0 )
                {
                    AI_ACT_SKILL( 241 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 140 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_WAIT();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_BURNING()
{
    int localVariable49 = RNG( 100 );
    int localVariable50 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( localVariable50 < 70 )
        {
            AI_ACT_SKILL( 147 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x80 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_01C7( 0x0400 ) == 0 )
    {
        
        if ( localVariable49 < 25 )
        {
            AI_ACT_SKILL( 220 );
            AI_MINE();
            return;
        }
        else if ( localVariable49 < 25 + 20 )
        {
            
            if ( FUNCTION_0044( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 211 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 6 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable49 < 25 + 20 + 25 )
        {
            AI_ACT_SKILL( 0x80 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable49 < 25 + 20 + 25 + 15 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_HEIKOU_KAI()
{
    int localVariable51 = RNG( 100 );
    int localVariable52 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( localVariable52 < 50 )
        {
            AI_ACT_SKILL( 118 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 127 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_003E( 0x80 ) == 1 )
        {
            AI_ACT_SKILL( 202 );
            AI_FUNCTION_0063( 0x80 );
            return;
        }
        else if ( FUNCTION_003E( 4 ) == 1 )
        {
            
            if ( FUNCTION_003D( 4 ) == 0 )
            {
                AI_ACT_SKILL( 200 );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_003D( 4 ) == 1 )
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( FUNCTION_0035( 90 ) == 1 )
        {
            AI_ACT_SKILL( 193 );
            AI_HPMIN();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 122 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_008F() == 0 )
    {
        
        if ( localVariable51 < 10 )
        {
            AI_ACT_SKILL( 118 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable51 < 10 + 5 )
        {
            AI_ACT_SKILL( 124 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable51 < 10 + 5 + 10 )
        {
            AI_ACT_SKILL( 125 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable51 < 10 + 5 + 10 + 5 )
        {
            AI_ACT_SKILL( 126 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable51 < 10 + 5 + 10 + 5 + 10 )
        {
            AI_ACT_SKILL( 127 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable51 < 10 + 5 + 10 + 5 + 10 + 15 )
        {
            
            if ( FUNCTION_0058( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 0x80 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 129 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable51 < 10 + 5 + 10 + 5 + 10 + 15 + 25 )
        {
            AI_ACT_SKILL( 129 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_01C7( 0x0400 ) == 0 )
        {
            AI_ACT_SKILL( 220 );
            AI_MINE();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x80 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_TENBATU()
{
    int localVariable53 = RNG( 100 );
    
    if ( AI_ENBAD( 0x10 ) == 1 && FUNCTION_01C7( 0x00010000 ) == 0 )
    {
        AI_ACT_SKILL( 241 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_01C7( 0x00010000 ) == 1 )
    {
        AI_ACT_SKILL( 66 );
        AI_TAR_RND();
        return;
    }

    
    if ( localVariable53 < 30 )
    {
        AI_ACT_SKILL( 38 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable53 < 30 + 30 )
    {
        
        if ( FUNCTION_0057( 39 ) == 0 )
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 38 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable53 < 30 + 30 + 30 )
    {
        
        if ( FUNCTION_01C7( 0x00010000 ) == 1 )
        {
            AI_ACT_SKILL( 66 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 241 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0043( 0x00010000 ) == 0 )
    {
        AI_ACT_SKILL( 241 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }

}


void AI_ROYAL_KAI()
{
    int localVariable54 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_0033( 90 ) == 1 )
        {
            AI_ACT_SKILL( 192 );
            AI_HPMIN();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_003E( 1 ) == 1 )
    {
        AI_ACT_SKILL( 237 );
        AI_FUNCTION_0063( 1 );
        return;
    }

    
    if ( FUNCTION_003E( 4 ) == 1 )
    {
        AI_ACT_SKILL( 199 );
        AI_FUNCTION_0063( 4 );
        return;
    }

    
    if ( FUNCTION_003E( 0x80 ) == 1 )
    {
        AI_ACT_SKILL( 202 );
        AI_FUNCTION_0063( 0x80 );
        return;
    }

    
    if ( FUNCTION_003E( 8 ) == 1 )
    {
        AI_ACT_SKILL( 199 );
        AI_FUNCTION_0063( 8 );
        return;
    }

    
    if ( localVariable54 < 20 )
    {
        
        if ( AI_CHK_PLAYER_ID( BattleUnit.Yukari ) == 1 )
        {
            AI_ACT_SKILL( 57 );
            AI_ID( 2 );
            return;
        }
        else if ( AI_ENBAD( 1 ) == 1 || AI_ENBAD( 4 ) == 1 || AI_ENBAD( 0x80 ) == 1 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( AI_ENBAD( 1 ) == 0 && AI_ENBAD( 4 ) == 0 && AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 57 );
            AI_NOTBAD( 1 );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else if ( localVariable54 < 20 + 10 )
    {
        
        if ( AI_ENBAD( 1 ) == 0 || AI_ENBAD( 4 ) == 0 || AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 58 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 125 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable54 < 20 + 10 + 20 )
    {
        
        if ( AI_ENBAD( 4 ) == 1 || AI_ENBAD( 1 ) == 1 || AI_ENBAD( 0x80 ) == 1 )
        {
            AI_ACT_SKILL( 117 );
            AI_TAR_RND();
            return;
        }
        else if ( AI_ENBAD( 13 ) == 0 && AI_ENBAD( 1 ) == 0 && AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 61 );
            AI_NOTBAD( 13 );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( localVariable54 < 20 + 10 + 20 + 10 )
    {
        
        if ( AI_ENBAD( 4 ) == 0 || AI_ENBAD( 1 ) == 0 || AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable54 < 20 + 10 + 20 + 10 + 20 )
    {
        
        if ( AI_ENBAD( 4 ) == 1 || AI_ENBAD( 1 ) == 1 || AI_ENBAD( 0x80 ) == 1 )
        {
            AI_ACT_SKILL( 68 );
            AI_TAR_RND();
            return;
        }
        else if ( AI_ENBAD( 13 ) == 0 && AI_ENBAD( 1 ) == 0 && AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 68 );
            AI_NOTBAD( 0x80 );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else if ( localVariable54 < 20 + 10 + 20 + 10 + 20 + 10 )
    {
        
        if ( AI_ENBAD( 4 ) == 0 || AI_ENBAD( 1 ) == 0 || AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( 143 );
        AI_TAR_RND();
        return;
    }

}


void AI_NORBLE_KAI()
{
    int localVariable55 = RNG( 100 );
    int localVariable56 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_0058( 144 ) == 0 )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 75 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0033( 20 ) == 0 )
    {
        
        if ( localVariable55 < 25 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable55 < 25 + 25 )
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable55 < 25 + 25 + 25 )
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable55 < 25 + 25 + 25 + 25 )
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( FUNCTION_0033( 20 ) == 1 )
    {
        
        if ( localVariable56 < 18 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable56 < 18 + 18 )
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable56 < 18 + 18 + 18 )
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable56 < 18 + 18 + 18 + 18 )
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable56 < 18 + 18 + 18 + 18 + 7 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable56 < 18 + 18 + 18 + 18 + 7 + 7 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable56 < 18 + 18 + 18 + 18 + 7 + 7 + 7 )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable56 < 18 + 18 + 18 + 18 + 7 + 7 + 7 + 7 )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_NIKUYOKU_KAI()
{
    int localVariable57 = RNG( 100 );
    int localVariable58 = RNG( 100 );
    
    if ( FUNCTION_004D( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        AI_HANSYA( 3 );
        return;
    }
    else if ( FUNCTION_004F( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        AI_KYUSYU( 3 );
        return;
    }
    else if ( FUNCTION_0051( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        AI_MUKOU( 3 );
        return;
    }

    
    if ( FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( localVariable57 < 20 )
        {
            AI_ACT_SKILL( 94 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable57 < 20 + 15 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable57 < 20 + 15 + 25 )
        {
            AI_ACT_SKILL( 53 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable57 < 20 + 15 + 25 + 10 )
        {
            
            if ( FUNCTION_01C7( 0x00010000 ) == 0 )
            {
                AI_ACT_SKILL( 241 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( FUNCTION_0044( 1 ) == 1 || FUNCTION_0044( 0x40 ) == 1 || FUNCTION_0044( 0x10 ) == 1 )
        {
            AI_ACT_SKILL( 223 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0043( 2 ) == 1 || FUNCTION_0043( 0x80 ) == 1 || FUNCTION_0043( 0x20 ) == 1 )
        {
            AI_ACT_SKILL( 212 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable58 < 30 )
        {
            AI_ACT_SKILL( 93 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable58 < 30 + 30 )
        {
            AI_ACT_SKILL( 52 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable58 < 30 + 30 + 20 )
        {
            
            if ( FUNCTION_0043( 1 ) == 0 )
            {
                AI_ACT_SKILL( 214 );
                AI_NOTHOJO( 5 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 93 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable58 < 30 + 30 + 20 + 20 )
        {
            
            if ( FUNCTION_0043( 0x40 ) == 0 )
            {
                AI_ACT_SKILL( 218 );
                AI_NOTHOJO( 0x40 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 52 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_ZENNOU()
{
    int localVariable59 = RNG( 100 );
    int localVariable60 = RNG( 100 );
    
    if ( FUNCTION_0044( 0x00020000 ) == 1 )
    {
        
        if ( FUNCTION_0049( 5 ) == 0 )
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0049( 5 ) == 1 )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_0033( 30 ) == 0 )
        {
            
            if ( FUNCTION_0159( 1, 5 ) == 0 )
            {
                AI_ACT_SKILL( 94 );
                AI_ID( 1 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 38 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable59 < 20 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable59 < 20 + 20 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable59 < 20 + 20 + 20 )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable59 < 20 + 20 + 20 + 20 )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0162( 1, 9 ) == 1 && FUNCTION_015B( 1, 0x00100000 ) == 0 )
    {
        
        if ( FUNCTION_0160( 1, 3 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 3 );
            AI_ID( 1 );
            return;
        }
        else if ( FUNCTION_0160( 1, 4 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 21 );
            AI_ID( 1 );
            return;
        }
        else if ( FUNCTION_0160( 1, 5 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 30 );
            AI_ID( 1 );
            return;
        }
        else if ( FUNCTION_0160( 1, 6 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 12 );
            AI_ID( 1 );
        }

    }

    
    if ( FUNCTION_0162( 1, 18 ) == 1 && FUNCTION_015B( 1, 0x00100000 ) == 0 )
    {
        
        if ( FUNCTION_0160( 1, 3 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 3 );
            AI_ID( 1 );
            return;
        }
        else if ( FUNCTION_0160( 1, 4 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 21 );
            AI_ID( 1 );
            return;
        }
        else if ( FUNCTION_0160( 1, 5 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 30 );
            AI_ID( 1 );
            return;
        }
        else if ( FUNCTION_0160( 1, 6 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 12 );
            AI_ID( 1 );
        }

    }

    
    if ( FUNCTION_0162( 1, 27 ) == 1 && FUNCTION_015B( 1, 0x00100000 ) == 0 )
    {
        
        if ( FUNCTION_0160( 1, 3 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 3 );
            AI_ID( 1 );
            return;
        }
        else if ( FUNCTION_0160( 1, 4 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 21 );
            AI_ID( 1 );
            return;
        }
        else if ( FUNCTION_0160( 1, 5 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 30 );
            AI_ID( 1 );
            return;
        }
        else if ( FUNCTION_0160( 1, 6 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 12 );
            AI_ID( 1 );
        }

    }

    
    if ( FUNCTION_0162( 1, 36 ) == 1 && FUNCTION_015B( 1, 0x00100000 ) == 0 )
    {
        
        if ( FUNCTION_0160( 1, 3 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 3 );
            AI_ID( 1 );
            return;
        }
        else if ( FUNCTION_0160( 1, 4 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 21 );
            AI_ID( 1 );
            return;
        }
        else if ( FUNCTION_0160( 1, 5 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 30 );
            AI_ID( 1 );
            return;
        }
        else if ( FUNCTION_0160( 1, 6 ) == 1 && FUNCTION_0057( 94 ) == 0 )
        {
            AI_ACT_SKILL( 12 );
            AI_ID( 1 );
        }

    }

    
    if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( localVariable59 < 20 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable59 < 20 + 20 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable59 < 20 + 20 + 20 )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable59 < 20 + 20 + 20 + 20 )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 38 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 && FUNCTION_0033( 20 ) == 0 )
    {
        
        if ( localVariable60 < 25 )
        {
            AI_ACT_SKILL( 54 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable60 < 25 + 25 )
        {
            AI_ACT_SKILL( 48 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable60 < 25 + 25 + 25 )
        {
            AI_ACT_SKILL( 38 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable60 < 25 + 25 + 25 + 25 )
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( FUNCTION_0033( 20 ) == 1 )
    {
        
        if ( AI_ENWEAK_ST_PAI( 3 ) == 1 )
        {
            AI_ACT_SKILL( 3 );
            AI_WEAK( 3 );
            return;
        }
        else if ( AI_ENWEAK_ST_PAI( 4 ) == 1 )
        {
            AI_ACT_SKILL( 21 );
            AI_WEAK( 4 );
            return;
        }
        else if ( AI_ENWEAK_ST_PAI( 6 ) == 1 )
        {
            AI_ACT_SKILL( 12 );
            AI_WEAK( 6 );
            return;
        }
        else if ( AI_ENWEAK_ST_PAI( 5 ) == 1 )
        {
            AI_ACT_SKILL( 30 );
            AI_WEAK( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_FUNNU_KAI()
{
    int localVariable61 = RNG( 100 );
    int localVariable62 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_0033( 20 ) == 0 )
    {
        
        if ( localVariable61 < 20 )
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable61 < 20 + 20 )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable61 < 20 + 20 + 20 )
        {
            AI_ACT_SKILL( 220 );
            AI_MINE();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 20 ) == 1 )
    {
        
        if ( localVariable62 < 50 )
        {
            AI_ACT_SKILL( 40 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable62 < 50 + 50 )
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_AIHEK()
{
    int localVariable63 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_005E( 20 ) == 1 )
    {
        AI_ACT_SKILL( 221 );
        AI_MINE();
        return;
    }

    
    if ( localVariable63 < 5 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( localVariable63 < 5 + 20 )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( 67 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable63 < 5 + 20 + 15 )
    {
        
        if ( FUNCTION_0044( 0x00400000 ) == 0 )
        {
            AI_ACT_SKILL( 74 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable63 < 5 + 20 + 15 + 25 )
    {
        AI_ACT_SKILL( 143 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable63 < 5 + 20 + 15 + 25 + 20 )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable63 < 5 + 20 + 15 + 25 + 20 + 5 )
    {
        
        if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable63 < 5 + 20 + 15 + 25 + 20 + 5 + 5 )
    {
        
        if ( FUNCTION_0044( 0x20 ) == 0 )
        {
            AI_ACT_SKILL( 209 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable63 < 5 + 20 + 15 + 25 + 20 + 5 + 5 + 5 )
    {
        
        if ( FUNCTION_0044( 2 ) == 0 )
        {
            AI_ACT_SKILL( 207 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_KYOUSIN()
{
    int localVariable64 = RNG( 100 );
    int localVariable65 = RNG( 100 );
    int localVariable66 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( localVariable65 < 50 )
        {
            AI_ACT_SKILL( 29 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable65 < 50 + 50 )
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }

    
    if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( localVariable66 < 20 )
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable66 < 20 + 20 )
        {
            
            if ( AI_ENBAD( 0x80 ) == 1 )
            {
                AI_ACT_SKILL( 0x20 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 69 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable66 < 20 + 20 + 30 )
        {
            AI_ACT_SKILL( 221 );
            AI_MINE();
            return;
        }
        else if ( localVariable66 < 20 + 20 + 30 + 30 )
        {
            
            if ( FUNCTION_004D( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                AI_HANSYA( 5 );
                return;
            }
            else if ( FUNCTION_004F( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                AI_KYUSYU( 5 );
                return;
            }
            else if ( FUNCTION_0051( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                AI_MUKOU( 5 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 0x20 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( localVariable64 < 20 )
    {
        
        if ( AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable64 < 20 + 20 )
    {
        AI_ACT_SKILL( 0x20 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable64 < 20 + 20 + 20 )
    {
        AI_ACT_SKILL( 221 );
        AI_MINE();
        return;
    }
    else if ( localVariable64 < 20 + 20 + 20 + 30 )
    {
        AI_ACT_SKILL( 29 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_MAGS_KAI()
{
    int localVariable67 = RNG( 100 );
    int localVariable68 = RNG( 100 );
    int localVariable69 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( localVariable68 < 45 )
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable68 < 45 + 15 )
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable68 < 45 + 15 + 40 )
        {
            
            if ( FUNCTION_0033( 30 ) == 1 )
            {
                
                if ( FUNCTION_004D( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    AI_HANSYA( 4 );
                    return;
                }
                else if ( FUNCTION_004F( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    AI_KYUSYU( 4 );
                    return;
                }
                else if ( FUNCTION_0051( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    AI_MUKOU( 4 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 23 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( 23 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }

    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( localVariable67 < 35 )
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable67 < 35 + 5 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( localVariable67 < 35 + 5 + 20 )
        {
            AI_ACT_SKILL( 221 );
            AI_MINE();
            return;
        }
        else if ( localVariable67 < 35 + 5 + 20 + 20 )
        {
            
            if ( FUNCTION_0043( 0x00020000 ) == 0 )
            {
                AI_ACT_SKILL( 242 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 23 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( localVariable69 < 50 )
        {
            AI_ACT_SKILL( 21 );
            AI_HPMIN();
            return;
        }
        else if ( localVariable69 < 50 + 50 )
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable69 < 50 + 50 + 50 )
        {
            AI_ACT_SKILL( 221 );
            AI_MINE();
            return;
        }
        else if ( FUNCTION_004D( 4 ) == 1 )
        {
            AI_ACT_SKILL( 230 );
            AI_HANSYA( 4 );
            return;
        }
        else if ( FUNCTION_004F( 4 ) == 1 )
        {
            AI_ACT_SKILL( 230 );
            AI_KYUSYU( 4 );
            return;
        }
        else if ( FUNCTION_0051( 4 ) == 1 )
        {
            AI_ACT_SKILL( 230 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_GRAND_MAGS()
{
    int localVariable70 = RNG( 100 );
    int localVariable71 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( localVariable71 < 50 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable71 < 50 + 30 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( localVariable70 < 20 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable70 < 20 + 20 )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable70 < 20 + 20 + 20 )
    {
        AI_ACT_SKILL( 221 );
        AI_MINE();
        return;
    }
    else if ( localVariable70 < 20 + 20 + 20 + 20 )
    {
        
        if ( AI_ENBAD( 4 ) == 0 )
        {
            AI_ACT_SKILL( 62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable70 < 20 + 20 + 20 + 20 + 15 )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_KYOURAN_MALIA()
{
    int localVariable72 = RNG( 100 );
    
    if ( localVariable72 < 20 )
    {
        AI_ACT_SKILL( 21 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable72 < 20 + 25 )
    {
        AI_ACT_SKILL( 24 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable72 < 20 + 25 + 25 )
    {
        AI_ACT_SKILL( 53 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable72 < 20 + 25 + 25 + 25 )
    {
        AI_ACT_SKILL( 54 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_ABYSS_MOTHER()
{
    int localVariable73 = RNG( 100 );
    int localVariable74 = RNG( 100 );
    
    if ( AI_ENBAD( 8 ) == 1 )
    {
        
        if ( localVariable74 < 50 )
        {
            AI_ACT_SKILL( 65 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable74 < 50 + 50 )
        {
            
            if ( localVariable73 < 25 )
            {
                
                if ( FUNCTION_0040( 8 ) == 0 )
                {
                    AI_ACT_SKILL( 67 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 48 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( localVariable73 < 25 + 5 )
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }
            else if ( localVariable73 < 25 + 5 + 25 )
            {
                AI_ACT_SKILL( 46 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable73 < 25 + 5 + 25 + 25 )
            {
                AI_ACT_SKILL( 48 );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0044( 2 ) == 0 )
            {
                AI_ACT_SKILL( 207 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 48 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( localVariable73 < 25 )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( 67 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 48 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable73 < 25 + 5 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( localVariable73 < 25 + 5 + 25 )
    {
        AI_ACT_SKILL( 46 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable73 < 25 + 5 + 25 + 25 )
    {
        AI_ACT_SKILL( 48 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 2 ) == 0 )
    {
        AI_ACT_SKILL( 207 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 48 );
        AI_TAR_RND();
        return;
    }

}


void AI_KING_CATHLE()
{
    int localVariable75 = RNG( 100 );
    int localVariable76 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( localVariable76 < 50 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 120 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( localVariable75 < 20 )
    {
        AI_ACT_SKILL( 220 );
        AI_MINE();
        return;
    }
    else if ( localVariable75 < 20 + 10 )
    {
        
        if ( FUNCTION_0040( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable75 < 20 + 10 + 25 )
    {
        AI_ACT_SKILL( 120 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable75 < 20 + 10 + 25 + 20 )
    {
        AI_ACT_SKILL( 33 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable75 < 20 + 10 + 25 + 20 + 10 )
    {
        AI_ACT_SKILL( 30 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable75 < 20 + 10 + 25 + 20 + 10 + 10 )
    {
        
        if ( FUNCTION_0051( 5 ) == 1 )
        {
            AI_ACT_SKILL( 232 );
            AI_MUKOU( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_WHITE_SIJIL()
{
    int localVariable77 = RNG( 100 );
    int localVariable78 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( localVariable78 < 50 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( localVariable77 < 20 )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable77 < 20 + 30 )
    {
        AI_ACT_SKILL( 221 );
        AI_MINE();
        return;
    }
    else if ( localVariable77 < 20 + 30 + 20 )
    {
        AI_ACT_SKILL( 54 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable77 < 20 + 30 + 20 + 20 )
    {
        AI_ACT_SKILL( 70 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_INYOKU_HEBI()
{
    int localVariable79 = RNG( 100 );
    int localVariable80 = RNG( 100 );
    int localVariable81 = RNG( 100 );
    int localVariable82 = RNG( 100 );
    
    if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( localVariable80 < 30 )
        {
            AI_MYAI( 88 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable80 < 30 + 25 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable80 < 30 + 25 + 15 )
        {
            AI_ACT_SKILL( 58 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 48 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0035( 15 ) == 1 )
    {
        
        if ( localVariable81 < 40 )
        {
            AI_ACT_SKILL( 193 );
            AI_HPMIN();
            return;
        }
        else if ( localVariable81 < 40 + 40 )
        {
            AI_ACT_SKILL( 197 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_003E( 0x00100000 ) == 1 )
    {
        
        if ( localVariable82 < 60 )
        {
            AI_ACT_SKILL( 201 );
            AI_FUNCTION_0063( 0x00100000 );
            return;
        }
        else if ( localVariable82 < 60 + 20 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 46 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( localVariable79 < 25 )
    {
        
        if ( FUNCTION_0040( 1 ) == 0 )
        {
            AI_ACT_SKILL( 58 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable79 < 25 + 25 )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable79 < 25 + 25 + 25 )
    {
        
        if ( FUNCTION_003B( 1 ) == 1 )
        {
            AI_ACT_SKILL( 70 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( 46 );
        AI_TAR_RND();
        return;
    }

}


void AI_OMEGA_TANK()
{
    int localVariable83 = RNG( 100 );
    int localVariable84 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( localVariable84 < 30 )
        {
            AI_ACT_SKILL( 147 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable84 < 30 + 30 )
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( localVariable83 < 20 )
    {
        AI_ACT_SKILL( 220 );
        AI_MINE();
        return;
    }
    else if ( localVariable83 < 20 + 20 )
    {
        AI_ACT_SKILL( 147 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable83 < 20 + 20 + 20 )
    {
        AI_ACT_SKILL( 143 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable83 < 20 + 20 + 20 + 20 )
    {
        
        if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_LAST_SAMRAI()
{
    int localVariable85 = RNG( 100 );
    int localVariable86 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( localVariable86 < 30 )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable86 < 30 + 40 )
        {
            AI_ACT_SKILL( 142 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( localVariable85 < 20 )
    {
        AI_ACT_SKILL( 144 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable85 < 20 + 20 )
    {
        AI_ACT_SKILL( 220 );
        AI_MINE();
        return;
    }
    else if ( localVariable85 < 20 + 20 + 20 )
    {
        
        if ( FUNCTION_0043( 1 ) == 0 )
        {
            AI_ACT_SKILL( 215 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable85 < 20 + 20 + 20 + 20 )
    {
        AI_ACT_SKILL( 142 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_AKERON_SERCH()
{
    int localVariable87 = RNG( 100 );
    
    if ( localVariable87 < 20 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable87 < 20 + 20 )
    {
        AI_ACT_SKILL( 24 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable87 < 20 + 20 + 20 )
    {
        AI_ACT_SKILL( 33 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable87 < 20 + 20 + 20 + 20 )
    {
        AI_ACT_SKILL( 15 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable87 < 20 + 20 + 20 + 20 + 10 )
    {
        
        if ( FUNCTION_01C7( 0x00010000 ) == 1 || FUNCTION_0043( 0x00010000 ) == 1 )
        {
            AI_ACT_SKILL( 67 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 241 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable87 < 20 + 20 + 20 + 20 + 10 + 10 )
    {
        
        if ( FUNCTION_01C7( 0x00010000 ) == 0 )
        {
            AI_ACT_SKILL( 241 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 67 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_EIEN_TOKEI()
{
    int localVariable88 = RNG( 100 );
    
    if ( localVariable88 < 20 )
    {
        AI_ACT_SKILL( 15 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable88 < 20 + 20 )
    {
        AI_ACT_SKILL( 12 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable88 < 20 + 20 + 20 )
    {
        
        if ( FUNCTION_0044( 0x20 ) == 0 )
        {
            AI_ACT_SKILL( 209 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable88 < 20 + 20 + 20 + 20 )
    {
        
        if ( FUNCTION_0051( 6 ) == 1 )
        {
            AI_ACT_SKILL( 231 );
            AI_MUKOU( 6 );
            return;
        }
        else if ( FUNCTION_004D( 6 ) == 1 )
        {
            AI_ACT_SKILL( 231 );
            AI_HANSYA( 6 );
            return;
        }
        else if ( FUNCTION_004F( 6 ) == 1 )
        {
            AI_ACT_SKILL( 231 );
            AI_KYUSYU( 6 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable88 < 20 + 20 + 20 + 20 + 20 )
    {
        
        if ( AI_ENBAD( 2 ) == 0 || AI_ENBAD( 4 ) == 0 )
        {
            AI_ACT_SKILL( 60 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable88 < 20 + 20 + 20 + 20 + 20 + 20 )
    {
        
        if ( AI_ENBAD( 2 ) == 0 || AI_ENBAD( 4 ) == 0 )
        {
            AI_ACT_SKILL( 62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_MU_KYOJIN()
{
    int localVariable89 = RNG( 100 );
    
    if ( localVariable89 < 10 )
    {
        AI_ACT_SKILL( 48 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable89 < 10 + 10 )
    {
        AI_ACT_SKILL( 47 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable89 < 10 + 10 + 10 )
    {
        AI_ACT_SKILL( 54 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable89 < 10 + 10 + 10 + 10 )
    {
        AI_ACT_SKILL( 53 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable89 < 10 + 10 + 10 + 10 + 10 )
    {
        AI_ACT_SKILL( 142 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable89 < 10 + 10 + 10 + 10 + 10 + 10 )
    {
        AI_ACT_SKILL( 0x80 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_KONTON_KYUKURO()
{
    int localVariable90 = RNG( 100 );
    int localVariable91 = RNG( 100 );
    
    if ( FUNCTION_0033( 15 ) == 1 )
    {
        
        if ( localVariable91 < 20 )
        {
            AI_ACT_SKILL( 194 );
            AI_MINE();
            return;
        }
        else if ( localVariable91 < 20 + 40 )
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( localVariable90 < 20 )
    {
        AI_ACT_SKILL( 21 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable90 < 20 + 20 )
    {
        
        if ( FUNCTION_0043( 0x40 ) == 0 )
        {
            AI_ACT_SKILL( 219 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable90 < 20 + 20 + 20 )
    {
        AI_ACT_SKILL( 120 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable90 < 20 + 20 + 20 + 20 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 67 );
        AI_TAR_RND();
        return;
    }

}


void AI_HONSYO_AEGIS()
{
    int localVariable92 = RNG( 100 );
    
    if ( FUNCTION_0041( 122 ) == 1 )
    {
        
        if ( FUNCTION_00AB( 122, 1 ) == 0 )
        {
            AI_ACT_SKILL( 214 );
            AI_ID( 122 );
            return;
        }
        else if ( FUNCTION_00AB( 122, 0x40 ) == 0 )
        {
            AI_ACT_SKILL( 218 );
            AI_ID( 122 );
            return;
        }
        else if ( FUNCTION_00AB( 122, 0x10 ) == 0 )
        {
            AI_ACT_SKILL( 216 );
            AI_ID( 122 );
            return;
        }
        else if ( FUNCTION_00AB( 122, 2 ) == 1 || FUNCTION_00AB( 122, 0x80 ) == 1 || FUNCTION_00AB( 122, 0x20 ) == 1 )
        {
            AI_ACT_SKILL( 212 );
            AI_ID( 122 );
            return;
        }

        
        if ( AI_MYBAD( 122, 0x00100000 ) == 1 )
        {
            AI_ACT_SKILL( 201 );
            AI_ID( 122 );
            return;
        }
        else if ( localVariable92 < 34 )
        {
            AI_ACT_SKILL( 112 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable92 < 34 + 33 )
        {
            AI_ACT_SKILL( 121 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 126 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable92 < 34 )
    {
        AI_ACT_SKILL( 112 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable92 < 34 + 33 )
    {
        AI_ACT_SKILL( 121 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 126 );
        AI_TAR_RND();
        return;
    }

}


void AI_GOUWAN_AEGIS()
{
    int localVariable93 = RNG( 100 );
    int localVariable94 = RNG( 100 );
    
    if ( FUNCTION_0033( 80 ) == 0 )
    {
        
        if ( localVariable93 < 10 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( localVariable93 < 10 + 30 )
        {
            AI_ACT_SKILL( 20 );
            AI_WEAK( 4 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 60 ) == 1 )
    {
        
        if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 ) == 0 )
        {
            AI_MYAI( 320 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 );
            return;
        }
        else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 )
        {
            AI_MYAI( 320 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 );
            return;
        }
        else if ( localVariable94 < 34 )
        {
            AI_ACT_SKILL( 114 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable94 < 34 + 33 )
        {
            AI_ACT_SKILL( 21 );
            AI_WEAK( 4 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 80 ) == 1 )
    {
        
        if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 )
        {
            AI_MYAI( 320 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 );
            return;
        }
        else if ( localVariable94 < 34 )
        {
            AI_ACT_SKILL( 114 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable94 < 34 + 33 )
        {
            AI_ACT_SKILL( 21 );
            AI_WEAK( 4 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_CATHLE_AEGIS()
{
    int localVariable95 = RNG( 100 );
    
    if ( FUNCTION_0035( 25 ) == 1 && FUNCTION_003B( 1 ) == 0 )
    {
        AI_ACT_SKILL( 196 );
        AI_TAR_RND();
        return;
    }

    
    if ( AI_MYBAD( 325, 4 ) == 1 )
    {
        AI_ACT_SKILL( 199 );
        AI_FUNCTION_0063( 4 );
        return;
    }

    
    if ( AI_MYBAD( 325, 0x00100000 ) == 1 )
    {
        AI_ACT_SKILL( 201 );
        AI_FUNCTION_0063( 0x00100000 );
        return;
    }

    
    if ( FUNCTION_004D( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        AI_HANSYA( 3 );
        return;
    }
    else if ( FUNCTION_004F( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        AI_KYUSYU( 3 );
        return;
    }
    else if ( FUNCTION_0051( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        AI_MUKOU( 3 );
        return;
    }

    
    if ( localVariable95 < 30 )
    {
        AI_ACT_SKILL( 0x20 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable95 < 30 + 20 )
    {
        
        if ( FUNCTION_0043( 0x10 ) == 0 )
        {
            AI_ACT_SKILL( 217 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable95 < 30 + 20 + 20 )
    {
        AI_ACT_SKILL( 29 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable95 < 30 + 20 + 20 + 5 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0056( 4 ) == 1 )
    {
        AI_ACT_SKILL( 62 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 61 );
        AI_NOTBAD( 4 );
        return;
    }

}


void AI_SLAVE_AEGIS()
{
    int localVariable96 = RNG( 100 );
    
    if ( localVariable96 < 30 )
    {
        AI_ACT_SKILL( 2 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable96 < 30 + 30 )
    {
        
        if ( FUNCTION_0058( 115 ) == 0 )
        {
            AI_ACT_SKILL( 115 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 114 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable96 < 30 + 30 + 30 )
    {
        AI_ACT_SKILL( 114 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_ROYAL_AEGIS()
{
    int localVariable97 = RNG( 100 );
    localVariable97 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( 117 );
        AI_TAR_RND();
        return;
    }

    
    if ( AI_ENBAD( 2 ) == 1 )
    {
        AI_ACT_SKILL( 117 );
        AI_TAR_RND();
        return;
    }

    int localVariable98 = 0;
    
    if ( FUNCTION_0033( 20 ) == 0 )
    {
        
        if ( localVariable97 < 30 )
        {
            AI_ACT_SKILL( 117 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable97 < 30 + 30 )
        {
            
            if ( FUNCTION_0040( 1 ) == 0 )
            {
                AI_ACT_SKILL( 57 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 117 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable97 < 30 + 30 + 20 )
        {
            
            if ( AI_ENBAD( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 69 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 117 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 5 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable98 < 35 )
    {
        AI_ACT_SKILL( 117 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable98 < 35 + 15 )
    {
        
        if ( FUNCTION_0040( 1 ) == 0 )
        {
            AI_ACT_SKILL( 57 );
            AI_NOTBAD( 1 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 117 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable98 < 35 + 15 + 15 )
    {
        
        if ( AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 117 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0053( 3 ) == 1 )
    {
        AI_ACT_SKILL( 3 );
        AI_WEAK( 3 );
        return;
    }
    else 
    {
        AI_ACT_SKILL( 5 );
        AI_TAR_RND();
        return;
    }

}


void AI_ZANKOKU_AEGIS()
{
    int localVariable99 = RNG( 100 );
    int localVariable100 = RNG( 100 );
    int localVariable101 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( 2 );
        STAND();
        return;
    }

    
    if ( localVariable99 < 35 )
    {
        
        if ( FUNCTION_0053( 3 ) == 1 )
        {
            AI_ACT_SKILL( 2 );
            AI_WEAK( 3 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 2 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable99 < 35 + 30 )
    {
        AI_ACT_SKILL( 70 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable99 < 35 + 30 + 20 )
    {
        
        if ( AI_ENBAD( 2 ) == 0 )
        {
            AI_ACT_SKILL( 60 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 2 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0043( 0x00020000 ) == 0 )
    {
        AI_ACT_SKILL( 242 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0053( 3 ) == 1 )
    {
        AI_ACT_SKILL( 2 );
        AI_WEAK( 3 );
        return;
    }
    else 
    {
        AI_ACT_SKILL( 2 );
        AI_TAR_RND();
        return;
    }

}


void AI_BRAVE_AEGIS()
{
    int localVariable102 = RNG( 100 );
    int localVariable103 = RNG( 100 );
    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( localVariable102 < 35 )
        {
            AI_ACT_SKILL( 2 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable102 < 35 + 35 )
        {
            AI_ACT_SKILL( 5 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable102 < 35 + 35 + 15 )
        {
            
            if ( FUNCTION_0041( 167 ) == 1 )
            {
                
                if ( FUNCTION_004D( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    AI_HANSYA( 5 );
                    return;
                }
                else if ( FUNCTION_004F( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    AI_KYUSYU( 5 );
                    return;
                }
                else if ( FUNCTION_0051( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    AI_MUKOU( 5 );
                    return;
                }
                else if ( FUNCTION_0044( 2 ) == 0 )
                {
                    AI_ACT_SKILL( 207 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 2 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( FUNCTION_0041( 135 ) == 1 )
            {
                
                if ( FUNCTION_004D( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    AI_HANSYA( 4 );
                    return;
                }
                else if ( FUNCTION_004F( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    AI_KYUSYU( 4 );
                    return;
                }
                else if ( FUNCTION_0051( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    AI_MUKOU( 4 );
                    return;
                }
                else if ( FUNCTION_0044( 2 ) == 0 )
                {
                    AI_ACT_SKILL( 207 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 2 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( 39 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            AI_ACT_SKILL( 5 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable103 < 30 )
        {
            AI_ACT_SKILL( 2 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable103 < 30 + 30 )
        {
            AI_ACT_SKILL( 5 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable103 < 30 + 30 + 20 )
        {
            
            if ( FUNCTION_004D( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                AI_HANSYA( 3 );
                return;
            }
            else if ( FUNCTION_004F( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                AI_KYUSYU( 3 );
                return;
            }
            else if ( FUNCTION_0051( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                AI_MUKOU( 3 );
                return;
            }
            else if ( FUNCTION_01C7( 0x0800 ) == 0 )
            {
                AI_ACT_SKILL( 221 );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 122 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 122 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_HANKETU_AEGIS()
{
    int localVariable104 = RNG( 100 );
    int localVariable105 = RNG( 100 );
    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( localVariable104 < 35 )
        {
            AI_ACT_SKILL( 29 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable104 < 35 + 35 )
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable104 < 35 + 35 + 15 )
        {
            
            if ( FUNCTION_0041( 103 ) == 1 )
            {
                
                if ( FUNCTION_004D( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    AI_HANSYA( 229 );
                    return;
                }
                else if ( FUNCTION_004F( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    AI_KYUSYU( 3 );
                    return;
                }
                else if ( FUNCTION_0051( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    AI_MUKOU( 3 );
                    return;
                }
                else if ( FUNCTION_0044( 0x80 ) == 0 )
                {
                    AI_ACT_SKILL( 211 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 29 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( FUNCTION_0041( 135 ) == 1 )
            {
                
                if ( FUNCTION_004D( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    AI_HANSYA( 4 );
                    return;
                }
                else if ( FUNCTION_004F( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    AI_KYUSYU( 4 );
                    return;
                }
                else if ( FUNCTION_0051( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    AI_MUKOU( 4 );
                    return;
                }
                else if ( FUNCTION_0044( 0x80 ) == 0 )
                {
                    AI_ACT_SKILL( 211 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 29 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( 39 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable105 < 30 )
        {
            AI_ACT_SKILL( 29 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable105 < 30 + 30 )
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable105 < 30 + 30 + 20 )
        {
            
            if ( FUNCTION_004D( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                AI_HANSYA( 5 );
                return;
            }
            else if ( FUNCTION_004F( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                AI_KYUSYU( 5 );
                return;
            }
            else if ( FUNCTION_0051( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                AI_MUKOU( 5 );
                return;
            }
            else if ( FUNCTION_01C7( 0x0800 ) == 0 )
            {
                AI_ACT_SKILL( 221 );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 125 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 125 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_ICE_AEGIS()
{
    int localVariable106 = RNG( 100 );
    int localVariable107 = RNG( 100 );
    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( localVariable106 < 25 )
        {
            AI_ACT_SKILL( 20 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable106 < 25 + 35 )
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable106 < 25 + 35 + 15 )
        {
            
            if ( FUNCTION_0041( 103 ) == 1 )
            {
                
                if ( FUNCTION_004D( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    AI_HANSYA( 229 );
                    return;
                }
                else if ( FUNCTION_004F( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    AI_KYUSYU( 3 );
                    return;
                }
                else if ( FUNCTION_0051( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    AI_MUKOU( 3 );
                    return;
                }
                else if ( FUNCTION_0044( 0x20 ) == 0 )
                {
                    AI_ACT_SKILL( 209 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 20 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( FUNCTION_0041( 167 ) == 1 )
            {
                
                if ( FUNCTION_004D( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    AI_HANSYA( 5 );
                    return;
                }
                else if ( FUNCTION_004F( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    AI_KYUSYU( 5 );
                    return;
                }
                else if ( FUNCTION_0051( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    AI_MUKOU( 5 );
                    return;
                }
                else if ( FUNCTION_0044( 0x20 ) == 0 )
                {
                    AI_ACT_SKILL( 209 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 20 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( 39 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( FUNCTION_0040( 4 ) == 0 )
        {
            AI_ACT_SKILL( 62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 20 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0400 ) == 1 )
        {
            AI_ACT_SKILL( 133 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable107 < 30 )
        {
            AI_ACT_SKILL( 20 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable107 < 30 + 30 )
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable107 < 30 + 30 + 20 )
        {
            
            if ( FUNCTION_004D( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                AI_HANSYA( 4 );
                return;
            }
            else if ( FUNCTION_004F( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                AI_KYUSYU( 4 );
                return;
            }
            else if ( FUNCTION_0051( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                AI_MUKOU( 4 );
                return;
            }
            else if ( FUNCTION_01C7( 0x0400 ) == 0 )
            {
                AI_ACT_SKILL( 220 );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 133 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 133 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_HAKAI_AEGIS()
{
    int localVariable108 = RNG( 100 );
    int localVariable109 = RNG( 100 );
    int localVariable110 = RNG( 100 );
    
    if ( FUNCTION_003B( 1 ) == 0 || FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable108 < 25 )
        {
            
            if ( FUNCTION_01C7( 0x0800 ) == 0 )
            {
                AI_ACT_SKILL( 221 );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 24 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable108 < 25 + 25 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable108 < 25 + 25 + 25 )
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 37 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 1 || FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( localVariable109 < 30 )
            {
                AI_ACT_SKILL( 24 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 37 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable110 < 25 )
        {
            
            if ( FUNCTION_01C7( 0x0800 ) == 0 )
            {
                AI_ACT_SKILL( 221 );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 37 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable110 < 25 + 25 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable110 < 25 + 25 + 25 )
        {
            AI_ACT_SKILL( 47 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 37 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_IKARI_AEGIS()
{
    
    if ( FUNCTION_0044( 0x00400000 ) == 0 )
    {
        AI_ACT_SKILL( 74 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_0044( 0x00400000 ) == 1 )
    {
        
        if ( AI_ENBAD( 0x10 ) == 1 )
        {
            AI_ACT_WEAPON();
            AI_FUNCTION_0063( 0x10 );
            return;
        }
        else if ( AI_ENBAD( 0x10 ) == 0 )
        {
            AI_ACT_SKILL( 67 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 0x20 ) == 0 )
        {
            AI_ACT_SKILL( 209 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 2 ) == 0 )
        {
            AI_ACT_SKILL( 207 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_SAKEBU_AEGIS()
{
    
    if ( AI_ENBAD( 0x10 ) == 1 && FUNCTION_0043( 0x00010000 ) == 0 )
    {
        AI_ACT_SKILL( 241 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0035( 20 ) == 1 )
    {
        AI_ACT_SKILL( 195 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0043( 0x10 ) == 0 )
    {
        AI_ACT_SKILL( 217 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_004D( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        AI_HANSYA( 4 );
        return;
    }
    else if ( FUNCTION_004F( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        AI_KYUSYU( 4 );
        return;
    }
    else if ( FUNCTION_0051( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        AI_MUKOU( 4 );
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_WANDA_AEGIS()
{
    int localVariable111 = RNG( 100 );
    int localVariable112 = RNG( 100 );
    int localVariable113 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( localVariable112 < 50 && FUNCTION_0053( 6 ) == 1 )
        {
            AI_ACT_SKILL( 12 );
            AI_WEAK( 6 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( localVariable111 < 25 )
        {
            
            if ( FUNCTION_0040( 4 ) == 0 )
            {
                AI_ACT_SKILL( 62 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 21 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable111 < 25 + 25 )
        {
            
            if ( FUNCTION_01C7( 0x0800 ) == 0 )
            {
                AI_ACT_SKILL( 221 );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 23 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable111 < 25 + 25 + 20 )
        {
            
            if ( FUNCTION_0057( 12 ) == 1 )
            {
                AI_ACT_SKILL( 3 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 12 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable111 < 25 + 25 + 20 + 20 )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( localVariable113 < 20 )
        {
            
            if ( FUNCTION_0057( 62 ) == 0 && FUNCTION_0040( 4 ) == 0 )
            {
                AI_ACT_SKILL( 62 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 221 );
                AI_MINE();
                return;
            }

        }
        else if ( localVariable113 < 20 + 20 )
        {
            
            if ( FUNCTION_0044( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 211 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 24 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable113 < 20 + 20 + 20 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable113 < 20 + 20 + 20 + 20 )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            AI_ACT_SKILL( 221 );
            AI_MINE();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_OKUBYOU_AEGIS()
{
    int localVariable114 = RNG( 100 );
    
    if ( AI_ENBAD( 8 ) == 1 )
    {
        AI_ACT_SKILL( 65 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_003E( 0x00100000 ) == 1 )
    {
        AI_ACT_SKILL( 201 );
        AI_FUNCTION_0063( 0x00100000 );
        return;
    }

    
    if ( localVariable114 < 20 )
    {
        
        if ( FUNCTION_0044( 1 ) == 1 || FUNCTION_0044( 0x40 ) == 1 || FUNCTION_0044( 216 ) == 1 && FUNCTION_003B( 1 ) == 0 )
        {
            AI_ACT_SKILL( 223 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0053( 4 ) == 1 )
        {
            AI_ACT_SKILL( 20 );
            AI_WEAK( 4 );
            return;
        }
        else if ( FUNCTION_003E( 4 ) == 1 )
        {
            AI_ACT_SKILL( 199 );
            AI_FUNCTION_0063( 4 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 20 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable114 < 20 + 20 )
    {
        
        if ( FUNCTION_0043( 2 ) == 1 || FUNCTION_0043( 0x80 ) == 1 || FUNCTION_0043( 0x20 ) == 1 && FUNCTION_003B( 1 ) == 0 )
        {
            AI_ACT_SKILL( 212 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 138 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable114 < 20 + 20 + 20 )
    {
        
        if ( FUNCTION_0053( 4 ) == 1 )
        {
            AI_ACT_SKILL( 20 );
            AI_WEAK( 4 );
            return;
        }
        else if ( FUNCTION_003E( 4 ) == 1 )
        {
            AI_ACT_SKILL( 199 );
            AI_FUNCTION_0063( 4 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 20 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable114 < 20 + 20 + 20 + 20 )
    {
        AI_ACT_SKILL( 138 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0041( 10 ) == 1 )
    {
        
        if ( FUNCTION_004D( 3 ) == 1 )
        {
            AI_ACT_SKILL( 229 );
            AI_HANSYA( 3 );
            return;
        }
        else if ( FUNCTION_004F( 3 ) == 1 )
        {
            AI_ACT_SKILL( 229 );
            AI_KYUSYU( 3 );
            return;
        }
        else if ( FUNCTION_0051( 3 ) == 1 )
        {
            AI_ACT_SKILL( 229 );
            AI_MUKOU( 3 );
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( 138 );
        AI_TAR_RND();
        return;
    }

}


void AI_NAKU_AEGIS()
{
    int localVariable115 = RNG( 100 );
    
    if ( FUNCTION_003E( 0x00100000 ) == 1 && FUNCTION_0043( 0x00020000 ) == 0 )
    {
        AI_ACT_SKILL( 242 );
        AI_TAR_RND();
        return;
    }

    
    if ( localVariable115 < 25 )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable115 < 25 + 30 )
    {
        AI_ACT_SKILL( 5 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable115 < 25 + 30 + 25 )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable115 < 25 + 30 + 25 + 10 )
    {
        AI_ACT_SKILL( 93 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 94 );
        AI_TAR_RND();
        return;
    }

}


void AI_KYOUKI_AEGIS()
{
    int localVariable116 = RNG( 100 );
    int localVariable117 = RNG( 100 );
    
    if ( FUNCTION_0044( 0x00010000 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
    }

    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 1 )
    {
        
        if ( FUNCTION_0057( 119 ) == 1 )
        {
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 );
        }

    }

    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 1 )
    {
        AI_ACT_SKILL( 93 );
        AI_TAR_RND();
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 );
        return;
    }

    
    if ( FUNCTION_0044( 225 ) == 1 )
    {
        AI_ACT_SKILL( 15 );
        AI_TAR_RND();
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 );
        return;
    }

    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 ) == 1 )
    {
        AI_ACT_SKILL( 94 );
        AI_TAR_RND();
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 );
        return;
    }

    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_SKILL( 136 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( FUNCTION_0053( 6 ) == 1 )
        {
            AI_ACT_SKILL( 15 );
            AI_WEAK( 6 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( localVariable116 < 20 )
    {
        AI_ACT_SKILL( 15 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable116 < 20 + 20 )
    {
        
        if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 136 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable116 < 20 + 20 + 20 )
    {
        
        if ( localVariable117 < 50 )
        {
            AI_ACT_SKILL( 220 );
            AI_MINE();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 221 );
            AI_MINE();
            return;
        }

    }
    else if ( localVariable116 < 20 + 20 + 20 + 20 )
    {
        AI_ACT_SKILL( 119 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable116 < 20 + 20 + 20 + 20 + 10 )
    {
        
        if ( FUNCTION_004D( 6 ) == 1 )
        {
            AI_ACT_SKILL( 231 );
            AI_HANSYA( 6 );
            return;
        }
        else if ( FUNCTION_004F( 6 ) == 1 )
        {
            AI_ACT_SKILL( 231 );
            AI_KYUSYU( 6 );
            return;
        }
        else if ( FUNCTION_0051( 6 ) == 1 )
        {
            AI_ACT_SKILL( 231 );
            AI_MUKOU( 6 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 136 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_01C7( 0x00008000 ) == 0 )
    {
        AI_ACT_SKILL( 227 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_KYOEIM_AEGIS()
{
    int localVariable118 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( 146 );
        AI_FUNCTION_0063( 0x00100000 );
        return;
    }

    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 0 || BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 )
    {
        
        if ( FUNCTION_0033( 70 ) == 0 )
        {
            
            if ( FUNCTION_0053( 3 ) == 1 )
            {
                AI_ACT_SKILL( 1 );
                AI_WEAK( 3 );
                return;
            }
            else if ( FUNCTION_0053( 4 ) == 1 )
            {
                AI_ACT_SKILL( 19 );
                AI_WEAK( 4 );
                return;
            }
            else if ( FUNCTION_0053( 5 ) == 1 )
            {
                AI_ACT_SKILL( 28 );
                AI_WEAK( 5 );
                return;
            }
            else if ( FUNCTION_0053( 6 ) == 1 )
            {
                AI_ACT_SKILL( 10 );
                AI_WEAK( 6 );
                return;
            }
            else if ( localVariable118 < 25 )
            {
                AI_ACT_SKILL( 1 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable118 < 25 + 25 )
            {
                AI_ACT_SKILL( 19 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable118 < 25 + 25 + 25 )
            {
                AI_ACT_SKILL( 28 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 10 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 0 )
        {
            AI_MYAI( 186 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
            return;
        }
        else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 )
        {
            AI_MYAI( 186 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( FUNCTION_003E( 0x80 ) == 1 )
        {
            AI_ACT_SKILL( 202 );
            AI_FUNCTION_0063( 0x80 );
            return;
        }
        else if ( FUNCTION_003E( 4 ) == 1 )
        {
            AI_ACT_SKILL( 199 );
            AI_FUNCTION_0063( 4 );
            return;
        }
        else if ( FUNCTION_0044( 2 ) == 0 )
        {
            AI_ACT_SKILL( 207 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 0x20 ) == 0 )
        {
            AI_ACT_SKILL( 209 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0043( 1 ) == 0 )
        {
            AI_ACT_SKILL( 215 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0043( 0x40 ) == 0 )
        {
            AI_ACT_SKILL( 219 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0043( 0x10 ) == 0 )
        {
            AI_ACT_SKILL( 217 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0053( 3 ) == 1 )
        {
            AI_ACT_SKILL( 1 );
            AI_WEAK( 3 );
            return;
        }
        else if ( FUNCTION_0053( 4 ) == 1 )
        {
            AI_ACT_SKILL( 19 );
            AI_WEAK( 4 );
            return;
        }
        else if ( FUNCTION_0053( 5 ) == 1 )
        {
            AI_ACT_SKILL( 28 );
            AI_WEAK( 5 );
            return;
        }
        else if ( FUNCTION_0053( 6 ) == 1 )
        {
            AI_ACT_SKILL( 10 );
            AI_WEAK( 6 );
            return;
        }
        else if ( localVariable118 < 25 )
        {
            AI_ACT_SKILL( 1 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable118 < 25 + 25 )
        {
            AI_ACT_SKILL( 19 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable118 < 25 + 25 + 25 )
        {
            AI_ACT_SKILL( 28 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 10 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable118 < 25 )
    {
        AI_ACT_SKILL( 5 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable118 < 25 + 25 )
    {
        AI_ACT_SKILL( 23 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable118 < 25 + 25 + 25 )
    {
        AI_ACT_SKILL( 0x20 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 14 );
        AI_TAR_RND();
        return;
    }

}


void AI_TINOHE_AEGIS()
{
    int localVariable119 = RNG( 100 );
    int localVariable120 = RNG( 100 );
    int localVariable121 = RNG( 100 );
    int localVariable122 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( localVariable122 < 70 )
        {
            AI_ACT_SKILL( 38 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 53 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( localVariable120 < 25 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable120 < 25 + 25 )
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable120 < 25 + 25 + 25 )
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0053( 4 ) == 1 )
    {
        
        if ( localVariable121 < 60 )
        {
            AI_ACT_SKILL( 21 );
            AI_WEAK( 4 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0053( 5 ) == 1 )
    {
        
        if ( localVariable121 < 60 )
        {
            AI_ACT_SKILL( 30 );
            AI_WEAK( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0053( 6 ) == 1 )
    {
        
        if ( localVariable121 < 60 )
        {
            AI_ACT_SKILL( 12 );
            AI_WEAK( 6 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0053( 3 ) == 1 )
    {
        
        if ( localVariable121 < 60 )
        {
            AI_ACT_SKILL( 3 );
            AI_WEAK( 3 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable119 < 20 )
    {
        
        if ( AI_MYGROUP( 186 ) == 0 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable119 < 20 + 20 )
    {
        
        if ( AI_MYGROUP( 186 ) == 0 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable119 < 20 + 20 + 20 )
    {
        
        if ( AI_MYGROUP( 186 ) == 0 )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable119 < 20 + 20 + 20 + 20 )
    {
        
        if ( AI_MYGROUP( 186 ) == 0 )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0044( 0x0800 ) == 0 )
    {
        AI_ACT_SKILL( 221 );
        AI_MINE();
        return;
    }
    else if ( localVariable120 < 25 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable120 < 25 + 25 )
    {
        AI_ACT_SKILL( 24 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable120 < 25 + 25 + 25 )
    {
        AI_ACT_SKILL( 33 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 15 );
        AI_TAR_RND();
        return;
    }

}


void AI_SINKNO_AEGIS()
{
    int localVariable123 = RNG( 100 );
    
    if ( MYHP( 107, 30 ) == 1 && FUNCTION_01C7( 0x0800 ) == 0 )
    {
        AI_ACT_SKILL( 221 );
        AI_MINE();
        return;
    }

    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 1 )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
        return;
    }

    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 1 )
    {
        
        if ( localVariable123 < 30 )
        {
            AI_ACT_SKILL( 6 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable123 < 30 + 30 )
        {
            
            if ( FUNCTION_0053( 3 ) == 1 )
            {
                AI_ACT_SKILL( 3 );
                BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
                AI_WEAK( 3 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 3 );
                BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable123 < 30 + 30 + 20 )
        {
            AI_ACT_SKILL( 147 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            AI_ACT_SKILL( 221 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
            AI_MINE();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 6 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_003B( 1 ) == 1 )
    {
        AI_MYAI( 107 );
        AI_TAR_RND();
        return;
    }

    
    if ( localVariable123 < 30 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable123 < 30 + 30 )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable123 < 30 + 30 + 20 )
    {
        AI_ACT_SKILL( 147 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x0800 ) == 0 )
    {
        AI_ACT_SKILL( 221 );
        AI_MINE();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }

}


void AI_SULOUT_AEGIS()
{
    int localVariable124 = RNG( 100 );
    
    if ( FUNCTION_0033( 20 ) == 1 )
    {
        AI_ACT_SKILL( 40 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_01DC( 1, 330 ) == 1 && FUNCTION_0043( 0x00020000 ) == 0 )
    {
        AI_ACT_SKILL( 242 );
        AI_TAR_RND();
        return;
    }

    
    if ( localVariable124 < 40 )
    {
        
        if ( FUNCTION_0058( 0x80 ) == 0 && FUNCTION_0058( 40 ) == 0 )
        {
            AI_ACT_SKILL( 0x80 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 140 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable124 < 40 + 50 )
    {
        AI_ACT_SKILL( 140 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_AKERON_AEGIS()
{
    int localVariable125 = RNG( 100 );
    int localVariable126 = RNG( 100 );
    int localVariable127 = RNG( 100 );
    
    if ( FUNCTION_0053( 8 ) == 1 )
    {
        AI_ACT_SKILL( 49 );
        AI_WEAK( 8 );
        return;
    }
    else if ( FUNCTION_0053( 9 ) == 1 )
    {
        AI_ACT_SKILL( 55 );
        AI_WEAK( 9 );
        return;
    }

    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( localVariable126 < 45 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable126 < 45 + 10 )
        {
            AI_ACT_SKILL( 38 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( localVariable125 < 30 )
    {
        
        if ( localVariable127 < 50 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable125 < 30 + 30 )
    {
        
        if ( localVariable127 < 50 )
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable125 < 30 + 30 + 10 )
    {
        
        if ( AI_ENBAD( 4 ) == 0 && FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( 62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable125 < 30 + 30 + 10 + 10 )
    {
        
        if ( AI_ENBAD( 8 ) == 0 && FUNCTION_0040( 4 ) == 0 )
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( 221 );
        AI_MINE();
        return;
    }

}


void AI_KONKYU_AEGIS()
{
    int localVariable128 = RNG( 100 );
    int localVariable129 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( localVariable129 < 35 )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable129 < 35 + 35 )
        {
            AI_ACT_SKILL( 136 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 141 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0033( 75 ) == 1 && FUNCTION_0033( 50 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 0 )
    {
        AI_ACT_SKILL( 220 );
        AI_MINE();
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
        return;
    }
    else if ( FUNCTION_0033( 50 ) == 1 && FUNCTION_0033( 25 ) == 0 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 )
    {
        AI_ACT_SKILL( 220 );
        AI_MINE();
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 );
        return;
    }
    else if ( FUNCTION_0033( 25 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 450 ) == 0 )
    {
        AI_ACT_SKILL( 220 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( localVariable128 < 20 )
        {
            AI_ACT_SKILL( 134 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable128 < 20 + 20 )
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable128 < 20 + 20 + 20 )
        {
            AI_ACT_SKILL( 120 );
            AI_TAR_RND();
            return;
        }
        else if ( AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 148 );
            AI_NOTBAD( 0x80 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 134 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable129 < 35 )
    {
        AI_ACT_SKILL( 144 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable129 < 35 + 35 )
    {
        AI_ACT_SKILL( 136 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 141 );
        AI_TAR_RND();
        return;
    }

}


void AI_KAIDEN_AEGIS()
{
    int localVariable130 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_SKILL( 129 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x0400 ) == 0 )
    {
        
        if ( localVariable130 < 70 )
        {
            AI_ACT_SKILL( 129 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable130 < 70 + 10 )
        {
            AI_ACT_SKILL( 220 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable130 < 70 + 10 + 10 )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable130 < 70 + 10 + 10 + 10 )
        {
            AI_ACT_SKILL( 50 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_ONNENM_AEGIS()
{
    int localVariable131 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_SKILL( 129 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x0400 ) == 0 )
    {
        
        if ( localVariable131 < 30 )
        {
            AI_ACT_SKILL( 93 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable131 < 30 + 10 )
        {
            AI_ACT_SKILL( 220 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable131 < 30 + 10 + 10 )
        {
            AI_ACT_SKILL( 56 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable131 < 30 + 10 + 10 + 50 )
        {
            AI_ACT_SKILL( 148 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_TENJIN_AEGIS()
{
    
    if ( FUNCTION_0035( 30 ) == 0 )
    {
        
        if ( FUNCTION_0044( 0x00008000 ) == 0 )
        {
            AI_ACT_SKILL( 227 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0043( 1 ) == 0 )
        {
            AI_ACT_SKILL( 215 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0035( 30 ) == 1 )
    {
        
        if ( FUNCTION_0043( 0x00020000 ) == 0 )
        {
            AI_ACT_SKILL( 242 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 196 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_HAGURE_AEGIS()
{
    
    if ( FUNCTION_005E( 3 ) == 1 )
    {
        AI_ASK_TO_LEAVE();
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_005E( 3 ) == 0 )
    {
        AI_ACT_SKILL( 43 );
        FUNCTION_013D( 1 );
        return;
    }

}


void AI_K_GARDKILL()
{
    
    if ( FUNCTION_004D( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        AI_HANSYA( 3 );
        return;
    }
    else if ( FUNCTION_004F( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        AI_KYUSYU( 3 );
        return;
    }
    else if ( FUNCTION_0051( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        AI_MUKOU( 3 );
        return;
    }

    AI_FUNCTION_0075();
}


void AI_H_GARDKILL()
{
    
    if ( FUNCTION_004D( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        AI_HANSYA( 4 );
        return;
    }
    else if ( FUNCTION_004F( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        AI_KYUSYU( 4 );
        return;
    }
    else if ( FUNCTION_0051( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        AI_MUKOU( 4 );
        return;
    }

    AI_FUNCTION_0075();
}


void AI_D_GARDKILL()
{
    
    if ( FUNCTION_004D( 5 ) == 1 )
    {
        AI_ACT_SKILL( 232 );
        AI_HANSYA( 5 );
        return;
    }
    else if ( FUNCTION_004F( 5 ) == 1 )
    {
        AI_ACT_SKILL( 232 );
        AI_KYUSYU( 5 );
        return;
    }
    else if ( FUNCTION_0051( 5 ) == 1 )
    {
        AI_ACT_SKILL( 232 );
        AI_MUKOU( 5 );
        return;
    }

    AI_FUNCTION_0075();
}


void AI_S_GARDKILL()
{
    
    if ( FUNCTION_004D( 6 ) == 1 )
    {
        AI_ACT_SKILL( 231 );
        AI_HANSYA( 6 );
        return;
    }
    else if ( FUNCTION_004F( 6 ) == 1 )
    {
        AI_ACT_SKILL( 231 );
        AI_KYUSYU( 6 );
        return;
    }
    else if ( FUNCTION_0051( 6 ) == 1 )
    {
        AI_ACT_SKILL( 231 );
        AI_MUKOU( 6 );
        return;
    }

    AI_FUNCTION_0075();
}


void AI_ZAKO_DEKAJYA()
{
    
    if ( FUNCTION_0044( 1 ) == 1 )
    {
        AI_ACT_SKILL( 223 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 0x40 ) == 1 )
    {
        AI_ACT_SKILL( 223 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 0x10 ) == 1 )
    {
        AI_ACT_SKILL( 223 );
        AI_TAR_RND();
        return;
    }

    AI_FUNCTION_0075();
}


void AI_ZAKO_DEKNDA()
{
    
    if ( FUNCTION_01C7( 2 ) == 1 || FUNCTION_0043( 2 ) == 1 )
    {
        AI_ACT_SKILL( 212 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x80 ) == 1 || FUNCTION_0043( 0x80 ) == 1 )
    {
        AI_ACT_SKILL( 212 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x20 ) == 1 || FUNCTION_0043( 0x20 ) == 1 )
    {
        AI_ACT_SKILL( 212 );
        AI_TAR_RND();
        return;
    }

    AI_FUNCTION_0075();
}


void AI_ZAKO_DEKAJYA_DEKNDA()
{
    
    if ( FUNCTION_0044( 1 ) == 1 )
    {
        AI_ACT_SKILL( 223 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 0x40 ) == 1 )
    {
        AI_ACT_SKILL( 223 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 0x10 ) == 1 )
    {
        AI_ACT_SKILL( 223 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_01C7( 2 ) == 1 || FUNCTION_0043( 2 ) == 1 )
    {
        AI_ACT_SKILL( 212 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x80 ) == 1 || FUNCTION_0043( 0x80 ) == 1 )
    {
        AI_ACT_SKILL( 212 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x20 ) == 1 || FUNCTION_0043( 0x20 ) == 1 )
    {
        AI_ACT_SKILL( 212 );
        AI_TAR_RND();
        return;
    }

    AI_FUNCTION_0075();
}


void AI_MAYA_GARDKILL()
{
    
    if ( FUNCTION_003B( 1 ) == 1 )
    {
        AI_ASK_TO_LEAVE();
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_004D( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        AI_HANSYA( 3 );
        return;
    }
    else if ( FUNCTION_004F( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        AI_KYUSYU( 3 );
        return;
    }
    else if ( FUNCTION_0051( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        AI_MUKOU( 3 );
        return;
    }

    
    if ( FUNCTION_004D( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        AI_HANSYA( 4 );
        return;
    }
    else if ( FUNCTION_004F( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        AI_KYUSYU( 4 );
        return;
    }
    else if ( FUNCTION_0051( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        AI_MUKOU( 4 );
        return;
    }

    AI_FUNCTION_0075();
}


void AI_TAIDA_ZAKO()
{
    
    if ( FUNCTION_0044( 2 ) == 0 )
    {
        AI_ACT_SKILL( 207 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 0x80 ) == 0 )
    {
        AI_ACT_SKILL( 211 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 0x20 ) == 0 )
    {
        AI_ACT_SKILL( 209 );
        AI_TAR_RND();
        return;
    }

    AI_FUNCTION_0075();
}


void test()
{
}


void kakunin()
{
}


void AI_metis()
{
    
    if ( FUNCTION_0158( 1, 50 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
    }
    else 
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
    }

    int localVariable132 = RNG( 100 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 1 )
    {
        FUNCTION_01D2( 222 );
        return;
    }
    else if ( localVariable132 < 50 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( localVariable132 < 50 + 50 + 25 )
    {
        AI_ACT_SKILL( 122 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 125 );
        AI_TAR_RND();
        return;
    }

}


void AI_Erebos()
{
    int localVariable133 = 0;
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 511 ) == 1 )
    {
        localVariable133 = FUNCTION_0192( 2 );
        localVariable133 = localVariable133 + 1;
        FUNCTION_0193( 2, localVariable133 );
        
        if ( localVariable133 < 3 )
        {
            FUNCTION_011E( 243 );
            BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 511 );
            FUNCTION_01D2( 226 );
            return;
        }
        else 
        {
            FUNCTION_0193( 2, 0 );
        }

    }
    else 
    {
        FUNCTION_0193( 2, 0 );
    }

    
    if ( FUNCTION_0176() == 1 )
    {
        
        if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 453 ) == 1 )
        {
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 454 );
        }

        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 452 );
        FUNCTION_011E( 244 );
        AI_Erebos_B();
    }
    else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 452 ) == 1 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 453 );
    }

    FUNCTION_011E( 241 );
    AI_Erebos_A();
}


void AI_Erebos_A()
{
    FUNCTION_0193( 1, 0 );
    int localVariable134 = RNG( 100 );
    int localVariable135 = FUNCTION_0192( 0 );
    localVariable135 = localVariable135 + 1;
    FUNCTION_0193( 0, localVariable135 );
    
    if ( localVariable135 > 4 )
    {
        FUNCTION_0193( 0, 0 );
        FUNCTION_0175( 1200 );
        AI_MINE();
        FUNCTION_011E( 244 );
        return;
    }

    
    if ( localVariable134 < 20 )
    {
        AI_ACT_SKILL( 111 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_TUJYOU();
    }

}


void AI_Erebos_B()
{
    FUNCTION_0193( 0, 0 );
    int localVariable136 = RNG( 100 );
    int localVariable137 = FUNCTION_0192( 1 );
    localVariable137 = localVariable137 + 1;
    FUNCTION_0193( 1, localVariable137 );
    
    if ( localVariable137 == 3 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 );
    }
    else 
    {
        BIT_OFF( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 502 );
    }

    
    if ( localVariable137 > 3 )
    {
        
        if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 0 )
        {
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 498 );
            FUNCTION_0193( 1, 0 );
            FUNCTION_011E( 241 );
            AI_ACT_SKILL( 293 );
            AI_TAR_RND();
            return;
        }
        else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 )
        {
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 );
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 499 );
            FUNCTION_0193( 1, 0 );
            FUNCTION_011E( 241 );
            AI_ACT_SKILL( 295 );
            AI_TAR_RND();
            return;
        }
        else if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 448 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 1 )
        {
            BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 506 );
            FUNCTION_0193( 1, 0 );
            FUNCTION_011E( 241 );
            AI_ACT_SKILL( 296 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( AI_ENBAD( 2 ) == 1 || AI_ENBAD( 4 ) == 1 || AI_ENBAD( 8 ) == 1 )
    {
        AI_ACT_SKILL( 111 );
        AI_TAR_RND();
        return;
    }

    
    if ( localVariable136 < 10 )
    {
        AI_ACT_SKILL( 111 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable136 < 15 )
    {
        AI_ACT_SKILL( 48 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable136 < 20 )
    {
        AI_ACT_SKILL( 54 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable136 < 30 )
    {
        
        if ( FUNCTION_0040( 8 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable136 < 40 )
    {
        
        if ( FUNCTION_0040( 2 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable136 < 50 )
    {
        
        if ( FUNCTION_0040( 4 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable136 < 60 )
    {
        
        if ( FUNCTION_0040( 0x80 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 69 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable136 < 70 )
    {
        
        if ( FUNCTION_0044( 8 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 207 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable136 < 80 )
    {
        
        if ( FUNCTION_0044( 0x20 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 209 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable136 < 90 )
    {
        
        if ( FUNCTION_0044( 0x0200 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 209 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( 70 );
        AI_TAR_RND();
        return;
    }

}


void AI_TUJYOU()
{
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( RNG( 100 ) < 25 )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 50 )
        {
            AI_ACT_SKILL( 119 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 75 )
        {
            AI_ACT_SKILL( 142 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( RNG( 100 ) < 15 )
        {
            AI_ACT_SKILL( 9 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 30 )
        {
            AI_ACT_SKILL( 27 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 45 )
        {
            AI_ACT_SKILL( 36 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 60 )
        {
            AI_ACT_SKILL( 18 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( RNG( 100 ) < 14 )
        {
            
            if ( FUNCTION_0033( 75 ) == 0 )
            {
                AI_ACT_SKILL( 3 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 21 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( RNG( 100 ) < 28 )
        {
            
            if ( FUNCTION_0033( 75 ) == 0 )
            {
                AI_ACT_SKILL( 6 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 24 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( RNG( 100 ) < 42 )
        {
            
            if ( FUNCTION_0033( 75 ) == 0 )
            {
                AI_ACT_SKILL( 30 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 12 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( RNG( 100 ) < 56 )
        {
            
            if ( FUNCTION_0033( 75 ) == 0 )
            {
                AI_ACT_SKILL( 33 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 15 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( RNG( 100 ) < 70 )
        {
            
            if ( RNG( 100 ) < 33 )
            {
                AI_ACT_SKILL( 0x80 );
                AI_TAR_RND();
                return;
            }
            else if ( RNG( 100 ) < 66 )
            {
                AI_ACT_SKILL( 136 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 141 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( RNG( 100 ) < 80 )
        {
            
            if ( FUNCTION_0033( 75 ) == 0 )
            {
                
                if ( FUNCTION_004D( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    AI_HANSYA( 3 );
                    return;
                }
                else if ( FUNCTION_004F( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    AI_KYUSYU( 3 );
                    return;
                }
                else if ( FUNCTION_0051( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    AI_MUKOU( 3 );
                    return;
                }
                else if ( FUNCTION_004D( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    AI_HANSYA( 5 );
                    return;
                }
                else if ( FUNCTION_004F( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    AI_KYUSYU( 5 );
                    return;
                }
                else if ( FUNCTION_0051( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    AI_MUKOU( 5 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 111 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( FUNCTION_004D( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                AI_HANSYA( 4 );
                return;
            }
            else if ( FUNCTION_004F( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                AI_KYUSYU( 4 );
                return;
            }
            else if ( FUNCTION_0051( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                AI_MUKOU( 4 );
                return;
            }
            else if ( FUNCTION_004D( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                AI_HANSYA( 6 );
                return;
            }
            else if ( FUNCTION_004F( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                AI_KYUSYU( 6 );
                return;
            }
            else if ( FUNCTION_0051( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                AI_MUKOU( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 111 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 && FUNCTION_0033( 25 ) == 0 )
    {
        
        if ( RNG( 100 ) < 8 )
        {
            AI_ACT_SKILL( 9 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 0x10 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 24 )
        {
            AI_ACT_SKILL( 27 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 0x20 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 40 )
        {
            AI_ACT_SKILL( 36 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 48 )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 56 )
        {
            AI_ACT_SKILL( 18 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 0x40 )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 72 )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 80 )
        {
            AI_ACT_SKILL( 119 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 88 )
        {
            AI_ACT_SKILL( 142 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( RNG( 100 ) < 8 )
    {
        AI_ACT_SKILL( 9 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 0x10 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 24 )
    {
        AI_ACT_SKILL( 27 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 0x20 )
    {
        AI_ACT_SKILL( 24 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 40 )
    {
        AI_ACT_SKILL( 36 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 48 )
    {
        AI_ACT_SKILL( 33 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 56 )
    {
        AI_ACT_SKILL( 18 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 0x40 )
    {
        AI_ACT_SKILL( 15 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 72 )
    {
        AI_ACT_SKILL( 144 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 80 )
    {
        AI_ACT_SKILL( 119 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 88 )
    {
        AI_ACT_SKILL( 142 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 50 )
    {
        AI_ACT_SKILL( 220 );
        AI_MINE();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 221 );
        AI_MINE();
        return;
    }

}


void AI_Shadow_hero()
{
    int localVariable138 = FUNCTION_0192( 0 );
    localVariable138 = localVariable138 + 1;
    FUNCTION_0193( 0, localVariable138 );
    
    if ( localVariable138 > 3 )
    {
        FUNCTION_0193( 0, 0 );
        FUNCTION_01DF();
        return;
    }

    int localVariable139 = RNG( 100 );
    
    if ( FUNCTION_01EC() == 225 )
    {
        AI_Shadow_hero_AIGISU();
    }
    else if ( FUNCTION_01EC() == 224 )
    {
        AI_Shadow_hero_YUKARI();
    }
    else if ( FUNCTION_01EC() == 226 )
    {
        AI_Shadow_hero_MITURU();
    }
    else if ( FUNCTION_01EC() == 227 )
    {
        AI_Shadow_hero_JUNPEI();
    }
    else if ( FUNCTION_01EC() == 228 )
    {
        AI_Shadow_hero_SANADA();
    }
    else if ( FUNCTION_01EC() == 229 )
    {
        AI_Shadow_hero_AMADA();
    }
    else if ( FUNCTION_01EC() == 230 )
    {
        AI_Shadow_hero_KOROMARU();
    }

}


void AI_Shadow_hero_AIGISU()
{
    int localVariable140 = RNG( 100 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 455 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 455 );
        AI_ACT_PERSONA( 225, 120 );
        AI_HPMIN();
        FUNCTION_011E( 297 );
        return;
    }

    
    if ( FUNCTION_003C( 1 ) == 0 )
    {
        
        if ( localVariable140 < 30 )
        {
            
            if ( FUNCTION_019A( 1 ) != -1 && FUNCTION_019A( 0x10 ) != -1 && FUNCTION_019A( 0x40 ) != -1 )
            {
                AI_ACT_PERSONA( 225, 239 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_PERSONA( 225, 120 );
                AI_HPMIN();
                return;
            }

        }
        else if ( localVariable140 < 60 )
        {
            AI_ACT_PERSONA( 225, 120 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable140 < 90 )
        {
            AI_ACT_PERSONA( 225, 119 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_015D( 1, 1 ) == 1 || FUNCTION_015E( 1, 1 ) == 1 || FUNCTION_015F( 1, 1 ) == 1 )
    {
        
        if ( localVariable140 < 25 )
        {
            AI_ACT_PERSONA( 225, 134 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable140 < 50 )
        {
            AI_ACT_PERSONA( 225, 12 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable140 < 75 )
        {
            AI_ACT_PERSONA( 225, 147 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 2 ) == 0 || FUNCTION_0044( 40 ) == 0 || FUNCTION_0044( 80 ) == 0 )
        {
            AI_ACT_PERSONA( 225, 250 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_PERSONA( 225, 134 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable140 < 30 )
    {
        
        if ( FUNCTION_019A( 1 ) != -1 && FUNCTION_019A( 0x10 ) != -1 && FUNCTION_019A( 0x40 ) != -1 )
        {
            AI_ACT_PERSONA( 225, 239 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_PERSONA( 225, 120 );
            AI_HPMIN();
            return;
        }

    }
    else if ( localVariable140 < 60 )
    {
        AI_ACT_PERSONA( 225, 120 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable140 < 90 )
    {
        AI_ACT_PERSONA( 225, 119 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Shadow_hero_YUKARI()
{
    int localVariable141 = RNG( 100 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 456 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 456 );
        AI_ACT_PERSONA( 224, 18 );
        AI_HPMIN();
        FUNCTION_011E( 298 );
        return;
    }

    
    if ( localVariable141 < 25 )
    {
        AI_ACT_PERSONA( 224, 18 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable141 < 45 )
    {
        AI_ACT_PERSONA( 224, 15 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable141 < 65 )
    {
        AI_ACT_PERSONA( 224, 18 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable141 < 85 )
    {
        
        if ( FUNCTION_0033( 90 ) == 1 )
        {
            AI_ACT_PERSONA( 224, 193 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_PERSONA( 224, 18 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Shadow_hero_MITURU()
{
    int localVariable142 = RNG( 100 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 457 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 457 );
        AI_ACT_PERSONA( 226, 27 );
        AI_HPMIN();
        FUNCTION_011E( 299 );
        return;
    }

    
    if ( localVariable142 < 25 )
    {
        AI_ACT_PERSONA( 226, 27 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable142 < 45 )
    {
        AI_ACT_PERSONA( 226, 24 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable142 < 65 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            AI_ACT_PERSONA( 226, 221 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_PERSONA( 226, 27 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable142 < 85 )
    {
        AI_ACT_PERSONA( 226, 27 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_PERSONA( 226, 57 );
        AI_NOTMUKOU( 1 );
        return;
    }

}


void AI_Shadow_hero_JUNPEI()
{
    int localVariable143 = RNG( 100 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 458 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 458 );
        AI_ACT_PERSONA( 227, 144 );
        AI_HPMIN();
        FUNCTION_011E( 300 );
        return;
    }

    
    if ( localVariable143 < 25 )
    {
        AI_ACT_PERSONA( 227, 144 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable143 < 45 )
    {
        AI_ACT_PERSONA( 227, 3 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable143 < 65 )
    {
        AI_ACT_PERSONA( 227, 134 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable143 < 85 )
    {
        AI_ACT_PERSONA( 227, 0x80 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Shadow_hero_SANADA()
{
    int localVariable144 = RNG( 100 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 459 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 459 );
        AI_ACT_PERSONA( 228, 36 );
        AI_HPMIN();
        FUNCTION_011E( 301 );
        return;
    }

    
    if ( FUNCTION_0044( 2 ) == 0 || FUNCTION_0044( 0x20 ) == 0 || FUNCTION_0044( 0x80 ) == 0 )
    {
        
        if ( localVariable144 < 30 )
        {
            AI_ACT_PERSONA( 228, 36 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable144 < 60 )
        {
            AI_ACT_PERSONA( 228, 33 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable144 < 90 )
        {
            AI_ACT_PERSONA( 228, 36 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable144 < 90 )
    {
        
        if ( FUNCTION_0043( 2 ) == 1 || FUNCTION_0043( 0x80 ) == 1 || FUNCTION_0043( 0x20 ) == 1 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_PERSONA( 228, 250 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Shadow_hero_AMADA()
{
    int localVariable145 = RNG( 100 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 460 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 460 );
        AI_ACT_PERSONA( 229, 47 );
        AI_HPMIN();
        FUNCTION_011E( 302 );
        return;
    }

    
    if ( AI_ENBAD( 0x00100000 ) == 1 )
    {
        AI_ACT_PERSONA( 229, 147 );
        AI_FUNCTION_0063( 0x00100000 );
        return;
    }

    
    if ( localVariable145 < 55 )
    {
        AI_ACT_PERSONA( 229, 33 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable145 < 90 )
    {
        AI_ACT_PERSONA( 229, 47 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Shadow_hero_KOROMARU()
{
    int localVariable146 = RNG( 100 );
    
    if ( BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 461 ) == 0 )
    {
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 461 );
        AI_ACT_PERSONA( 230, 54 );
        AI_HPMIN();
        FUNCTION_011E( 303 );
        return;
    }

    
    if ( localVariable146 < 25 )
    {
        AI_ACT_PERSONA( 230, 6 );
        AI_TAR_RND();
    }
    else if ( localVariable146 < 45 )
    {
        AI_ACT_PERSONA( 230, 9 );
        AI_TAR_RND();
    }
    else if ( localVariable146 < 65 )
    {
        AI_ACT_PERSONA( 230, 9 );
        AI_TAR_RND();
    }
    else if ( localVariable146 < 85 )
    {
        AI_ACT_PERSONA( 230, 54 );
        AI_TAR_RND();
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Shadow_hero_METIS()
{
    AI_ACT_PERSONA( 231, 29 );
    AI_TAR_RND();
}


void AI_AMADAK_AEGIS()
{
    int localVariable147 = RNG( 100 );
    int localVariable148 = RNG( 100 );
    int localVariable149 = RNG( 100 );
    int localVariable150 = RNG( 100 );
    
    if ( FUNCTION_004D( 5 ) == 1 )
    {
        
        if ( RNG( 100 ) < 60 )
        {
            AI_ACT_SKILL( 232 );
            AI_HANSYA( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_004F( 5 ) == 1 )
    {
        
        if ( RNG( 100 ) < 70 )
        {
            AI_ACT_SKILL( 232 );
            AI_KYUSYU( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 47 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0051( 5 ) == 1 )
    {
        
        if ( RNG( 100 ) < 50 )
        {
            AI_ACT_SKILL( 232 );
            AI_MUKOU( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 147 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( MYHP( 235, 50 ) == 1 && BIT_CHK( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 ) == 0 )
    {
        AI_ACT_SKILL( 194 );
        AI_ID( 235 );
        BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0400 + 449 );
        return;
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( AI_ENBAD( 0x00100000 ) == 1 )
        {
            AI_ACT_SKILL( 147 );
            FUNCTION_008C();
            return;
        }
        else if ( AI_ENBAD( 0x00100000 ) == 0 )
        {
            
            if ( FUNCTION_0044( 0x4000 ) == 0 )
            {
                
                if ( localVariable147 < 10 )
                {
                    AI_ACT_WEAPON();
                    AI_TAR_RND();
                    return;
                }
                else if ( localVariable147 < 10 + 20 )
                {
                    AI_ACT_SKILL( 30 );
                    AI_TAR_RND();
                    return;
                }
                else if ( localVariable147 < 10 + 20 + 20 )
                {
                    AI_ACT_SKILL( 47 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 226 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( FUNCTION_0044( 0x4000 ) == 1 )
            {
                
                if ( localVariable148 < 10 )
                {
                    AI_ACT_WEAPON();
                    AI_TAR_RND();
                    return;
                }
                else if ( localVariable148 < 10 + 60 )
                {
                    AI_ACT_SKILL( 30 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 47 );
                    AI_TAR_RND();
                    return;
                }

            }

        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        
        if ( AI_ENBAD( 0x00100000 ) == 1 )
        {
            AI_ACT_SKILL( 147 );
            FUNCTION_008C();
            return;
        }
        else if ( AI_ENBAD( 0x00100000 ) == 0 )
        {
            
            if ( FUNCTION_0044( 0x00008000 ) == 0 )
            {
                AI_ACT_SKILL( 227 );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0044( 0x00008000 ) == 1 )
            {
                
                if ( FUNCTION_0043( 0x00020000 ) == 0 )
                {
                    
                    if ( localVariable149 < 10 )
                    {
                        AI_ACT_WEAPON();
                        AI_TAR_RND();
                        return;
                    }
                    else if ( localVariable149 < 10 + 70 )
                    {
                        AI_ACT_SKILL( 147 );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( 242 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( FUNCTION_0043( 0x00020000 ) == 1 )
                {
                    
                    if ( localVariable150 < 10 )
                    {
                        AI_ACT_WEAPON();
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( 147 );
                        AI_TAR_RND();
                        return;
                    }

                }

            }

        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_TAR_RND();
        return;
    }

}


void AI_SANADA_AEGIS()
{
    int localVariable151 = RNG( 100 );
    int localVariable152 = RNG( 100 );
    int localVariable153 = RNG( 100 );
    int localVariable154 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_SKILL( 118 );
        STAND();
        return;
    }
    else if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        AI_ACT_SKILL( 30 );
        STAND();
        return;
    }
    else if ( FUNCTION_0044( 0x00010000 ) == 1 )
    {
        
        if ( FUNCTION_0044( 0x00020000 ) == 1 )
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 0x00020000 ) == 0 )
        {
            AI_ACT_SKILL( 221 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0044( 0x00020000 ) == 1 )
    {
        AI_ACT_SKILL( 220 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( FUNCTION_0044( 0x20 ) == 0 )
        {
            
            if ( localVariable151 < 10 )
            {
                AI_ACT_WEAPON();
                STAND();
                return;
            }
            else if ( localVariable151 < 10 + 40 )
            {
                AI_ACT_SKILL( 118 );
                STAND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 209 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( FUNCTION_0044( 0x20 ) == 1 )
        {
            
            if ( localVariable152 < 20 )
            {
                AI_ACT_WEAPON();
                STAND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 118 );
                STAND();
                return;
            }

        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        
        if ( FUNCTION_0158( 236, 30 ) == 0 )
        {
            
            if ( localVariable153 < 20 )
            {
                AI_ACT_WEAPON();
                STAND();
                return;
            }
            else if ( localVariable153 < 20 + 40 )
            {
                AI_ACT_SKILL( 220 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 221 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( FUNCTION_0158( 236, 30 ) == 1 )
        {
            
            if ( localVariable154 < 10 )
            {
                AI_ACT_WEAPON();
                STAND();
                return;
            }
            else if ( localVariable154 < 10 + 20 )
            {
                AI_ACT_SKILL( 220 );
                AI_TAR_RND();
                return;
            }
            else if ( localVariable154 < 10 + 20 + 20 )
            {
                AI_ACT_SKILL( 221 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 193 );
                AI_ID( 236 );
                return;
            }

        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_TAR_RND();
        return;
    }

}


void AI_Junpei()
{
    int localVariable155 = RNG( 100 );
    
    if ( FUNCTION_003E( 4 ) == 1 )
    {
        AI_ACT_SKILL( 199 );
        AI_FUNCTION_0063( 4 );
        return;
    }

    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_SKILL( 144 );
        AI_TAR_RND();
        return;
    }

    
    if ( localVariable155 < 13 )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable155 < 13 + 13 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable155 < 13 + 13 + 13 )
    {
        AI_ACT_SKILL( 144 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable155 < 13 + 13 + 13 + 13 )
    {
        
        if ( FUNCTION_01C7( 0x40 ) == 0 )
        {
            AI_ACT_SKILL( 218 );
            AI_MINE();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable155 < 13 + 13 + 13 + 13 + 12 )
    {
        
        if ( AI_ENBAD( 4 ) == 0 )
        {
            AI_ACT_SKILL( 62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable155 < 13 + 13 + 13 + 13 + 12 + 13 )
    {
        
        if ( FUNCTION_004D( 3 ) == 1 )
        {
            AI_ACT_SKILL( 229 );
            AI_HANSYA( 3 );
            return;
        }
        else if ( FUNCTION_004F( 3 ) == 1 )
        {
            AI_ACT_SKILL( 229 );
            AI_KYUSYU( 3 );
            return;
        }
        else if ( FUNCTION_0051( 3 ) == 1 )
        {
            AI_ACT_SKILL( 229 );
            AI_MUKOU( 3 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 220 );
            AI_MINE();
            return;
        }

    }
    else if ( localVariable155 < 13 + 13 + 13 + 13 + 12 + 13 + 13 )
    {
        AI_ACT_SKILL( 129 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Koromaru()
{
    int localVariable156 = RNG( 100 );
    int localVariable157 = RNG( 100 );
    
    if ( FUNCTION_003E( 1 ) == 1 )
    {
        AI_ACT_SKILL( 237 );
        AI_FUNCTION_0063( 1 );
        return;
    }

    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( localVariable157 < 50 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( localVariable156 < 12 )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable156 < 12 + 11 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable156 < 12 + 11 + 11 )
    {
        AI_ACT_SKILL( 53 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable156 < 12 + 11 + 11 + 11 )
    {
        AI_ACT_SKILL( 54 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable156 < 12 + 11 + 11 + 11 + 11 )
    {
        
        if ( AI_ENBAD( 8 ) == 0 )
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 65 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable156 < 12 + 11 + 11 + 11 + 11 + 11 )
    {
        AI_ACT_SKILL( 134 );
        AI_TAR_RND();
        return;
    }
    else if ( localVariable156 < 12 + 11 + 11 + 11 + 11 + 11 + 11 )
    {
        
        if ( FUNCTION_0057( 93 ) == 0 )
        {
            AI_ACT_SKILL( 93 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( localVariable156 < 12 + 11 + 11 + 11 + 11 + 11 + 11 + 11 )
    {
        
        if ( FUNCTION_0044( 0x00400000 ) == 0 )
        {
            AI_ACT_SKILL( 74 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_YUKARI_AEGIS()
{
    int localVariable158 = RNG( 100 );
    int localVariable159 = RNG( 100 );
    
    if ( FUNCTION_0044( 0x00020000 ) == 1 )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( localVariable158 < 33 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( localVariable158 < 33 + 33 )
        {
            AI_ACT_SKILL( 142 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        
        if ( localVariable159 < 30 )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable159 < 30 + 30 )
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable159 < 30 + 30 + 20 )
        {
            
            if ( FUNCTION_0044( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 211 );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0044( 0x80 ) == 1 )
            {
                
                if ( FUNCTION_004D( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    AI_HANSYA( 4 );
                    return;
                }
                else if ( FUNCTION_004F( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    AI_KYUSYU( 4 );
                    return;
                }
                else if ( FUNCTION_0051( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    AI_MUKOU( 4 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 143 );
                    AI_TAR_RND();
                    return;
                }

            }

        }
        else if ( localVariable159 < 30 + 30 + 20 + 20 )
        {
            
            if ( FUNCTION_0043( 4 ) == 0 )
            {
                AI_ACT_SKILL( 214 );
                AI_TAR_MYAI();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 143 );
                AI_TAR_RND();
                return;
            }

        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_TAR_RND();
        return;
    }

}


void AI_MIRURU_AEGIS()
{
    int localVariable160 = RNG( 100 );
    int localVariable161 = RNG( 100 );
    
    if ( FUNCTION_0044( 0x00020000 ) == 1 )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        AI_ACT_SKILL( 24 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( localVariable160 < 20 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( localVariable160 < 20 + 20 )
        {
            
            if ( AI_ENBAD( 1 ) == 0 )
            {
                AI_ACT_SKILL( 58 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 144 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( localVariable160 < 20 + 20 + 20 )
        {
            
            if ( AI_ENBAD( 4 ) == 0 )
            {
                AI_ACT_SKILL( 62 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 144 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        
        if ( localVariable161 < 10 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( localVariable161 < 10 + 40 )
        {
            AI_ACT_SKILL( 221 );
            AI_TAR_RND();
            return;
        }
        else if ( localVariable161 < 10 + 40 + 40 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }

    }

}

