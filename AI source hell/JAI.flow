
// 
// FlowScript decompiled using Atlus Script Tools by TGE (2017-2021)
// In the unfortunate case of any bugs, please report them back to me.
// 


// 
// Imports
// 

import( "JAI.msg" );

// 
// Procedure declarations
// 

void AI_EVENT_1A0_BTLSTART()
{
    FUNCTION_01B6( 12, 0 );
}


void AI_EVENT_1A0_ACTSTART()
{
    
    if ( FUNCTION_01BD( 0, 1 ) == 1 )
    {
        
        if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 1 ) && ( FUNCTION_00A9( 276, 1 ) == 1 ) ) && AI_MYUSESKILL( 276, 192 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_01B6( 14, 0 );
        }

    }
    else if ( FUNCTION_01A7() < 60 )
    {
        
        if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) && FUNCTION_00A9( 276, 1 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
            FUNCTION_01B6( 12, 0 );
        }

    }

}


void AI_EVENT_1A0_ACTEND()
{
    
    if ( ( ( FUNCTION_01BD( 1, 0x0100 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) );
        FUNCTION_01B6( 13, 0 );
    }
    else if ( ( FUNCTION_0158( 0x0100, 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
        FUNCTION_01B6( 0x10, 0 );
    }
    else if ( ( FUNCTION_0158( 0x0100, 50 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
        FUNCTION_01B6( 17, 0 );
    }

}


void AI_EVENT_1A1_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01B0();
    FUNCTION_01C1( 0 );
    EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
    MSG( 2 );
    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1A1_ACTSTART()
{
    FUNCTION_01AD();
}


void AI_EVENT_1A1_ACTEND()
{
    
    if ( ( FUNCTION_01BE( 1, 257 ) == 1 ) || ( FUNCTION_01BE( 1, 258 ) == 1 ) )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 0 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
            FUNCTION_01B6( 22, 0 );
        }

    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        FUNCTION_01B6( 18, 0 );
    }
    else if ( ( FUNCTION_0036( 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B6( 20, 0 );
    }

}


void AI_EVENT_1A2_BTLSTART()
{
    FUNCTION_01B6( 24, 0 );
}


void AI_EVENT_1A2_ACTSTART()
{
    FUNCTION_01AD();
}


void AI_EVENT_1A2_ACTEND()
{
    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        FUNCTION_01B6( 25, 0 );
    }
    else if ( ( FUNCTION_0036( 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B6( 26, 0 );
    }

}


void AI_EVENT_1A3_BTLSTART()
{
    FUNCTION_01B6( 27, 0 );
}


void AI_EVENT_1A3_ACTSTART()
{
    
    if ( FUNCTION_01BD( 0, 1 ) == 1 )
    {
        
        if ( ( FUNCTION_003E( 1 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01B0();
            EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
            FUNCTION_01C1( 0 );
            MSG( 3 );
            FUNCTION_00B7( 0 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }

    }

}


void AI_EVENT_1A3_ACTEND()
{
    
    if ( ( ( FUNCTION_003E( 1 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B6( 28, 0 );
    }
    else if ( ( FUNCTION_0036( 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B6( 20, 0 );
    }

}


void AI_EVENT_1A4_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01B0();
    FUNCTION_01C1( 0 );
    EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 3 );
    MSG( 4 );
    MSG( 5 );
    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1A4_ACTSTART()
{
    
    if ( FUNCTION_01BD( 0, 1 ) == 1 )
    {
        
        if ( ( AI_CHK_PLAYER_ID( 277 ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
            FUNCTION_01B8();
            FUNCTION_01B9();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B0();
            EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
            MSG( 6 );
            MSG( 7 );
            FUNCTION_00B7( 0 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
            return;
        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
        {
            
            if ( FUNCTION_01AF( 1, 277 ) == 1 )
            {
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
                FUNCTION_01B8();
                FUNCTION_01BA();
                OPEN_MSG_WIN();
                FUNCTION_01C1( 0 );
                FUNCTION_01B0();
                EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
                MSG( 8 );
                FUNCTION_00B7( 0 );
                CLOSE_MSG_WIN();
                FUNCTION_01B7();
                FUNCTION_01B9();
            }

        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B0();
            EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
            MSG( 9 );
            FUNCTION_00B7( 0 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }

    }

}


void AI_EVENT_1A4_ACTEND()
{
    
    if ( ( FUNCTION_01AF( 1, 277 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
        FUNCTION_01B6( 30, 0 );
    }
    else if ( ( FUNCTION_0162( 261, 361 ) == 1 ) || ( FUNCTION_0162( 262, 362 ) == 1 ) )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) ) == 0 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
            FUNCTION_01B6( 33, 0 );
        }

    }

}


void AI_EVENT_1A5_BTLSTART()
{
    FUNCTION_01B0();
    FUNCTION_01B6( 34, 0 );
}


void AI_EVENT_1A5_ACTSTART()
{
    
    if ( FUNCTION_01BD( 0, 1 ) == 1 )
    {
        
        if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B0();
            EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
            MSG( 10 );
            MSG( 11 );
            FUNCTION_00B7( 0 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B0();
            EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
            MSG( 12 );
            MSG( 13 );
            FUNCTION_00B7( 0 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }

    }

}


void AI_EVENT_1A5_ACTEND()
{
    
    if ( ( FUNCTION_0036( 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
        FUNCTION_01B6( 37, 0 );
    }

}


void AI_EVENT_1A6_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01B0();
    FUNCTION_01C1( 0 );
    EVT_CUTIN_FUNCTION_00B6( 1, 0, 0, 6, 4, 2, 3 );
    MSG( 20 );
    FUNCTION_00B7( 1 );
    FUNCTION_000C( 20 );
    EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
    MSG( 21 );
    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1A6_ACTSTART()
{
    
    if ( ( ( FUNCTION_01BD( 0, 1 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01B0();
        FUNCTION_01C1( 0 );
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
        MSG( 22 );
        MSG( 23 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( AI_CHK_PLAYER_ID( 266 ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 3 );
        MSG( 24 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1A6_ACTEND()
{
    
    if ( ( FUNCTION_01AF( 1, 266 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) );
        FUNCTION_01B6( 43, 0 );
    }
    else if ( ( FUNCTION_0158( 266, 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B6( 39, 0 );
    }
    else if ( ( FUNCTION_0158( 265, 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B6( 42, 0 );
    }

}


void AI_EVENT_1A7_BTLSTART()
{
    FUNCTION_01AD();
}


void AI_EVENT_1A7_ACTSTART()
{
    
    if ( ( FUNCTION_01BD( 0, 1 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 506 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 506 ) );
        FUNCTION_01B6( 44, 0 );
    }
    else if ( FUNCTION_01BD( 1, 267 ) == 1 )
    {
        
        if ( ( FUNCTION_0158( 267, 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( -721.10f, 296.90f, -778.60f, -658.70f, 268.30f, -705.80f );
            FUNCTION_01B4( -481.80f, 45.30f, -918.50f, -450.90f, 53.20f, -823.70f );
            FUNCTION_01B5( 135 );
            MSG( 0x20 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( FUNCTION_0158( 267, 50 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( -482.00f, 384.30f, -893.00f, -454.10f, 358.80f, -800.50f );
            FUNCTION_01B4( -603.10f, 245.00f, -876.50f, -558.10f, 219.50f, -791.00f );
            FUNCTION_01B5( 115 );
            MSG( 29 );
            FUNCTION_01B3( 260.80f, 106.30f, 694.50f, 233.80f, 103.50f, 598.30f );
            FUNCTION_01B4( 509.50f, 112.70f, 826.10f, 462.70f, 109.80f, 737.80f );
            FUNCTION_01B5( 127 );
            MSG( 30 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( FUNCTION_0158( 267, 75 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( -333.10f, 89.30f, -941.70f, -324.10f, 90.50f, -842.20f );
            FUNCTION_01B4( -629.30f, 89.30f, -863.40f, -575.90f, 90.50f, -778.90f );
            FUNCTION_01B5( 119 );
            MSG( 27 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 0 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 100.90f, 311.60f, 87.80f, 58.70f, 270.70f, 6.90f );
            FUNCTION_01B4( -124.70f, 96.20f, 220.40f, -128.80f, 89.40f, 120.70f );
            FUNCTION_01B5( 70 );
            MSG( 25 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }

    }
    else if ( FUNCTION_01BD( 1, 268 ) == 1 )
    {
        
        if ( ( FUNCTION_0158( 268, 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 404.40f, 298.10f, -1012.00f, 362.30f, 264.00f, -928.10f );
            FUNCTION_01B4( 663.50f, 163.90f, -822.90f, 585.60f, 148.00f, -762.30f );
            FUNCTION_01B5( 125 );
            MSG( 33 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( FUNCTION_0158( 268, 50 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 393.20f, 243.90f, -907.10f, 353.40f, 210.80f, -821.60f );
            FUNCTION_01B4( 109.50f, 49.90f, -997.00f, 109.40f, 54.60f, -897.10f );
            FUNCTION_01B5( 160 );
            MSG( 31 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( FUNCTION_0158( 268, 75 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 213.80f, 143.40f, -916.60f, 201.90f, 130.90f, -818.10f );
            FUNCTION_01B4( 405.80f, 143.40f, -872.30f, 358.30f, 130.90f, -785.20f );
            FUNCTION_01B5( 123 );
            MSG( 28 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) ) == 0 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 213.80f, 143.40f, -916.60f, 201.90f, 130.90f, -818.10f );
            FUNCTION_01B4( 405.80f, 143.40f, -872.30f, 358.30f, 130.90f, -785.20f );
            FUNCTION_01B5( 123 );
            MSG( 26 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }

    }

}


void AI_EVENT_1A7_ACTEND()
{
    FUNCTION_01AD();
}


void AI_EVENT_1A8_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B0();
    EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
    MSG( 36 );
    MSG( 37 );
    MSG( 38 );
    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1A8_ACTSTART()
{
    
    if ( FUNCTION_017A() == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
    }
    else if ( FUNCTION_01BD( 0, 1 ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 506 ) ) == 0 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            return;
        }
        else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) ) && ( FUNCTION_017A() == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B0();
            EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
            MSG( 39 );
            MSG( 40 );
            FUNCTION_00B7( 0 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 505 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 505 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B0();
            EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
            MSG( 49 );
            MSG( 50 );
            FUNCTION_00B7( 0 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( FUNCTION_015B( 281, 0x0400 ) == 1 ) && ( FUNCTION_015B( 295, 0x0400 ) == 1 ) )
        {
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) ) == 0 )
            {
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) );
                FUNCTION_01B8();
                FUNCTION_01BA();
                OPEN_MSG_WIN();
                FUNCTION_01C1( 0 );
                FUNCTION_01B0();
                EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 3 );
                MSG( 46 );
                MSG( 47 );
                MSG( 48 );
                FUNCTION_00B7( 0 );
                CLOSE_MSG_WIN();
                FUNCTION_01B7();
                FUNCTION_01B9();
            }
            else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 505 ) ) == 1 ) )
            {
                FUNCTION_01B6( 50, 0 );
            }

        }

    }

}


void AI_EVENT_1A8_ACTEND()
{
    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 506 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 507 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 507 ) );
        FUNCTION_01B6( 45, 0 );
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B6( 46, 0 );
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) );
        FUNCTION_01B6( 48, 0 );
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 508 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 509 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 509 ) );
        FUNCTION_01B6( 51, 0 );
    }
    else if ( ( FUNCTION_0158( 269, 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 510 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 510 ) );
        FUNCTION_01B6( 52, 0 );
    }

}


void AI_JIBAKU()
{
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
        FUNCTION_01B6( 47, 0 );
    }

}


void AI_EVENT_1A9_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B3( 134.80f, 383.90f, -901.60f, 101.10f, 343.80f, -816.50f );
    FUNCTION_01B4( -17.10f, 58.40f, -791.30f, -25.30f, 62.40f, -691.70f );
    FUNCTION_01B5( 170 );
    MSG( 51 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1A9_ACTSTART()
{
    FUNCTION_01AD();
}


void AI_EVENT_1A9_ACTEND()
{
    
    if ( ( FUNCTION_0158( 264, 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 199.70f, 511.40f, -820.20f, 158.50f, 450.70f, -752.20f );
        FUNCTION_01B4( -11.40f, 511.40f, -872.10f, -24.30f, 450.70f, -793.70f );
        FUNCTION_01B5( 108 );
        MSG( 55 );
        FUNCTION_01B3( 13.80f, 112.00f, 186.70f, 23.10f, 107.10f, 87.20f );
        FUNCTION_01B4( -6.60f, 122.80f, 404.30f, 2.70f, 117.90f, 304.90f );
        FUNCTION_01B5( 112 );
        MSG( 56 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( FUNCTION_0158( 264, 50 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 123.70f, 406.00f, 204.60f, 118.80f, 347.40f, 123.70f );
        FUNCTION_01B4( 1.20f, 406.00f, 198.40f, 16.60f, 347.40f, 118.80f );
        FUNCTION_01B5( 123 );
        MSG( 54 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( FUNCTION_0158( 264, 75 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -91.20f, 185.40f, -455.50f, -106.40f, 170.30f, -357.90f );
        FUNCTION_01B4( -164.00f, 74.20f, -831.40f, -148.20f, 73.80f, -732.70f );
        FUNCTION_01B5( 123 );
        MSG( 53 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1AA_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B3( -376.00f, 464.70f, -832.60f, -338.80f, 413.30f, -755.30f );
    FUNCTION_01B4( -1.40f, 114.70f, -996.50f, -12.60f, 107.20f, -897.40f );
    FUNCTION_01B5( 136 );
    MSG( 57 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1AA_ACTSTART()
{
    
    if ( ( FUNCTION_01BD( 1, 271 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -184.90f, 185.00f, -870.30f, -160.60f, 164.70f, -775.50f );
        FUNCTION_01B4( 129.70f, 185.00f, -849.90f, 98.90f, 164.70f, -757.00f );
        FUNCTION_01B5( 200 );
        MSG( 58 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1AA_ACTEND()
{
    
    if ( ( ( ( ( ( ( ( ( ( ( FUNCTION_0052( 0 ) == 0 ) && ( FUNCTION_0052( 1 ) == 0 ) ) && ( FUNCTION_0052( 2 ) == 0 ) ) && ( FUNCTION_0052( 3 ) == 0 ) ) && ( FUNCTION_0052( 4 ) == 0 ) ) && ( FUNCTION_0052( 5 ) == 0 ) ) && ( FUNCTION_0052( 6 ) == 0 ) ) && ( FUNCTION_0052( 7 ) == 0 ) ) && ( FUNCTION_0052( 8 ) == 0 ) ) && ( FUNCTION_0052( 9 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        MSG( 61 );
        MSG( 62 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( FUNCTION_0158( 271, 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -38.80f, 230.30f, -857.80f, -44.50f, 197.60f, -763.40f );
        FUNCTION_01B4( -30.40f, 278.10f, -995.70f, -36.10f, 245.40f, -901.40f );
        FUNCTION_01B5( 135 );
        MSG( 65 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( FUNCTION_0158( 271, 50 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 3.60f, 125.90f, 341.50f, 4.40f, 116.20f, 241.90f );
        FUNCTION_01B4( 1.10f, 154.90f, 639.40f, 1.90f, 145.20f, 539.90f );
        FUNCTION_01B5( 122 );
        MSG( 0x40 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( FUNCTION_0158( 271, 75 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -71.60f, 61.40f, 608.10f, -50.80f, 58.80f, 510.30f );
        FUNCTION_01B4( -354.50f, 61.40f, 509.30f, -303.60f, 58.80f, 423.30f );
        FUNCTION_01B5( 200 );
        MSG( 63 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1AB_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B3( -157.00f, 398.80f, 756.60f, -128.60f, 369.10f, 665.50f );
    FUNCTION_01B4( -10.60f, 88.70f, 843.50f, 4.80f, 87.90f, 744.70f );
    FUNCTION_01B5( 111 );
    MSG( 67 );
    FUNCTION_01B3( 231.10f, 189.60f, -872.00f, 182.60f, 173.30f, -786.10f );
    FUNCTION_01B4( -19.10f, 99.50f, -982.70f, -31.80f, 97.20f, -883.50f );
    FUNCTION_01B5( 122 );
    MSG( 68 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1AB_ACTSTART()
{
    
    if ( ( FUNCTION_01BD( 0, 1 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        MSG( 66 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1AB_ACTEND()
{
    
    if ( ( FUNCTION_0158( 272, 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 180.30f, 173.70f, -1061.90f, 145.70f, 162.00f, -968.80f );
        FUNCTION_01B4( -113.20f, 110.40f, -1120.70f, -110.50f, 106.40f, -1020.80f );
        FUNCTION_01B5( 124 );
        MSG( 73 );
        FUNCTION_01B3( 31.00f, 408.90f, 456.00f, 38.80f, 367.10f, 365.40f );
        FUNCTION_01B4( -3.40f, 99.80f, 853.80f, 5.20f, 96.20f, 754.30f );
        FUNCTION_01B5( 142 );
        MSG( 74 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( FUNCTION_0158( 272, 50 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 30.30f, 422.70f, 647.60f, 38.80f, 386.50f, 554.80f );
        FUNCTION_01B4( 7.20f, 268.40f, 900.90f, 16.00f, 241.80f, 804.90f );
        FUNCTION_01B5( 125 );
        MSG( 71 );
        FUNCTION_01B3( 161.60f, 292.50f, -929.10f, 123.40f, 259.50f, -842.80f );
        FUNCTION_01B4( -11.20f, 64.80f, -892.80f, -25.90f, 67.50f, -793.90f );
        FUNCTION_01B5( 108 );
        MSG( 72 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( FUNCTION_0158( 272, 75 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -122.10f, 524.70f, 286.40f, -93.50f, 461.30f, 214.50f );
        FUNCTION_01B4( 60.90f, 354.00f, 401.70f, 66.70f, 314.80f, 309.90f );
        FUNCTION_01B5( 137 );
        MSG( 69 );
        FUNCTION_01B3( -47.90f, 392.80f, -992.80f, -57.60f, 347.50f, -904.20f );
        FUNCTION_01B4( -14.70f, 109.80f, -1123.40f, -28.10f, 108.40f, -1024.30f );
        FUNCTION_01B5( 112 );
        MSG( 70 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1AC_BTLSTART()
{
    FUNCTION_01AD();
}


void AI_EVENT_1AC_ACTSTART()
{
    
    if ( FUNCTION_01BD( 0, 1 ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 880 ) ) == 0 )
        {
            BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 880 ) );
            FUNCTION_01B6( 55, 0 );
        }
        else if ( ( AI_CHK_PLAYER_ID( 282 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 881 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 881 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
            FUNCTION_01C1( 0 );
            FUNCTION_01B0();
            MSG( 75 );
            MSG( 76 );
            FUNCTION_00B7( 0 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( AI_CHK_PLAYER_ID( 283 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 882 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 882 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
            FUNCTION_01C1( 0 );
            FUNCTION_01B0();
            MSG( 77 );
            FUNCTION_00B7( 0 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( AI_CHK_PLAYER_ID( 296 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 895 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 895 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 3 );
            FUNCTION_01C1( 0 );
            FUNCTION_01B0();
            MSG( 78 );
            FUNCTION_00B7( 0 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( FUNCTION_0182() == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 896 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 896 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
            FUNCTION_01C1( 0 );
            FUNCTION_01B0();
            MSG( 79 );
            MSG( 80 );
            MSG( 81 );
            FUNCTION_00B7( 0 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }

    }

}


void AI_EVENT_1AC_ACTEND()
{
    
    if ( ( AI_CHK_PLAYER_ID( 284 ) == 1 ) && BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 883 ) ) )
    {
        BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 883 ) );
        FUNCTION_01B6( 55, 0 );
    }
    else if ( ( AI_CHK_PLAYER_ID( 284 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 884 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 884 ) );
        FUNCTION_01B6( 58, 0 );
    }
    else if ( ( AI_CHK_PLAYER_ID( 285 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 885 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 885 ) );
        FUNCTION_01B6( 58, 0 );
    }
    else if ( ( AI_CHK_PLAYER_ID( 286 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 886 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 886 ) );
        FUNCTION_01B6( 58, 0 );
    }
    else if ( ( AI_CHK_PLAYER_ID( 287 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 887 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 887 ) );
        FUNCTION_01B6( 58, 0 );
    }
    else if ( ( AI_CHK_PLAYER_ID( 288 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 888 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 888 ) );
        FUNCTION_01B6( 58, 0 );
    }
    else if ( ( AI_CHK_PLAYER_ID( 288 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 889 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 889 ) );
        FUNCTION_01B6( 58, 0 );
    }
    else if ( ( AI_CHK_PLAYER_ID( 289 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 890 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 890 ) );
        FUNCTION_01B6( 58, 0 );
    }
    else if ( ( AI_CHK_PLAYER_ID( 290 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 891 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 891 ) );
        FUNCTION_01B6( 58, 0 );
    }
    else if ( ( AI_CHK_PLAYER_ID( 291 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 892 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 892 ) );
        FUNCTION_01B6( 58, 0 );
    }
    else if ( ( AI_CHK_PLAYER_ID( 292 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 893 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 893 ) );
        FUNCTION_01B6( 58, 0 );
    }
    else if ( ( AI_CHK_PLAYER_ID( 293 ) == 1 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 894 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 894 ) );
        FUNCTION_01B6( 58, 0 );
    }

}


void NYX_TAROT_CHANGE()
{
    
    if ( FUNCTION_00EC( 1, 273 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -1087.50f, 571.90f, -209.10f, -989.40f, 554.00f, -216.30f );
        FUNCTION_01B4( -1127.30f, 817.00f, -596.40f, -1046.70f, 775.90f, -553.90f );
        FUNCTION_01B5( 143 );
        MSG( 82 );
        FUNCTION_01B3( 366.60f, 294.50f, 1165.70f, 346.50f, 291.30f, 1067.80f );
        FUNCTION_01B4( -351.80f, 50.40f, 1158.30f, -327.50f, 59.40f, 1061.80f );
        FUNCTION_01B5( 159 );
        MSG( 83 );
        FUNCTION_01B3( 41.60f, 392.50f, 254.20f, 37.00f, 407.80f, 155.40f );
        FUNCTION_01B4( 32.70f, 316.80f, 60.30f, 28.40f, 355.60f, -31.70f );
        FUNCTION_01B5( 106 );
        MSG( 84 );
        FUNCTION_01B3( 205.60f, 299.40f, 682.90f, 184.90f, 311.50f, 585.80f );
        FUNCTION_01B4( 308.70f, 54.50f, 1263.70f, 290.50f, 62.40f, 1165.70f );
        FUNCTION_01B5( 181 );
        MSG( 85 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_00EC( 1, 282 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 781.70f, 851.30f, -1000.70f, 728.40f, 810.50f, -926.60f );
        FUNCTION_01B4( 915.20f, 708.60f, -953.10f, 848.70f, 682.20f, -883.20f );
        FUNCTION_01B5( 65 );
        MSG( 86 );
        FUNCTION_01B3( 442.40f, 730.80f, 287.90f, 393.90f, 704.40f, 204.50f );
        FUNCTION_01B4( 164.60f, 417.80f, 214.40f, 139.20f, 441.00f, 120.50f );
        FUNCTION_01B5( 186 );
        MSG( 87 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_00EC( 1, 283 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 781.70f, 851.30f, -1000.70f, 728.40f, 810.50f, -926.60f );
        FUNCTION_01B4( 915.20f, 708.60f, -953.10f, 848.70f, 682.20f, -883.20f );
        FUNCTION_01B5( 68 );
        MSG( 88 );
        FUNCTION_01B3( 442.40f, 730.80f, 287.90f, 393.90f, 704.40f, 204.50f );
        FUNCTION_01B4( 164.60f, 417.80f, 214.40f, 139.20f, 441.00f, 120.50f );
        FUNCTION_01B5( 148 );
        MSG( 89 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_00EC( 1, 284 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 781.70f, 851.30f, -1000.70f, 728.40f, 810.50f, -926.60f );
        FUNCTION_01B4( 915.20f, 708.60f, -953.10f, 848.70f, 682.20f, -883.20f );
        FUNCTION_01B5( 70 );
        MSG( 90 );
        FUNCTION_01B3( 442.40f, 730.80f, 287.90f, 393.90f, 704.40f, 204.50f );
        FUNCTION_01B4( 164.60f, 417.80f, 214.40f, 139.20f, 441.00f, 120.50f );
        FUNCTION_01B5( 176 );
        MSG( 91 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_00EC( 1, 285 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 781.70f, 851.30f, -1000.70f, 728.40f, 810.50f, -926.60f );
        FUNCTION_01B4( 915.20f, 708.60f, -953.10f, 848.70f, 682.20f, -883.20f );
        FUNCTION_01B5( 68 );
        MSG( 92 );
        FUNCTION_01B3( 442.40f, 730.80f, 287.90f, 393.90f, 704.40f, 204.50f );
        FUNCTION_01B4( 164.60f, 417.80f, 214.40f, 139.20f, 441.00f, 120.50f );
        FUNCTION_01B5( 148 );
        MSG( 93 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_00EC( 1, 286 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 781.70f, 851.30f, -1000.70f, 728.40f, 810.50f, -926.60f );
        FUNCTION_01B4( 915.20f, 708.60f, -953.10f, 848.70f, 682.20f, -883.20f );
        FUNCTION_01B5( 68 );
        MSG( 94 );
        FUNCTION_01B3( 442.40f, 730.80f, 287.90f, 393.90f, 704.40f, 204.50f );
        FUNCTION_01B4( 164.60f, 417.80f, 214.40f, 139.20f, 441.00f, 120.50f );
        FUNCTION_01B5( 156 );
        MSG( 95 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_00EC( 1, 287 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 781.70f, 851.30f, -1000.70f, 728.40f, 810.50f, -926.60f );
        FUNCTION_01B4( 915.20f, 708.60f, -953.10f, 848.70f, 682.20f, -883.20f );
        FUNCTION_01B5( 67 );
        MSG( 96 );
        FUNCTION_01B3( 442.40f, 730.80f, 287.90f, 393.90f, 704.40f, 204.50f );
        FUNCTION_01B4( 164.60f, 417.80f, 214.40f, 139.20f, 441.00f, 120.50f );
        FUNCTION_01B5( 225 );
        MSG( 97 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_00EC( 1, 288 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 781.70f, 851.30f, -1000.70f, 728.40f, 810.50f, -926.60f );
        FUNCTION_01B4( 915.20f, 708.60f, -953.10f, 848.70f, 682.20f, -883.20f );
        FUNCTION_01B5( 70 );
        MSG( 98 );
        FUNCTION_01B3( 442.40f, 730.80f, 287.90f, 393.90f, 704.40f, 204.50f );
        FUNCTION_01B4( 164.60f, 417.80f, 214.40f, 139.20f, 441.00f, 120.50f );
        FUNCTION_01B5( 185 );
        MSG( 99 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_00EC( 1, 289 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 781.70f, 851.30f, -1000.70f, 728.40f, 810.50f, -926.60f );
        FUNCTION_01B4( 915.20f, 708.60f, -953.10f, 848.70f, 682.20f, -883.20f );
        FUNCTION_01B5( 68 );
        MSG( 100 );
        FUNCTION_01B3( 442.40f, 730.80f, 287.90f, 393.90f, 704.40f, 204.50f );
        FUNCTION_01B4( 164.60f, 417.80f, 214.40f, 139.20f, 441.00f, 120.50f );
        FUNCTION_01B5( 165 );
        MSG( 101 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_00EC( 1, 290 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 781.70f, 851.30f, -1000.70f, 728.40f, 810.50f, -926.60f );
        FUNCTION_01B4( 915.20f, 708.60f, -953.10f, 848.70f, 682.20f, -883.20f );
        FUNCTION_01B5( 67 );
        MSG( 102 );
        FUNCTION_01B3( 442.40f, 730.80f, 287.90f, 393.90f, 704.40f, 204.50f );
        FUNCTION_01B4( 164.60f, 417.80f, 214.40f, 139.20f, 441.00f, 120.50f );
        FUNCTION_01B5( 175 );
        MSG( 103 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_00EC( 1, 291 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 781.70f, 851.30f, -1000.70f, 728.40f, 810.50f, -926.60f );
        FUNCTION_01B4( 915.20f, 708.60f, -953.10f, 848.70f, 682.20f, -883.20f );
        FUNCTION_01B5( 65 );
        MSG( 104 );
        FUNCTION_01B3( 442.40f, 730.80f, 287.90f, 393.90f, 704.40f, 204.50f );
        FUNCTION_01B4( 164.60f, 417.80f, 214.40f, 139.20f, 441.00f, 120.50f );
        FUNCTION_01B5( 187 );
        MSG( 105 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_00EC( 1, 292 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 781.70f, 851.30f, -1000.70f, 728.40f, 810.50f, -926.60f );
        FUNCTION_01B4( 915.20f, 708.60f, -953.10f, 848.70f, 682.20f, -883.20f );
        FUNCTION_01B5( 69 );
        MSG( 106 );
        FUNCTION_01B3( 442.40f, 730.80f, 287.90f, 393.90f, 704.40f, 204.50f );
        FUNCTION_01B4( 164.60f, 417.80f, 214.40f, 139.20f, 441.00f, 120.50f );
        FUNCTION_01B5( 201 );
        MSG( 107 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( FUNCTION_00EC( 1, 293 ) == 1 )
    {
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -1087.50f, 571.90f, -209.10f, -989.40f, 554.00f, -216.30f );
        FUNCTION_01B4( -1127.30f, 817.00f, -596.40f, -1046.70f, 775.90f, -553.90f );
        FUNCTION_01B5( 158 );
        MSG( 108 );
        FUNCTION_01B3( 366.60f, 294.50f, 1165.70f, 346.50f, 291.30f, 1067.80f );
        FUNCTION_01B4( -351.80f, 50.40f, 1158.30f, -327.50f, 59.40f, 1061.80f );
        FUNCTION_01B5( 168 );
        MSG( 109 );
        FUNCTION_01B3( 41.60f, 392.50f, 254.20f, 37.00f, 407.80f, 155.40f );
        FUNCTION_01B4( 32.70f, 316.80f, 60.30f, 28.40f, 355.60f, -31.70f );
        FUNCTION_01B5( 99 );
        MSG( 110 );
        FUNCTION_01B3( 205.60f, 299.40f, 682.90f, 184.90f, 311.50f, 585.80f );
        FUNCTION_01B4( 308.70f, 54.50f, 1263.70f, 290.50f, 62.40f, 1165.70f );
        FUNCTION_01B5( 165 );
        MSG( 111 );
        FUNCTION_01B3( 436.00f, 707.00f, -140.80f, 354.80f, 689.00f, -196.40f );
        FUNCTION_01B4( 75.60f, 471.10f, 50.70f, 59.40f, 501.90f, -43.10f );
        FUNCTION_01B5( 167 );
        MSG( 112 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void NYX_YAMIYO()
{
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 462 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 462 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 128.20f, 226.00f, 79.90f, 102.80f, 249.20f, -14.00f );
        FUNCTION_01B4( 142.90f, 461.30f, 134.10f, 117.50f, 484.50f, 40.20f );
        FUNCTION_01B5( 171 );
        MSG( 113 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void NYX_YORUNO()
{
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 463 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 463 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 223.10f, 345.80f, 483.50f, 196.70f, 359.70f, 388.00f );
        FUNCTION_01B4( 444.50f, 26.80f, 1165.80f, 414.30f, 39.30f, 1071.30f );
        FUNCTION_01B5( 165 );
        MSG( 114 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1AD_BTLSTART()
{
    FUNCTION_01AD();
}


void AI_EVENT_1AD_ACTSTART()
{
    FUNCTION_01AD();
}


void AI_EVENT_1AD_ACTEND()
{
    FUNCTION_01C4();
}


void AI_EVENT_1AE_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B0();
    EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
    MSG( 115 );
    MSG( 116 );
    FUNCTION_00B7( 0 );
    EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 3 );
    MSG( 117 );
    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1AE_ACTSTART()
{
    
    if ( FUNCTION_01BD( 1, 294 ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( -47.20f, 101.30f, -944.50f, -54.00f, 93.10f, -845.10f );
            FUNCTION_01B4( 2.90f, 297.70f, -1036.20f, -7.50f, 268.00f, -941.30f );
            FUNCTION_01B5( 112 );
            MSG( 118 );
            FUNCTION_01B3( 399.30f, 400.40f, 63.40f, 348.30f, 346.40f, -3.60f );
            FUNCTION_01B4( 54.30f, 357.40f, 229.20f, 57.50f, 305.40f, 143.80f );
            FUNCTION_01B5( 88 );
            MSG( 119 );
            FUNCTION_01B3( 31.00f, 408.90f, 456.00f, 38.80f, 367.10f, 365.40f );
            FUNCTION_01B4( -3.40f, 99.80f, 853.80f, 5.20f, 96.20f, 754.30f );
            FUNCTION_01B5( 103 );
            MSG( 120 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( FUNCTION_0036( 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 124.90f, 151.60f, -896.40f, 94.40f, 134.30f, -802.80f );
            FUNCTION_01B4( -18.80f, 63.30f, -871.50f, -21.10f, 59.00f, -771.60f );
            FUNCTION_01B5( 105 );
            MSG( 125 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( FUNCTION_0036( 50 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( -249.30f, 315.10f, -772.50f, -219.90f, 272.50f, -687.00f );
            FUNCTION_01B4( 9.20f, 112.80f, -847.80f, -7.70f, 98.20f, -750.30f );
            FUNCTION_01B5( 79 );
            MSG( 123 );
            FUNCTION_01B3( 3.60f, 83.90f, 626.90f, 10.40f, 81.30f, 527.20f );
            FUNCTION_01B4( 12.30f, 196.40f, 247.20f, 20.60f, 169.20f, 151.40f );
            FUNCTION_01B5( 160 );
            MSG( 124 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( FUNCTION_0036( 75 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 371.70f, 345.00f, 215.00f, 332.40f, 304.00f, 132.70f );
            FUNCTION_01B4( 95.70f, 313.50f, 296.30f, 97.50f, 272.50f, 205.10f );
            FUNCTION_01B5( 136 );
            MSG( 121 );
            FUNCTION_01B3( -337.00f, 370.30f, -912.30f, -306.00f, 329.80f, -826.40f );
            FUNCTION_01B4( -20.30f, 204.30f, -1121.00f, -32.00f, 191.50f, -1022.50f );
            FUNCTION_01B5( 132 );
            MSG( 122 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }

    }

}


void AI_EVENT_1AE_ACTEND()
{
    FUNCTION_01AD();
}


void AI_EVENT_1EA_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 181 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 206 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1CE_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 182 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 207 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1CF_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 183 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 208 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D0_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 184 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
        MSG( 209 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D1_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 185 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 210 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D6_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 186 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 211 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D7_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 187 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 212 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D8_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 188 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 213 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D9_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 189 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 214 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DA_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 190 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 215 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DB_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 191 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 216 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DC_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 192 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 217 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DD_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 193 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 218 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DE_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 194 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 219 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DF_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 195 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 220 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E0_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 196 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 221 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E1_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 197 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 222 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E2_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 198 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 223 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E3_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 199 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 224 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E4_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 200 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 225 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E5_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 201 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 226 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E6_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 202 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 227 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E7_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 203 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 228 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E8_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 204 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 229 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E9_BTLSTART()
{
}


void AI_EVENT_1AF_BTLSTART()
{
}


void AI_EVENT_1AF_ACTSTART()
{
}


void AI_EVENT_1AF_ACTEND()
{
}


void AI_EVENT_1B4_BTLSTART()
{
}


void AI_EVENT_1B4_ACTSTART()
{
}


void AI_EVENT_1B4_ACTEND()
{
}


void AI_EVENT_1B0_BTLSTART()
{
}


void AI_EVENT_1B0_ACTSTART()
{
}


void AI_EVENT_1B0_ACTEND()
{
}


void AI_EVENT_1B1_BTLSTART()
{
}


void AI_EVENT_1B1_ACTSTART()
{
}


void AI_EVENT_1B1_ACTEND()
{
}


void AI_EVENT_1B2_BTLSTART()
{
}


void AI_EVENT_1B2_ACTSTART()
{
}


void AI_EVENT_1B2_ACTEND()
{
}


void AI_EVENT_1B3_BTLSTART()
{
}


void AI_EVENT_1B3_ACTSTART()
{
}


void AI_EVENT_1B3_ACTEND()
{
}


void AI_HighPriestess()
{
    int var0;
    int var1;
    
    if ( FUNCTION_0041( 275 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( FUNCTION_0041( 275 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_0041( 276 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( FUNCTION_0041( 276 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( FUNCTION_0033( 75 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }
    else if ( FUNCTION_0033( 25 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }

    
    if ( FUNCTION_003B( 2 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }
    else if ( FUNCTION_003B( 2 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }

    var0 = RNG( 100 );
    var1 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_0143( 352, 275, 276, 0 );
        return;
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 1 )
    {
        
        if ( var1 < 15 )
        {
            
            if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 ) )
            {
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
                FUNCTION_0143( 352, 275, 276, 0 );
                return;
            }
            else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 )
            {
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
                FUNCTION_0143( 353, 275, 0, 0 );
                return;
            }
            else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 )
            {
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
                FUNCTION_0143( 354, 276, 0, 0 );
                return;
            }

        }

    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 0 )
    {
        
        if ( var0 < 10 )
        {
            AI_ACT_SKILL( BattleSkill.Mabufu );
            AI_TAR_RND();
            return;
        }
        else if ( var0 < ( 10 + 30 ) )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var0 < ( ( 10 + 30 ) + 10 ) )
        {
            AI_ACT_SKILL( BattleSkill.AssaultDive );
            AI_TAR_RND();
            return;
        }
        else if ( var0 < ( ( ( 10 + 30 ) + 10 ) + 30 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufu );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Pulinpa );
            AI_TAR_RND();
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 1 )
    {
        
        if ( var0 < 20 )
        {
            AI_ACT_SKILL( BattleSkill.Mabufu );
            AI_TAR_RND();
            return;
        }
        else if ( var0 < ( 10 + 20 ) )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var0 < ( ( 10 + 30 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.AssaultDive );
            AI_TAR_RND();
            return;
        }
        else if ( var0 < ( ( ( 10 + 30 ) + 10 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufu );
            AI_TAR_RND();
            return;
        }
        else if ( var0 < ( ( ( ( 10 + 30 ) + 10 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.MarinKarin );
            AI_TAR_RND();
            return;
        }
        else 
        {
            FUNCTION_0090();
            AI_MINE();
            return;
        }

    }
    else 
    {
        FUNCTION_0090();
        AI_MINE();
        return;
    }

    AI_FUNCTION_0075();
}


void AI_P_TUKIBITOA()
{
    int var2;
    
    if ( FUNCTION_0043( 0x40 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
    }

    
    if ( AI_ENBAD( 4 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
    }

    var2 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) ) == 0 )
    {
        
        if ( var2 < 50 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var2 < ( 50 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Pulinpa );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Agi );
            AI_TAR_RND();
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) ) == 1 )
    {
        AI_ACT_WEAPON();
        AI_TAR_BAD( 4 );
        return;
    }

    AI_FUNCTION_0075();
}


void AI_P_TUKIBITOB()
{
    int var3;
    
    if ( MYHP( 0x0100, 99 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }
    else if ( MYHP( 0x0100, 99 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }

    
    if ( FUNCTION_0033( 99 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }
    else if ( FUNCTION_0033( 99 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }

    var3 = RNG( 100 );
    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) )
    {
        
        if ( var3 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.Dia );
            AI_ID( 0x0100 );
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Dia );
        AI_ID( 276 );
        return;
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Dia );
        AI_ID( 276 );
        return;
    }
    else 
    {
        FUNCTION_0090();
        AI_MINE();
        return;
    }

    AI_FUNCTION_0075();
}


void AI_RARE()
{
    int var4;
    int var5;
    int var6;
    int var7;
    int var8;
    int var9;
    int var10;
    var4 = RNG( 100 );
    var5 = FUNCTION_0192( 0 );
    var5 = ( var5 + 10 );
    FUNCTION_0193( 0, var5 );
    var6 = RNG( 4 );
    var7 = RNG( 100 );
    var8 = FUNCTION_0192( 1 );
    var9 = RNG( 100 );
    var10 = FUNCTION_0192( 2 );
    FUNCTION_0033( var4 );
    FUNCTION_0033( var5 );
    
    if ( ( var8 < 3 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 5 ) ) == 0 ) )
    {
        
        if ( ( ( ( ( ( ( BIT_CHK( ( 0 + 341 ) ) == 1 ) && ( BIT_CHK( ( 0 + 338 ) ) == 1 ) ) && ( BIT_CHK( ( 0 + 337 ) ) == 0 ) ) && ( BIT_CHK( ( 0 + 342 ) ) == 0 ) ) && ( BIT_CHK( ( 0 + 344 ) ) == 0 ) ) && ( BIT_CHK( ( 0 + 343 ) ) == 0 ) ) && ( BIT_CHK( ( ( 0 + 0x0400 ) + 1569 ) ) == 1 ) )
        {
            
            if ( var7 < 25 )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 18 ), 85 );
            }
            else if ( var7 < ( 25 + 25 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 69 ), 85 );
            }
            else if ( var7 < ( ( 25 + 25 ) + 25 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 72 ), 85 );
            }
            else 
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 70 ), 85 );
            }

        }
        else if ( ( ( ( BIT_CHK( ( 0 + 337 ) ) == 1 ) && ( BIT_CHK( ( 0 + 342 ) ) == 0 ) ) && ( BIT_CHK( ( 0 + 344 ) ) == 0 ) ) && ( BIT_CHK( ( 0 + 343 ) ) == 0 ) )
        {
            
            if ( var7 < 20 )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 18 ), 85 );
            }
            else if ( var7 < ( 20 + 20 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 69 ), 85 );
            }
            else if ( var7 < ( ( 20 + 20 ) + 20 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 72 ), 85 );
            }
            else if ( var7 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 70 ), 85 );
            }
            else 
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var5 );
                FUNCTION_01ED( ( 4000 + 75 ), 85 );
            }

        }
        else if ( ( ( BIT_CHK( ( 0 + 344 ) ) == 1 ) && ( BIT_CHK( ( 0 + 342 ) ) == 0 ) ) && ( BIT_CHK( ( 0 + 343 ) ) == 0 ) )
        {
            
            if ( var7 < 17 )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 18 ), 85 );
            }
            else if ( var7 < ( 17 + 17 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 69 ), 85 );
            }
            else if ( var7 < ( ( 17 + 17 ) + 0x10 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 72 ), 85 );
            }
            else if ( var7 < ( ( ( 17 + 17 ) + 0x10 ) + 17 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 70 ), 85 );
            }
            else if ( var7 < ( ( ( ( 17 + 17 ) + 0x10 ) + 17 ) + 0x10 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 75 ), 85 );
            }
            else 
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var5 );
                FUNCTION_01ED( ( 4000 + 74 ), 85 );
            }

        }
        else if ( ( BIT_CHK( ( 0 + 342 ) ) == 1 ) && ( BIT_CHK( ( 0 + 343 ) ) == 0 ) )
        {
            
            if ( var7 < 14 )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 18 ), 85 );
            }
            else if ( var7 < ( 14 + 14 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 69 ), 85 );
            }
            else if ( var7 < ( ( 14 + 14 ) + 15 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 72 ), 85 );
            }
            else if ( var7 < ( ( ( 14 + 14 ) + 15 ) + 14 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 70 ), 85 );
            }
            else if ( var7 < ( ( ( ( 14 + 14 ) + 15 ) + 14 ) + 14 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 75 ), 85 );
            }
            else if ( var7 < ( ( ( ( ( 14 + 14 ) + 15 ) + 14 ) + 14 ) + 15 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 74 ), 85 );
            }
            else 
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 71 ), 85 );
            }

        }
        else if ( BIT_CHK( ( 0 + 343 ) ) == 1 )
        {
            
            if ( var7 < 12 )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 18 ), 85 );
            }
            else if ( var7 < ( 12 + 13 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 69 ), 85 );
            }
            else if ( var7 < ( ( 12 + 13 ) + 12 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 72 ), 85 );
            }
            else if ( var7 < ( ( ( 12 + 13 ) + 12 ) + 13 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 70 ), 85 );
            }
            else if ( var7 < ( ( ( ( 12 + 13 ) + 12 ) + 13 ) + 12 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 75 ), 85 );
            }
            else if ( var7 < ( ( ( ( ( 12 + 13 ) + 12 ) + 13 ) + 12 ) + 13 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 74 ), 85 );
            }
            else if ( var7 < ( ( ( ( ( ( 12 + 13 ) + 12 ) + 13 ) + 12 ) + 13 ) + 12 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 71 ), 85 );
            }
            else 
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 73 ), 85 );
            }

        }
        else if ( BIT_CHK( ( ( 0 + 0x0400 ) + 1569 ) ) == 1 )
        {
            
            if ( var7 < 34 )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 18 ), 85 );
            }
            else if ( var7 < ( 34 + 33 ) )
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 69 ), 85 );
            }
            else 
            {
                var8 = ( var8 + 1 );
                FUNCTION_0193( 1, var8 );
                FUNCTION_01ED( ( 4000 + 72 ), 85 );
            }

        }

    }

    
    if ( var6 == 1 )
    {
        FUNCTION_011E( 226 );
    }
    else if ( var6 == 2 )
    {
        FUNCTION_011E( 227 );
    }
    else 
    {
        FUNCTION_011E( 228 );
    }

    
    if ( var5 > var4 )
    {
        AI_ASK_TO_LEAVE();
        return;
    }
    else 
    {
        FUNCTION_01D2( 221 );
        return;
    }

}


void AI_TheEmpress()
{
    int var11;
    int var12;
    
    if ( ( ( FUNCTION_012B() == 1 ) || ( FUNCTION_01DB( 1, 257 ) == 1 ) ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
        
        if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
        }

    }

    
    if ( FUNCTION_0040( 255 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }
    else if ( FUNCTION_0040( 255 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }

    var11 = RNG( 100 );
    var12 = RNG( 3 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
        
        if ( var12 == 0 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_011E( 257 );
            AI_ACT_SKILL( BattleSkill.ParadigmShift );
            AI_MINE();
            return;
        }
        else if ( var12 == 1 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_011E( 330 );
            AI_ACT_SKILL( BattleSkill.ParadigmShift );
            AI_MINE();
            return;
        }
        else if ( var12 == 2 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_011E( 332 );
            AI_ACT_SKILL( BattleSkill.ParadigmShift );
            AI_MINE();
            return;
        }
        else 
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_011E( 334 );
            AI_ACT_SKILL( BattleSkill.ParadigmShift );
            AI_MINE();
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Magarula );
        AI_TAR_RND();
        return;
    }
    else if ( var11 < 20 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( var11 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Bewilder );
        AI_NOTBAD( 255 );
        return;
    }
    else if ( var11 < ( ( 20 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.EvilTouch );
        AI_NOTBAD( 255 );
        return;
    }
    else if ( var11 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Magaru );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.Magarula );
        AI_TAR_RND();
        return;
    }

}


void AI_TheEmperor()
{
    int var13;
    int var14;
    
    if ( ( ( FUNCTION_012B() == 1 ) || ( FUNCTION_01DB( 1, 258 ) == 1 ) ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
        
        if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
        }

    }

    
    if ( FUNCTION_008F() == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
    }
    else if ( FUNCTION_008F() == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
    }

    var13 = RNG( 100 );
    var14 = RNG( 7 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
        
        if ( var14 == 0 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_011E( 257 );
            AI_ACT_SKILL( BattleSkill.ParadigmShift );
            AI_MINE();
            return;
        }
        else if ( var14 == 1 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_011E( 330 );
            AI_ACT_SKILL( BattleSkill.ParadigmShift );
            AI_MINE();
            return;
        }
        else if ( var14 == 2 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_011E( 331 );
            AI_ACT_SKILL( BattleSkill.ParadigmShift );
            AI_MINE();
            return;
        }
        else if ( var14 == 3 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_011E( 330 );
            AI_ACT_SKILL( BattleSkill.ParadigmShift );
            AI_MINE();
            return;
        }
        else if ( var14 == 4 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_011E( 330 );
            AI_ACT_SKILL( BattleSkill.ParadigmShift );
            AI_MINE();
            return;
        }
        else if ( var14 == 5 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_011E( 330 );
            AI_ACT_SKILL( BattleSkill.ParadigmShift );
            AI_MINE();
            return;
        }
        else if ( var14 == 6 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_011E( 330 );
            AI_ACT_SKILL( BattleSkill.ParadigmShift );
            AI_MINE();
            return;
        }
        else 
        {
            FUNCTION_0090();
            AI_MINE();
            return;
        }

    }
    else if ( var13 < 40 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( var13 < ( 40 + 30 ) )
    {
        AI_ACT_SKILL( BattleSkill.FatalEnd );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.SwiftStrike );
        AI_TAR_RND();
        return;
    }

}


void AI_TheHierophant()
{
    int var15;
    int var16;
    int var17;
    int var18;
    int var19;
    int var20;
    
    if ( ( FUNCTION_0044( 1 ) == 1 ) && ( FUNCTION_0044( 4 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( ( FUNCTION_0044( 1 ) == 0 ) && ( FUNCTION_0044( 4 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_0044( 0x40 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( FUNCTION_0044( 0x40 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( ( FUNCTION_0044( 0x10 ) == 1 ) && ( FUNCTION_0044( 0x0100 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( ( FUNCTION_0044( 0x10 ) == 0 ) && ( FUNCTION_0044( 0x0100 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( AI_ENBAD( 8 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }
    else if ( AI_ENBAD( 8 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }

    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
    }
    else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
    }

    
    if ( FUNCTION_008F() == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
    }
    else if ( FUNCTION_008F() == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
    }

    var15 = RNG( 100 );
    var16 = RNG( 100 );
    var17 = RNG( 100 );
    var18 = RNG( 100 );
    var19 = RNG( 100 );
    var20 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) ) == 1 )
    {
        
        if ( var18 < 40 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            AI_ACT_SKILL( BattleSkill.ProphecyofRuin );
            AI_TAR_RND();
            return;
        }
        else if ( var18 < ( 40 + 30 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mazio );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 1 ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 1 ) ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) ) == 1 ) )
    {
        
        if ( var16 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.Dekaja );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Zionga );
            AI_TAR_RND();
            return;
        }

    }
    else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 )
        {
            
            if ( var20 < 30 )
            {
                AI_ACT_WEAPON();
                AI_TAR_BAD( 8 );
                return;
            }
            else if ( var20 < ( 30 + 40 ) )
            {
                AI_ACT_SKILL( BattleSkill.SwiftStrike );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Dekaja );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var17 < 10 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            AI_ACT_SKILL( BattleSkill.ProphecyofRuin );
            AI_TAR_RND();
            return;
        }
        else if ( var17 < ( 10 + 30 ) )
        {
            AI_ACT_SKILL( BattleSkill.Dekaja );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Zionga );
            AI_TAR_RND();
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 )
    {
        
        if ( var19 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.SwiftStrike );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_BAD( 8 );
            return;
        }

    }
    else if ( var15 < 25 )
    {
        AI_ACT_SKILL( BattleSkill.Zionga );
        AI_TAR_RND();
        return;
    }
    else if ( var15 < ( 25 + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mazionga );
        AI_TAR_RND();
        return;
    }
    else if ( var15 < ( ( 25 + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.Sukunda );
        AI_TAR_RND();
        return;
    }
    else 
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
        AI_ACT_SKILL( BattleSkill.ProphecyofRuin );
        AI_TAR_RND();
        return;
    }

}


void AI_TheLovers()
{
    int var21;
    int var22;
    int var23;
    var21 = RNG( 100 );
    var22 = RNG( 100 );
    var23 = RNG( 100 );
    
    if ( ( ( AI_ENBAD( 1 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) ) && ( FUNCTION_0033( 50 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
        AI_ACT_SKILL( BattleSkill.Heartbreaker );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( AI_ENBAD( 1 ) == 0 )
        {
            
            if ( var21 < 20 )
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }
            else if ( var21 < ( 20 + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.MarinKarin );
                AI_NOTBAD( 16777215 );
                return;
            }
            else if ( var21 < ( ( 20 + 20 ) + 15 ) )
            {
                AI_ACT_SKILL( BattleSkill.Maragion );
                AI_TAR_RND();
                return;
            }
            else if ( var21 < ( ( ( 20 + 20 ) + 15 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.HolyArrow92 );
                AI_NOTBAD( 16777215 );
                return;
            }
            else if ( var21 < ( ( ( ( 20 + 20 ) + 15 ) + 20 ) + 15 ) )
            {
                AI_ACT_SKILL( BattleSkill.Pulinpa );
                AI_NOTBAD( 16777215 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Heartbreaker );
                AI_TAR_RND();
                return;
            }

        }
        else if ( AI_ENBAD( 1 ) == 1 )
        {
            
            if ( var21 < 40 )
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }
            else if ( var21 < ( 40 + 30 ) )
            {
                AI_ACT_SKILL( BattleSkill.Maragion );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Pulinpa );
                AI_NOTBAD( 16777215 );
                return;
            }

        }
        else 
        {
            FUNCTION_01D2( 0 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        
        if ( AI_ENBAD( 1 ) == 1 )
        {
            
            if ( var23 < 50 )
            {
                AI_ACT_SKILL( BattleSkill.Heartbreaker );
                AI_TAR_RND();
                return;
            }
            else if ( var22 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.LifeDrain75 );
                AI_TAR_RND();
                return;
            }
            else if ( var22 < ( 10 + 10 ) )
            {
                AI_ACT_SKILL( BattleSkill.SpiritDrain76 );
                AI_TAR_RND();
                return;
            }
            else if ( var22 < ( ( 10 + 10 ) + 15 ) )
            {
                AI_ACT_SKILL( BattleSkill.Maragion );
                AI_TAR_RND();
                return;
            }
            else if ( var22 < ( ( ( 10 + 10 ) + 15 ) + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.HolyArrow92 );
                AI_NOTBAD( 16777215 );
                return;
            }
            else if ( var22 < ( ( ( ( 10 + 10 ) + 15 ) + 25 ) + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.MarinKarin );
                AI_NOTBAD( 16777215 );
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( AI_ENBAD( 1 ) == 0 )
        {
            
            if ( var22 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.LifeDrain75 );
                AI_TAR_RND();
                return;
            }
            else if ( var22 < ( 10 + 10 ) )
            {
                AI_ACT_SKILL( BattleSkill.SpiritDrain76 );
                AI_TAR_RND();
                return;
            }
            else if ( var22 < ( ( 10 + 10 ) + 15 ) )
            {
                AI_ACT_SKILL( BattleSkill.Maragion );
                AI_TAR_RND();
                return;
            }
            else if ( var22 < ( ( ( 10 + 10 ) + 15 ) + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.HolyArrow92 );
                AI_NOTBAD( 16777215 );
                return;
            }
            else if ( var22 < ( ( ( ( 10 + 10 ) + 15 ) + 25 ) + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.MarinKarin );
                AI_NOTBAD( 16777215 );
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            FUNCTION_01D2( 0 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        FUNCTION_01D2( 0 );
        AI_TAR_RND();
        return;
    }

}


void AI_TheChariot()
{
    int var24;
    
    if ( FUNCTION_0033( 75 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_0033( 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( FUNCTION_0033( 25 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( ( FUNCTION_0041( 262 ) == 0 ) || ( AI_MYBAD( 262, 0x00080000 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }
    else 
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }

    
    if ( FUNCTION_00AB( 261, 0x0400 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }
    else 
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }

    var24 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Samarecarm361 );
        AI_ID( 262 );
        return;
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 1 )
    {
        
        if ( var24 < 30 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var24 < ( 30 + 30 ) )
        {
            AI_ACT_SKILL( BattleSkill.KillRush );
            AI_TAR_RND();
            return;
        }
        else if ( var24 < ( ( 30 + 30 ) + 40 ) )
        {
            AI_ACT_SKILL( BattleSkill.Tentarafoo62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }

    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
    {
        
        if ( var24 < 25 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var24 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.KillRush );
            AI_TAR_RND();
            return;
        }
        else if ( var24 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Tentarafoo62 );
            AI_TAR_RND();
            return;
        }
        else if ( var24 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.EvilSmile64 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
    {
        
        if ( var24 < 20 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var24 < ( 20 + 10 ) )
        {
            AI_ACT_SKILL( BattleSkill.KillRush );
            AI_TAR_RND();
            return;
        }
        else if ( var24 < ( ( 20 + 10 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.TorrentShot );
            AI_TAR_RND();
            return;
        }
        else if ( var24 < ( ( ( 20 + 10 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Tentarafoo62 );
            AI_TAR_RND();
            return;
        }
        else if ( var24 < ( ( ( ( 20 + 10 ) + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.EvilSmile64 );
            AI_TAR_RND();
            return;
        }
        else if ( var24 < ( ( ( ( ( 20 + 10 ) + 20 ) + 20 ) + 20 ) + 10 ) )
        {
            AI_ACT_SKILL( BattleSkill.PowerCharge );
            AI_MINE();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }

    
    if ( var24 < 20 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( var24 < ( 20 + 10 ) )
    {
        AI_ACT_SKILL( BattleSkill.KillRush );
        AI_TAR_RND();
        return;
    }
    else if ( var24 < ( ( 20 + 10 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.TorrentShot );
        AI_TAR_RND();
        return;
    }
    else if ( var24 < ( ( ( 20 + 10 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Tentarafoo62 );
        AI_TAR_RND();
        return;
    }
    else if ( var24 < ( ( ( ( 20 + 10 ) + 20 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.EvilSmile64 );
        AI_TAR_RND();
        return;
    }
    else if ( var24 < ( ( ( ( ( 20 + 10 ) + 20 ) + 20 ) + 20 ) + 10 ) )
    {
        AI_ACT_SKILL( BattleSkill.PowerCharge );
        AI_MINE();
        return;
    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

    AI_ACT_WAIT();
}


void AI_TheJustice()
{
    int var25;
    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
    }
    else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
    }
    else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
    }

    
    if ( FUNCTION_0033( 75 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }

    
    if ( FUNCTION_0033( 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }

    
    if ( FUNCTION_0033( 25 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
    }

    
    if ( ( FUNCTION_0041( 261 ) == 0 ) || ( AI_MYBAD( 261, 0x00080000 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
    }
    else 
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
    }

    
    if ( AI_ENBAD( 255 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 472 ) );
    }
    else if ( AI_ENBAD( 255 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 472 ) );
    }

    
    if ( AI_ENBAD( 0x00100000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 473 ) );
    }
    else if ( AI_ENBAD( 0x00100000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 473 ) );
    }

    var25 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Samarecarm362 );
        AI_ID( 261 );
        return;
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        FUNCTION_014A();
        return;
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 473 ) ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.VileAssault );
        AI_TAR_BAD( 0x00100000 );
        return;
    }

    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) )
    {
        
        if ( var25 < 25 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var25 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.TwinShot );
            AI_TAR_BAD( 255 );
            return;
        }
        else if ( var25 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.TorrentShot );
            AI_TAR_BAD( 255 );
            return;
        }
        else if ( var25 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Hama );
            FUNCTION_013D( 1 );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 )
    {
        
        if ( var25 < 25 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var25 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.ArrowRain );
            AI_TAR_BAD( 255 );
            return;
        }
        else if ( var25 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.TorrentShot );
            AI_TAR_BAD( 255 );
            AI_TAR_RND();
            return;
        }
        else if ( var25 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Hama );
            FUNCTION_013D( 1 );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }

    
    if ( var25 < 25 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( var25 < ( 25 + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.ArrowRain );
        AI_TAR_BAD( 255 );
        return;
    }
    else if ( var25 < ( ( 25 + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.TorrentShot );
        AI_TAR_BAD( 255 );
        AI_TAR_RND();
        return;
    }
    else if ( var25 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.Hama );
        FUNCTION_013D( 1 );
        return;
    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

    AI_ACT_WAIT();
}


void AI_JusticeTheChariot()
{
    int var26;
    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 482 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
    }
    else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 482 ) ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) );
    }
    else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 482 ) ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 482 ) );
    }

    
    if ( FUNCTION_0033( 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 483 ) );
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 483 ) );
    }

    var26 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 482 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 482 ) );
        FUNCTION_0149();
        return;
    }

    
    if ( var26 < 25 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( var26 < ( 25 + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.KillRush );
        AI_TAR_RND();
        return;
    }
    else if ( var26 < ( ( 25 + 25 ) + 10 ) )
    {
        AI_ACT_SKILL( BattleSkill.Tentarafoo62 );
        AI_TAR_RND();
        return;
    }
    else if ( var26 < ( ( ( 25 + 25 ) + 10 ) + 40 ) )
    {
        AI_ACT_SKILL( BattleSkill.PoisonMist69 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_TheHermit()
{
    int var27;
    int var28;
    int var29;
    int var30;
    
    if ( FUNCTION_008F() == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( FUNCTION_008F() == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_0033( 75 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }
    else if ( FUNCTION_0033( 75 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }

    
    if ( FUNCTION_00A4( 5 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }
    else if ( FUNCTION_00A4( 5 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }

    var27 = RNG( 100 );
    var28 = RNG( 100 );
    var29 = RNG( 100 );
    var30 = RNG( 100 );
    
    if ( FUNCTION_0176() == 1 )
    {
        AI_TheHermitJuden();
    }
    else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 459 ) ) == 0 ) && ( FUNCTION_0033( 90 ) == 1 ) ) && ( FUNCTION_01C7( 0x0800 ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 459 ) );
        FUNCTION_0175( 9999 );
        AI_MINE();
        return;
    }
    else if ( ( FUNCTION_0176() == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 0 )
        {
            
            if ( FUNCTION_01C7( 0x0800 ) == 0 )
            {
                
                if ( var27 < 20 )
                {
                    
                    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 1 )
                    {
                        
                        if ( var30 < 50 )
                        {
                            AI_ACT_SKILL( BattleSkill.Ziodyne );
                            AI_WEAK( 5 );
                            return;
                        }
                        else if ( var30 < ( 50 + 50 ) )
                        {
                            AI_ACT_SKILL( BattleSkill.Ziodyne );
                            AI_NOTWEAK( 5 );
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( BattleSkill.Ziodyne );
                            AI_TAR_RND();
                            return;
                        }

                    }
                    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 0 )
                    {
                        AI_ACT_SKILL( BattleSkill.Ziodyne );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        FUNCTION_01D2( 0 );
                        return;
                    }

                }
                else if ( var27 < ( 20 + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mazionga );
                    AI_TAR_RND();
                    return;
                }
                else if ( var27 < ( ( 20 + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.PoisonMist69 );
                    AI_TAR_RND();
                    return;
                }
                else if ( var27 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
                {
                    AI_ACT_WEAPON();
                    AI_TAR_RND();
                    return;
                }
                else if ( var27 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.MindCharge );
                    AI_MINE();
                    return;
                }

            }
            else if ( FUNCTION_01C7( 0x0800 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_NOTKYUSYU( 5 );
                return;
            }
            else 
            {
                FUNCTION_01D2( 0 );
                return;
            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 1 )
        {
            
            if ( FUNCTION_01C7( 0x0800 ) == 0 )
            {
                
                if ( var28 < 20 )
                {
                    
                    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 1 )
                    {
                        
                        if ( var30 < 50 )
                        {
                            AI_ACT_SKILL( BattleSkill.Ziodyne );
                            AI_WEAK( 5 );
                            return;
                        }
                        else if ( var30 < ( 50 + 50 ) )
                        {
                            AI_ACT_SKILL( BattleSkill.Ziodyne );
                            AI_NOTWEAK( 5 );
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( BattleSkill.Ziodyne );
                            AI_TAR_RND();
                            return;
                        }

                    }
                    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 0 )
                    {
                        AI_ACT_SKILL( BattleSkill.Ziodyne );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        FUNCTION_0090();
                        return;
                    }

                }
                else if ( var28 < ( 20 + 10 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mazionga );
                    AI_TAR_RND();
                    return;
                }
                else if ( var28 < ( ( 20 + 10 ) + 10 ) )
                {
                    AI_ACT_SKILL( BattleSkill.MindCharge );
                    AI_MINE();
                    return;
                }
                else if ( var28 < ( ( ( 20 + 10 ) + 10 ) + 40 ) )
                {
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
                    FUNCTION_0175( 9999 );
                    AI_MINE();
                    return;
                }
                else if ( var28 < ( ( ( ( 20 + 10 ) + 10 ) + 40 ) + 20 ) )
                {
                    AI_ACT_WEAPON();
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( FUNCTION_01C7( 0x0800 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_NOTKYUSYU( 5 );
                return;
            }
            else 
            {
                FUNCTION_01D2( 0 );
                return;
            }

        }
        else 
        {
            FUNCTION_01D2( 0 );
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        
        if ( var29 < 50 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            FUNCTION_0175( 9999 );
            AI_MINE();
            return;
        }
        else if ( var29 < ( 50 + 50 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_TAR_RND();
            return;
        }
        else 
        {
            FUNCTION_01D2( 0 );
            return;
        }

    }
    else 
    {
        FUNCTION_01D2( 0 );
        return;
    }

}


void AI_TheHermitJuden()
{
    int var31;
    var31 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 462 ) ) == 0 )
    {
        
        if ( var31 < 50 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 462 ) );
        }
        else 
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 462 ) );
        }

    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) ) == 1 )
    {
        
        if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) && ( FUNCTION_0176() == 1 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
            FUNCTION_01D2( 220 );
            return;
        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) && ( FUNCTION_0176() == 0 ) )
        {
            AI_TheHermit();
        }

        
        if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) && ( FUNCTION_0176() == 1 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
            FUNCTION_01D2( 220 );
            return;
        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) && ( FUNCTION_0176() == 0 ) )
        {
            AI_TheHermit();
        }

    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 462 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        AI_ACT_SKILL( BattleSkill.GigaSpark );
        AI_TAR_RND();
        return;
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) ) == 1 )
    {
        
        if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) && ( FUNCTION_0176() == 1 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
            FUNCTION_01D2( 220 );
            return;
        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) && ( FUNCTION_0176() == 0 ) )
        {
            AI_TheHermit();
        }

        
        if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) && ( FUNCTION_0176() == 1 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
            FUNCTION_01D2( 220 );
            return;
        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) && ( FUNCTION_0176() == 0 ) )
        {
            AI_TheHermit();
        }

        
        if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) && ( FUNCTION_0176() == 1 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
            FUNCTION_01D2( 220 );
            return;
        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) && ( FUNCTION_0176() == 0 ) )
        {
            AI_TheHermit();
        }

    }

    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 462 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        AI_ACT_SKILL( BattleSkill.GigaSpark );
        AI_TAR_RND();
        return;
    }
    else 
    {
        FUNCTION_01D2( 0 );
        return;
    }

}


void AI_WheelofFortune()
{
    int var32;
    
    if ( FUNCTION_0041( 266 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( FUNCTION_0041( 266 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 )
    {
        
        if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
        }
        else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
        }
        else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
        }
        else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
        }

    }

    var32 = RNG( 100 );
    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( FUNCTION_003D( 4 ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
        
        if ( var32 < 34 )
        {
            FUNCTION_017C( 365 );
            return;
        }
        else if ( var32 < ( 34 + 33 ) )
        {
            FUNCTION_017C( 366 );
            return;
        }
        else 
        {
            FUNCTION_017C( 367 );
            return;
        }

    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( FUNCTION_003D( 4 ) == 0 ) )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            
            if ( var32 < 20 )
            {
                FUNCTION_017C( 365 );
                return;
            }
            else if ( var32 < ( 20 + 20 ) )
            {
                FUNCTION_017C( 366 );
                return;
            }
            else if ( var32 < ( ( 20 + 20 ) + 20 ) )
            {
                FUNCTION_017C( 367 );
                return;
            }
            else if ( var32 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
            {
                FUNCTION_017C( 369 );
                return;
            }
            else 
            {
                FUNCTION_017C( 370 );
                return;
            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            
            if ( var32 < 20 )
            {
                FUNCTION_017C( 365 );
                return;
            }
            else if ( var32 < ( 20 + 20 ) )
            {
                FUNCTION_017C( 366 );
                return;
            }
            else if ( var32 < ( ( 20 + 20 ) + 20 ) )
            {
                FUNCTION_017C( 367 );
                return;
            }
            else if ( var32 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
            {
                FUNCTION_017C( 369 );
                return;
            }
            else 
            {
                FUNCTION_017C( 370 );
                return;
            }

        }
        else if ( var32 < 20 )
        {
            AI_ACT_SKILL( BattleSkill.ArrowRain );
            AI_TAR_RND();
            return;
        }
        else if ( var32 < ( 20 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.TorrentShot );
            AI_TAR_RND();
            return;
        }
        else if ( var32 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Magarudyne15 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var32 < 20 )
    {
        AI_ACT_SKILL( BattleSkill.ArrowRain );
        AI_TAR_RND();
        return;
    }
    else if ( var32 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.TorrentShot );
        AI_TAR_RND();
        return;
    }
    else if ( var32 < ( ( 20 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Garudyne );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.Magarudyne15 );
        AI_TAR_RND();
        return;
    }

}


void AI_Strength()
{
    int var33;
    
    if ( FUNCTION_0033( 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }

    var33 = RNG( 100 );
    
    if ( AI_ENBAD( 0x00100000 ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.VileAssault );
        AI_TAR_BAD( 0x00100000 );
        return;
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 )
    {
        
        if ( var33 < 20 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var33 < ( 20 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.HeatWave );
            AI_TAR_RND();
            return;
        }
        else if ( var33 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.TempestSlash );
            AI_TAR_RND();
            return;
        }
        else if ( var33 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.GiganticFist );
            AI_TAR_RND();
            return;
        }
        else if ( var33 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.EerieSound60 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 )
    {
        
        if ( var33 < 20 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var33 < ( 20 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.HeatWave );
            AI_TAR_RND();
            return;
        }
        else if ( var33 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.TempestSlash );
            AI_TAR_RND();
            return;
        }
        else if ( var33 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.GiganticFist );
            AI_TAR_RND();
            return;
        }
        else if ( var33 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.SexyDance58 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_Takaya1()
{
    int var34;
    
    if ( FUNCTION_0033( 75 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( FUNCTION_0033( 75 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_0033( 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( FUNCTION_0033( 25 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( FUNCTION_0033( 25 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( FUNCTION_015C( 268, 1 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
    }
    else if ( FUNCTION_015C( 268, 1 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
    }

    
    if ( MYHP( 268, 75 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }
    else if ( MYHP( 268, 75 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }

    
    if ( MYHP( 268, 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }
    else if ( MYHP( 268, 50 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }

    
    if ( MYHP( 268, 25 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
    }
    else if ( MYHP( 268, 25 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
    }

    
    if ( FUNCTION_015C( 267, 1 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }
    else if ( FUNCTION_015C( 267, 1 ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }

    
    if ( FUNCTION_00AB( 267, 0x0800 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }
    else if ( FUNCTION_00AB( 267, 0x0800 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }

    var34 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 )
        {
            
            if ( var34 < 20 )
            {
                AI_ACT_SKILL( BattleSkill.Agidyne );
                AI_TAR_RND();
                return;
            }
            else if ( var34 < ( 18 + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_TAR_RND();
                return;
            }
            else if ( var34 < ( ( 18 + 18 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Bufudyne );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_TAR_RND();
                return;
            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.Megido );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
    {
        
        if ( var34 < 17 )
        {
            AI_ACT_SKILL( BattleSkill.PierceAttack304 );
            AI_TAR_RND();
            return;
        }
        else if ( var34 < ( 17 + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_TAR_RND();
            return;
        }
        else if ( var34 < ( ( 17 + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_TAR_RND();
            return;
        }
        else if ( var34 < ( ( ( 17 + 17 ) + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_TAR_RND();
            return;
        }
        else if ( var34 < ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_TAR_RND();
            return;
        }
        else if ( var34 < ( ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 17 ) + 5 ) )
        {
            AI_ACT_SKILL( BattleSkill.Megido );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.MindCharge );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var34 < 18 )
    {
        AI_ACT_SKILL( BattleSkill.PierceAttack304 );
        AI_TAR_RND();
        return;
    }
    else if ( var34 < ( 18 + 18 ) )
    {
        AI_ACT_SKILL( BattleSkill.Agidyne );
        AI_TAR_RND();
        return;
    }
    else if ( var34 < ( ( 18 + 18 ) + 18 ) )
    {
        AI_ACT_SKILL( BattleSkill.Garudyne );
        AI_TAR_RND();
        return;
    }
    else if ( var34 < ( ( ( 18 + 18 ) + 18 ) + 18 ) )
    {
        AI_ACT_SKILL( BattleSkill.Bufudyne );
        AI_TAR_RND();
        return;
    }
    else if ( var34 < ( ( ( ( 18 + 18 ) + 18 ) + 18 ) + 18 ) )
    {
        AI_ACT_SKILL( BattleSkill.Ziodyne );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.MindCharge );
        AI_TAR_RND();
        return;
    }

}


void AI_Jin1()
{
    int var35;
    
    if ( FUNCTION_0033( 75 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }
    else if ( FUNCTION_0033( 75 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }

    
    if ( FUNCTION_0033( 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }

    
    if ( FUNCTION_0033( 25 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
    }
    else if ( FUNCTION_0033( 25 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
    }

    
    if ( FUNCTION_015C( 268, 1 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
    }
    else if ( FUNCTION_015C( 268, 1 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
    }

    
    if ( MYHP( 267, 75 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( MYHP( 267, 75 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( MYHP( 267, 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( MYHP( 267, 50 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( MYHP( 267, 25 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( MYHP( 267, 25 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( FUNCTION_015C( 267, 1 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }
    else if ( FUNCTION_015C( 267, 1 ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }

    var35 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 )
    {
        
        if ( var35 < 30 )
        {
            AI_ACT_SKILL( BattleSkill.FireAttack305 );
            AI_TAR_RND();
            return;
        }
        else if ( var35 < ( 30 + 30 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mudoon );
            AI_TAR_RND();
            return;
        }
        else if ( var35 < ( ( 30 + 30 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maragion );
            AI_TAR_RND();
            return;
        }
        else if ( ( ( FUNCTION_019A( 1 ) != -1 ) && ( FUNCTION_019A( 0x10 ) != -1 ) ) && ( FUNCTION_019A( 0x40 ) != -1 ) )
        {
            AI_ACT_SKILL( 239 );
            
            if ( FUNCTION_019A( 0x10 ) != -1 )
            {
                AI_NOTHOJO( 0x10 );
            }
            else if ( FUNCTION_019A( 1 ) != -1 )
            {
                AI_NOTHOJO( 5 );
            }
            else if ( FUNCTION_019A( 0x40 ) != -1 )
            {
                AI_NOTHOJO( 0x40 );
            }

            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.FireAttack305 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var35 < 30 )
    {
        AI_ACT_SKILL( BattleSkill.FireAttack305 );
        AI_TAR_RND();
        return;
    }
    else if ( var35 < ( 30 + 30 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mudo );
        AI_TAR_RND();
        return;
    }
    else if ( var35 < ( ( 30 + 30 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Maragion );
        AI_TAR_RND();
        return;
    }
    else if ( ( ( FUNCTION_019A( 1 ) != -1 ) && ( FUNCTION_019A( 0x10 ) != -1 ) ) && ( FUNCTION_019A( 0x40 ) != -1 ) )
    {
        AI_ACT_SKILL( 239 );
        
        if ( FUNCTION_019A( 0x10 ) != -1 )
        {
            AI_NOTHOJO( 0x10 );
        }
        else if ( FUNCTION_019A( 1 ) != -1 )
        {
            AI_NOTHOJO( 5 );
        }
        else if ( FUNCTION_019A( 0x40 ) != -1 )
        {
            AI_NOTHOJO( 0x40 );
        }

        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.FireAttack305 );
        AI_TAR_RND();
        return;
    }

}


void AI_TheHangedMan()
{
    int var36;
    int var37;
    int var38;
    int var39;
    
    if ( FUNCTION_0041( 281 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( FUNCTION_0041( 281 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( FUNCTION_0041( 295 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( FUNCTION_0041( 295 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( ( FUNCTION_0041( 281 ) == 1 ) && ( FUNCTION_0041( 295 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }
    else if ( ( FUNCTION_0041( 281 ) == 0 ) && ( FUNCTION_0041( 295 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }

    
    if ( FUNCTION_017A() == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }
    else if ( FUNCTION_017A() == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }

    
    if ( FUNCTION_017A() == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }
    else if ( FUNCTION_017A() == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }

    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) && ( AI_MYBAD( 281, 0x0400 ) == 0 ) ) && ( FUNCTION_0188( 281 ) == 2 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
    }

    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) && ( AI_MYBAD( 281, 0x0400 ) == 0 ) ) && ( FUNCTION_0188( 281 ) >= 3 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 459 ) );
    }

    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) && ( AI_MYBAD( 295, 0x0400 ) == 0 ) ) && ( FUNCTION_0188( 295 ) == 2 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) );
    }

    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) && ( AI_MYBAD( 295, 0x0400 ) == 0 ) ) && ( FUNCTION_0188( 295 ) >= 3 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) );
    }

    var36 = RNG( 100 );
    var37 = RNG( 100 );
    var38 = RNG( 100 );
    var39 = RNG( 90 );
    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) ) == 0 ) )
    {
        
        if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 506 ) );
            FUNCTION_0143( 306, 281, 0, 0 );
            return;
        }

        
        if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) )
        {
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 459 ) ) == 1 )
            {
                BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 459 ) );
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
                {
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
                }

                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
                {
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
                }

                AI_ACT_SKILL( BattleSkill.ArmedReady );
                AI_ID( 281 );
                return;
            }
            else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) ) == 1 )
            {
                
                if ( var36 < 50 )
                {
                    BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
                    
                    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
                    {
                        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
                    }

                    
                    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
                    {
                        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
                    }

                    AI_ACT_SKILL( BattleSkill.ArmedReady );
                    AI_ID( 281 );
                    return;
                }
                else 
                {
                    BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                    FUNCTION_0090();
                    AI_MINE();
                    return;
                }

            }
            else 
            {
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 506 ) );
                FUNCTION_0143( 104, 295, 0, 0 );
                return;
            }

        }

        
        if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) )
        {
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) ) == 1 )
            {
                BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) );
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
                {
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
                }

                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
                {
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
                }

                AI_ACT_SKILL( BattleSkill.ArmedReady );
                AI_ID( 295 );
                return;
            }
            else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) ) == 1 )
            {
                
                if ( var37 < 50 )
                {
                    BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) );
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
                    
                    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
                    {
                        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
                    }

                    
                    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
                    {
                        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
                    }

                    AI_ACT_SKILL( BattleSkill.ArmedReady );
                    AI_ID( 295 );
                    return;
                }
                else 
                {
                    BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) );
                    FUNCTION_0090();
                    AI_MINE();
                    return;
                }

            }
            else 
            {
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 506 ) );
                FUNCTION_0143( 306, 281, 0, 0 );
                return;
            }

        }

        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 )
        {
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 459 ) ) == 1 )
            {
                BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 459 ) );
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
                {
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
                }

                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
                {
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
                }

                AI_ACT_SKILL( BattleSkill.ArmedReady );
                AI_ID( 281 );
                return;
            }
            else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) ) == 1 )
            {
                
                if ( var36 < 50 )
                {
                    BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
                    
                    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
                    {
                        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
                    }

                    
                    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
                    {
                        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
                    }

                    AI_ACT_SKILL( BattleSkill.ArmedReady );
                    AI_ID( 281 );
                    return;
                }
                else 
                {
                    BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                    FUNCTION_0090();
                    AI_MINE();
                    return;
                }

            }
            else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) ) == 1 )
            {
                BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) );
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
                {
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
                }

                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
                {
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
                }

                AI_ACT_SKILL( BattleSkill.ArmedReady );
                AI_ID( 295 );
                return;
            }
            else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) ) == 1 )
            {
                
                if ( var37 < 50 )
                {
                    BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) );
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
                    
                    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
                    {
                        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
                    }

                    
                    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
                    {
                        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
                    }

                    AI_ACT_SKILL( BattleSkill.ArmedReady );
                    AI_ID( 295 );
                    return;
                }
                else 
                {
                    BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) );
                    FUNCTION_0090();
                    AI_MINE();
                    return;
                }

            }
            else 
            {
                FUNCTION_0090();
                AI_MINE();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Agi );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 0 ) )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 459 ) ) == 1 )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 459 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
            {
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
            }

            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
            {
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
            }

            AI_ACT_SKILL( BattleSkill.ArmedReady );
            AI_ID( 281 );
            return;
        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) ) == 1 )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
            {
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
            }

            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
            {
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
            }

            AI_ACT_SKILL( BattleSkill.ArmedReady );
            AI_ID( 295 );
            return;
        }
        else if ( var38 < 25 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 508 ) );
            FUNCTION_0143( 307, 278, 279, 280 );
            return;
        }
        else if ( var38 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.AkashaArts );
            AI_TAR_RND();
            return;
        }
        else if ( var38 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.GodsHand );
            AI_TAR_RND();
            return;
        }
        else if ( var38 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            
            if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
            {
                BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 506 ) );
                FUNCTION_0143( 306, 281, 0, 0 );
                return;
            }

            
            if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) ) == 1 )
                {
                    
                    if ( var36 < 50 )
                    {
                        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
                        
                        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
                        {
                            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
                        }

                        
                        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
                        {
                            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
                        }

                        AI_ACT_SKILL( BattleSkill.ArmedReady );
                        AI_ID( 281 );
                        return;
                    }
                    else if ( var36 < ( 50 + 50 ) )
                    {
                        
                        if ( var39 < 30 )
                        {
                            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 508 ) );
                            FUNCTION_0143( 307, 278, 279, 280 );
                            return;
                        }
                        else if ( var39 < ( 30 + 30 ) )
                        {
                            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                            AI_ACT_SKILL( BattleSkill.AkashaArts );
                            AI_TAR_RND();
                            return;
                        }
                        else if ( var39 < ( ( 30 + 30 ) + 30 ) )
                        {
                            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                            AI_ACT_SKILL( BattleSkill.GodsHand );
                            AI_TAR_RND();
                            return;
                        }

                    }

                }
                else 
                {
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 506 ) );
                    FUNCTION_0143( 104, 295, 0, 0 );
                    return;
                }

            }

            
            if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) ) == 1 )
                {
                    
                    if ( var37 < 50 )
                    {
                        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) );
                        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
                        
                        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
                        {
                            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
                        }

                        
                        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
                        {
                            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
                        }

                        AI_ACT_SKILL( BattleSkill.ArmedReady );
                        AI_ID( 295 );
                        return;
                    }
                    else if ( var36 < ( 50 + 50 ) )
                    {
                        
                        if ( var39 < 30 )
                        {
                            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 508 ) );
                            FUNCTION_0143( 307, 278, 279, 280 );
                            return;
                        }
                        else if ( var39 < ( 30 + 30 ) )
                        {
                            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                            AI_ACT_SKILL( BattleSkill.AkashaArts );
                            AI_TAR_RND();
                            return;
                        }
                        else if ( var39 < ( ( 30 + 30 ) + 30 ) )
                        {
                            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                            AI_ACT_SKILL( BattleSkill.GodsHand );
                            AI_TAR_RND();
                            return;
                        }

                    }

                }
                else 
                {
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 506 ) );
                    FUNCTION_0143( 306, 281, 0, 0 );
                    return;
                }

            }

            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) ) == 1 )
                {
                    
                    if ( var36 < 50 )
                    {
                        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
                        
                        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
                        {
                            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
                        }

                        
                        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
                        {
                            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
                        }

                        AI_ACT_SKILL( BattleSkill.ArmedReady );
                        AI_ID( 281 );
                        return;
                    }
                    else if ( var36 < ( 50 + 50 ) )
                    {
                        
                        if ( var39 < 30 )
                        {
                            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 508 ) );
                            FUNCTION_0143( 307, 278, 279, 280 );
                            return;
                        }
                        else if ( var39 < ( 30 + 30 ) )
                        {
                            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                            AI_ACT_SKILL( BattleSkill.AkashaArts );
                            AI_TAR_RND();
                            return;
                        }
                        else if ( var39 < ( ( 30 + 30 ) + 30 ) )
                        {
                            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                            AI_ACT_SKILL( BattleSkill.GodsHand );
                            AI_TAR_RND();
                            return;
                        }

                    }

                }
                else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) ) == 1 )
                {
                    
                    if ( var37 < 50 )
                    {
                        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) );
                        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
                        
                        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 1 )
                        {
                            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
                        }

                        
                        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 1 )
                        {
                            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
                        }

                        AI_ACT_SKILL( BattleSkill.ArmedReady );
                        AI_ID( 295 );
                        return;
                    }
                    else if ( var36 < ( 50 + 50 ) )
                    {
                        
                        if ( var39 < 30 )
                        {
                            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 508 ) );
                            FUNCTION_0143( 307, 278, 279, 280 );
                            return;
                        }
                        else if ( var39 < ( 30 + 30 ) )
                        {
                            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                            AI_ACT_SKILL( BattleSkill.AkashaArts );
                            AI_TAR_RND();
                            return;
                        }
                        else if ( var39 < ( ( 30 + 30 ) + 30 ) )
                        {
                            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                            AI_ACT_SKILL( BattleSkill.GodsHand );
                            AI_TAR_RND();
                            return;
                        }

                    }

                }
                else if ( var39 < 30 )
                {
                    BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                    BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 508 ) );
                    FUNCTION_0143( 307, 278, 279, 280 );
                    return;
                }
                else if ( var39 < ( 30 + 30 ) )
                {
                    BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                    AI_ACT_SKILL( BattleSkill.AkashaArts );
                    AI_TAR_RND();
                    return;
                }
                else if ( var39 < ( ( 30 + 30 ) + 30 ) )
                {
                    BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
                    AI_ACT_SKILL( BattleSkill.GodsHand );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Agi );
                AI_TAR_RND();
                return;
            }

        }

    }

}


void AI_H_Sekizo_1()
{
    
    if ( RNG( 1 ) == 0 )
    {
        AI_ACT_SKILL( BattleSkill.Agilao );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.Agi );
        AI_TAR_RND();
        return;
    }

}


void AI_H_Sekizo_2()
{
    
    if ( RNG( 1 ) == 0 )
    {
        AI_ACT_SKILL( BattleSkill.Bufula );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.Agi );
        AI_TAR_RND();
        return;
    }

}


void AI_H_Sekizo_3()
{
    
    if ( RNG( 1 ) == 0 )
    {
        AI_ACT_SKILL( BattleSkill.Zionga );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.Agi );
        AI_TAR_RND();
        return;
    }

}


void AI_H_GISEI_1()
{
    
    if ( FUNCTION_003D( 0x0400 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }
    else if ( FUNCTION_003D( 0x0400 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
        AI_JIBAKU();
        AI_ACT_SKILL( BattleSkill.Sacrifice );
        AI_TAR_RND();
        return;
    }

}


void AI_H_GISEI_2()
{
    
    if ( FUNCTION_003D( 0x0400 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
    }
    else if ( FUNCTION_003D( 0x0400 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 0 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
        AI_JIBAKU();
        AI_ACT_SKILL( BattleSkill.Sacrifice );
        AI_TAR_RND();
        return;
    }

}


void AI_Chidori()
{
    int var40;
    int var41;
    int var42;
    int var43;
    int var44;
    int var45;
    int var46;
    int var47;
    int var48;
    int var49;
    int var50;
    
    if ( FUNCTION_0033( 75 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_0033( 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( FUNCTION_0033( 25 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( FUNCTION_0057( 221 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }
    else if ( FUNCTION_0057( 221 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }

    
    if ( ( ( ( ( FUNCTION_0044( 1 ) == 1 ) || ( FUNCTION_0044( 4 ) == 1 ) ) || ( FUNCTION_0044( 0x10 ) == 1 ) ) || ( FUNCTION_0044( 0x40 ) == 1 ) ) || ( FUNCTION_0044( 0x0100 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }
    else if ( ( ( ( ( FUNCTION_0044( 1 ) == 0 ) && ( FUNCTION_0044( 4 ) == 0 ) ) && ( FUNCTION_0044( 0x10 ) == 0 ) ) && ( FUNCTION_0044( 0x40 ) == 0 ) ) && ( FUNCTION_0044( 0x0100 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }

    
    if ( ( ( ( ( FUNCTION_00AB( 264, 2 ) == 1 ) || ( FUNCTION_00AB( 264, 8 ) == 1 ) ) || ( FUNCTION_00AB( 264, 0x20 ) == 1 ) ) || ( FUNCTION_00AB( 264, 0x80 ) == 1 ) ) || ( FUNCTION_00AB( 264, 0x0200 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
    }
    else if ( ( ( ( ( FUNCTION_00AB( 264, 2 ) == 0 ) && ( FUNCTION_00AB( 264, 8 ) == 0 ) ) && ( FUNCTION_00AB( 264, 0x20 ) == 0 ) ) && ( FUNCTION_00AB( 264, 0x80 ) == 0 ) ) && ( FUNCTION_00AB( 264, 0x0200 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
    }

    
    if ( ( ( FUNCTION_004D( 3 ) == 1 ) || ( FUNCTION_004F( 3 ) == 1 ) ) || ( FUNCTION_0051( 3 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
    }
    else if ( ( ( FUNCTION_004D( 3 ) == 0 ) && ( FUNCTION_004F( 3 ) == 0 ) ) && ( FUNCTION_0051( 3 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
    }

    
    if ( FUNCTION_008F() == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 457 ) );
    }
    else if ( FUNCTION_008F() == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 457 ) );
    }

    
    if ( FUNCTION_0053( 3 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
    }
    else if ( FUNCTION_0053( 3 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
    }

    var40 = RNG( 100 );
    var41 = RNG( 100 );
    var42 = RNG( 100 );
    var43 = RNG( 100 );
    var44 = RNG( 100 );
    var45 = RNG( 100 );
    var46 = RNG( 100 );
    var47 = RNG( 100 );
    var48 = RNG( 100 );
    var49 = RNG( 100 );
    var50 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Agidyne );
        AI_TAR_RND();
        return;
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 457 ) ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.MindCharge );
            AI_MINE();
            return;
        }
        else if ( FUNCTION_0043( 0x00010000 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Tetrakarn );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 457 ) ) == 0 )
    {
        
        if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
        {
            
            if ( var40 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.MarinKarin );
                AI_NOTBAD( 1 );
                return;
            }
            else if ( var40 < ( 10 + 10 ) )
            {
                AI_ACT_SKILL( 243 );
                AI_TAR_RND();
                return;
            }
            else if ( var40 < ( ( 10 + 10 ) + 30 ) )
            {
                AI_ACT_SKILL( BattleSkill.PoisonMist69 );
                AI_TAR_RND();
                return;
            }
            else if ( var40 < ( ( ( 10 + 10 ) + 30 ) + 30 ) )
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }
            else if ( var40 < ( ( ( ( 10 + 10 ) + 30 ) + 30 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Agidyne );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) )
        {
            
            if ( var41 < 25 )
            {
                AI_ACT_SKILL( BattleSkill.Agidyne );
                AI_TAR_RND();
                return;
            }
            else if ( ( var41 < ( 25 + 20 ) ) && ( ( ( FUNCTION_0044( 2 ) == 0 ) || ( FUNCTION_0044( 0x40 ) == 0 ) ) || ( FUNCTION_0044( 0x80 ) == 0 ) ) )
            {
                AI_ACT_SKILL( 250 );
                AI_TAR_RND();
                return;
            }
            else if ( var41 < ( ( 25 + 20 ) + 10 ) )
            {
                AI_ACT_SKILL( 243 );
                AI_TAR_RND();
                return;
            }
            else if ( var41 < ( ( ( 25 + 20 ) + 10 ) + 20 ) )
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }
            else if ( var41 < ( ( ( ( 25 + 20 ) + 10 ) + 20 ) + 25 ) )
            {
                
                if ( ( var50 < ( 20 + 80 ) ) && ( FUNCTION_003C( 1 ) == 0 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mudoon );
                    FUNCTION_013D( 1 );
                    return;
                }
                else if ( var50 < 20 )
                {
                    AI_ACT_SKILL( BattleSkill.Mudoon );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_WEAPON();
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
        {
            
            if ( var42 < 20 )
            {
                
                if ( FUNCTION_0043( 0x00010000 ) == 0 )
                {
                    AI_ACT_SKILL( BattleSkill.Tetrakarn );
                    AI_MINE();
                    return;
                }
                else 
                {
                    AI_ACT_WEAPON();
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( ( var42 < ( 20 + 20 ) ) && ( FUNCTION_01C7( 0x0800 ) == 0 ) )
            {
                AI_ACT_SKILL( BattleSkill.MindCharge );
                AI_MINE();
                return;
            }
            else if ( ( var42 < ( ( 20 + 20 ) + 20 ) ) && ( ( ( FUNCTION_0044( 2 ) == 0 ) || ( FUNCTION_0044( 0x40 ) == 0 ) ) || ( FUNCTION_0044( 0x80 ) == 0 ) ) )
            {
                AI_ACT_SKILL( 250 );
                AI_TAR_RND();
                return;
            }
            else if ( var42 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
            {
                
                if ( ( var50 < ( 20 + 80 ) ) && ( FUNCTION_003C( 1 ) == 0 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mudoon );
                    FUNCTION_013D( 1 );
                    return;
                }
                else if ( var50 < 20 )
                {
                    AI_ACT_SKILL( BattleSkill.Mudoon );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_WEAPON();
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var42 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Agidyne );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) )
        {
            
            if ( var43 < 20 )
            {
                
                if ( FUNCTION_0043( 0x00010000 ) == 0 )
                {
                    AI_ACT_SKILL( BattleSkill.Tetrakarn );
                    AI_MINE();
                    return;
                }
                else 
                {
                    AI_ACT_WEAPON();
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var43 < ( 20 + 20 ) )
            {
                
                if ( ( var50 < ( 20 + 80 ) ) && ( FUNCTION_003C( 1 ) == 0 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mudoon );
                    FUNCTION_013D( 1 );
                    return;
                }
                else if ( var50 < 20 )
                {
                    AI_ACT_SKILL( BattleSkill.Mudoon );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_WEAPON();
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( ( var43 < ( ( 20 + 20 ) + 20 ) ) && ( FUNCTION_01C7( 0x0800 ) == 0 ) )
            {
                AI_ACT_SKILL( BattleSkill.MindCharge );
                AI_MINE();
                return;
            }
            else if ( ( var43 < ( ( ( 20 + 20 ) + 20 ) + 20 ) ) && ( ( ( FUNCTION_0044( 2 ) == 0 ) || ( FUNCTION_0044( 0x40 ) == 0 ) ) || ( FUNCTION_0044( 0x80 ) == 0 ) ) )
            {
                AI_ACT_SKILL( 250 );
                AI_TAR_RND();
                return;
            }
            else if ( var43 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Maragidyne6 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Jin2()
{
    int var51;
    
    if ( FUNCTION_0033( 75 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_0033( 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_0033( 25 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( AI_ENBAD( 0x00100000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }
    else if ( AI_ENBAD( 0x00100000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }

    
    if ( FUNCTION_0044( 0x00400000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }
    else if ( FUNCTION_0044( 0x00400000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }

    
    if ( FUNCTION_0053( 0 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }
    else if ( FUNCTION_0053( 0 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }

    
    if ( FUNCTION_0053( 1 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }
    else if ( FUNCTION_0053( 1 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }

    
    if ( FUNCTION_0053( 2 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
    }
    else if ( FUNCTION_0053( 2 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
    }

    
    if ( FUNCTION_0053( 3 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
    }
    else if ( FUNCTION_0053( 3 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
    }

    
    if ( FUNCTION_0053( 4 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
    }
    else if ( FUNCTION_0053( 4 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
    }

    
    if ( FUNCTION_0053( 5 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
    }
    else if ( FUNCTION_0053( 5 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
    }

    
    if ( FUNCTION_0053( 6 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
    }
    else if ( FUNCTION_0053( 6 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
    }

    
    if ( FUNCTION_0053( 8 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
    }
    else if ( FUNCTION_0053( 8 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
    }

    
    if ( FUNCTION_0053( 9 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 472 ) );
    }
    else if ( FUNCTION_0053( 9 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 472 ) );
    }

    
    if ( ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 472 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
    }

    var51 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.FireAttack305 );
        AI_TAR_BAD( 0x00100000 );
        return;
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 0 )
        {
            
            if ( var51 < 20 )
            {
                AI_ACT_SKILL( BattleSkill.StagnantAir );
                AI_TAR_RND();
                return;
            }
            else if ( var51 < ( 20 + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.EerieSound60 );
                AI_TAR_RND();
                return;
            }
            else if ( var51 < ( ( 20 + 20 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.SexyDance58 );
                AI_TAR_RND();
                return;
            }
            else if ( var51 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Infuriate );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Megido );
                AI_TAR_RND();
                return;
            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 1 )
        {
            
            if ( var51 < 25 )
            {
                AI_ACT_SKILL( BattleSkill.EerieSound60 );
                AI_TAR_RND();
                return;
            }
            else if ( var51 < ( 25 + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.SexyDance58 );
                AI_TAR_RND();
                return;
            }
            else if ( var51 < ( ( 25 + 25 ) + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.Infuriate );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Megido );
                AI_TAR_RND();
                return;
            }

        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
    {
        
        if ( ( var51 < 11 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.FatalEnd );
            AI_WEAK( 0 );
            return;
        }
        else if ( ( var51 < 22 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.GiganticFist );
            AI_WEAK( 1 );
            return;
        }
        else if ( ( var51 < 33 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.TorrentShot );
            AI_WEAK( 2 );
            return;
        }
        else if ( ( var51 < 44 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_WEAK( 3 );
            return;
        }
        else if ( ( var51 < 55 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_WEAK( 4 );
            return;
        }
        else if ( ( var51 < 66 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_WEAK( 5 );
            return;
        }
        else if ( ( var51 < 77 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_WEAK( 6 );
            return;
        }
        else if ( ( var51 < 88 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Hamaon );
            AI_WEAK( 8 );
            return;
        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 472 ) ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.Mudoon );
            AI_WEAK( 9 );
            return;
        }
        else if ( ( var51 < 11 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 472 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mudoon );
            AI_WEAK( 9 );
            return;
        }
        else if ( ( var51 < 22 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Hamaon );
            AI_WEAK( 8 );
            return;
        }
        else if ( ( var51 < 33 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_WEAK( 6 );
            return;
        }
        else if ( ( var51 < 44 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_WEAK( 5 );
            return;
        }
        else if ( ( var51 < 55 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_WEAK( 4 );
            return;
        }
        else if ( ( var51 < 66 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_WEAK( 3 );
            return;
        }
        else if ( ( var51 < 77 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.TorrentShot );
            AI_WEAK( 2 );
            return;
        }
        else if ( ( var51 < 88 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.GiganticFist );
            AI_WEAK( 1 );
            return;
        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.FatalEnd );
            AI_WEAK( 0 );
            return;
        }

    }
    else if ( ( var51 < 11 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.BladeofFury );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 22 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.SwiftStrike );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 33 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.ArrowRain );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 44 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Maragion );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 55 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mabufula );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 66 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mazionga );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 77 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Magarula );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 88 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mahama );
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 472 ) ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Mamudo );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 11 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 472 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mamudo );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 22 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mahama );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 33 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Magarula );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 44 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mazionga );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 55 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mabufula );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 66 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Maragion );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 77 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.ArrowRain );
        AI_TAR_RND();
        return;
    }
    else if ( ( var51 < 88 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.SwiftStrike );
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.BladeofFury );
        AI_TAR_RND();
        return;
    }

}


void AI_Takaya2()
{
    int var52;
    
    if ( FUNCTION_0033( 75 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( FUNCTION_0033( 75 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_0033( 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( FUNCTION_0033( 25 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( FUNCTION_0033( 25 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    var52 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( ( ( FUNCTION_019A( 1 ) != -1 ) && ( FUNCTION_019A( 0x10 ) != -1 ) ) && ( FUNCTION_019A( 0x40 ) != -1 ) )
        {
            FUNCTION_011E( 272 );
            AI_ACT_SKILL( 239 );
            AI_TAR_RND();
            return;
        }
        else if ( ( ( FUNCTION_0044( 1 ) == 1 ) || ( FUNCTION_0044( 0x10 ) == 1 ) ) || ( FUNCTION_0044( 0x40 ) == 1 ) )
        {
            FUNCTION_011E( 272 );
            AI_ACT_SKILL( BattleSkill.Dekaja );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            FUNCTION_011E( 272 );
            AI_ACT_SKILL( BattleSkill.MindCharge );
            AI_TAR_RND();
            return;
        }
        else 
        {
            FUNCTION_011E( 272 );
            AI_ACT_SKILL( BattleSkill.PierceAttack304 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 )
    {
        
        if ( GET_CNT( 69 ) != 1 )
        {
            
            if ( GET_CNT( 69 ) != 2 )
            {
                SET_CNT( 69, 0 );
            }

            
            if ( var52 < 15 )
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( BattleSkill.PierceAttack304 );
                AI_TAR_RND();
                return;
            }
            else if ( var52 < ( 15 + 15 ) )
            {
                FUNCTION_011E( 216 );
                AI_ACT_SKILL( BattleSkill.Agidyne );
                AI_TAR_RND();
                return;
            }
            else if ( var52 < ( ( 15 + 15 ) + 15 ) )
            {
                FUNCTION_011E( 219 );
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_TAR_RND();
                return;
            }
            else if ( var52 < ( ( ( 15 + 15 ) + 15 ) + 15 ) )
            {
                FUNCTION_011E( 217 );
                AI_ACT_SKILL( BattleSkill.Bufudyne );
                AI_TAR_RND();
                return;
            }
            else if ( var52 < ( ( ( ( 15 + 15 ) + 15 ) + 15 ) + 15 ) )
            {
                FUNCTION_011E( 218 );
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_TAR_RND();
                return;
            }
            else if ( ( var52 < ( ( ( ( ( 15 + 15 ) + 15 ) + 15 ) + 15 ) + 10 ) ) && ( FUNCTION_01C7( 0x0800 ) == 0 ) )
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( BattleSkill.MindCharge );
                AI_TAR_RND();
                return;
            }
            else 
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( BattleSkill.Megidola );
                AI_TAR_RND();
                return;
            }

        }
        else if ( GET_CNT( 69 ) == 1 )
        {
            FUNCTION_011E( 272 );
            AI_ACT_SKILL( 239 );
            AI_TAR_RND();
            SET_CNT( 69, 2 );
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
    {
        
        if ( GET_CNT( 69 ) != 2 )
        {
            SET_CNT( 69, 1 );
            
            if ( var52 < 5 )
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( BattleSkill.PierceAttack304 );
                AI_TAR_RND();
                return;
            }
            else if ( var52 < ( 5 + 8 ) )
            {
                FUNCTION_011E( 216 );
                AI_ACT_SKILL( BattleSkill.Agidyne );
                AI_TAR_RND();
                return;
            }
            else if ( var52 < ( ( 5 + 8 ) + 8 ) )
            {
                FUNCTION_011E( 219 );
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_TAR_RND();
                return;
            }
            else if ( var52 < ( ( ( 5 + 8 ) + 8 ) + 8 ) )
            {
                FUNCTION_011E( 217 );
                AI_ACT_SKILL( BattleSkill.Bufudyne );
                AI_TAR_RND();
                return;
            }
            else if ( var52 < ( ( ( ( 5 + 8 ) + 8 ) + 8 ) + 8 ) )
            {
                FUNCTION_011E( 218 );
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_TAR_RND();
                return;
            }
            else if ( ( ( ( var52 < ( ( ( ( ( 5 + 8 ) + 8 ) + 8 ) + 8 ) + 10 ) ) && ( FUNCTION_0044( 1 ) == 1 ) ) || ( FUNCTION_0044( 0x40 ) == 1 ) ) || ( FUNCTION_0044( 0x10 ) == 1 ) )
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( BattleSkill.Dekaja );
                AI_TAR_RND();
                return;
            }
            else if ( ( var52 < ( ( ( ( ( ( 5 + 8 ) + 8 ) + 8 ) + 8 ) + 10 ) + 15 ) ) && ( FUNCTION_01C7( 0x0800 ) == 0 ) )
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( BattleSkill.MindCharge );
                AI_TAR_RND();
                return;
            }
            else if ( var52 < ( ( ( ( ( ( ( 5 + 8 ) + 8 ) + 8 ) + 8 ) + 10 ) + 15 ) + 15 ) )
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( BattleSkill.Mahamaon48 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( BattleSkill.Mamudoon54 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( GET_CNT( 69 ) == 2 )
        {
            
            if ( var52 < 5 )
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( BattleSkill.PierceAttack304 );
                AI_TAR_RND();
                return;
            }
            else if ( var52 < ( 5 + 8 ) )
            {
                FUNCTION_011E( 216 );
                AI_ACT_SKILL( BattleSkill.Agidyne );
                AI_WEAK( 3 );
                return;
            }
            else if ( var52 < ( ( 5 + 8 ) + 8 ) )
            {
                FUNCTION_011E( 219 );
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_WEAK( 6 );
                return;
            }
            else if ( var52 < ( ( ( 5 + 8 ) + 8 ) + 8 ) )
            {
                FUNCTION_011E( 217 );
                AI_ACT_SKILL( BattleSkill.Bufudyne );
                AI_WEAK( 4 );
                return;
            }
            else if ( var52 < ( ( ( ( 5 + 8 ) + 8 ) + 8 ) + 8 ) )
            {
                FUNCTION_011E( 218 );
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_WEAK( 5 );
                return;
            }
            else if ( ( ( ( var52 < ( ( ( ( ( 5 + 8 ) + 8 ) + 8 ) + 8 ) + 10 ) ) && ( FUNCTION_0044( 1 ) == 1 ) ) || ( FUNCTION_0044( 0x40 ) == 1 ) ) || ( FUNCTION_0044( 0x10 ) == 1 ) )
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( BattleSkill.Dekaja );
                AI_TAR_RND();
                return;
            }
            else if ( ( var52 < ( ( ( ( ( ( 5 + 8 ) + 8 ) + 8 ) + 8 ) + 10 ) + 15 ) ) && ( FUNCTION_01C7( 0x0800 ) == 0 ) )
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( BattleSkill.MindCharge );
                AI_TAR_RND();
                return;
            }
            else if ( ( ( ( var52 < ( ( ( ( ( ( ( 5 + 8 ) + 8 ) + 8 ) + 8 ) + 10 ) + 15 ) + 15 ) ) && ( FUNCTION_019A( 1 ) != -1 ) ) && ( FUNCTION_019A( 0x10 ) != -1 ) ) && ( FUNCTION_019A( 0x40 ) != -1 ) )
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( 239 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                FUNCTION_011E( 272 );
                AI_ACT_SKILL( BattleSkill.Megidola );
                AI_TAR_RND();
                return;
            }

        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_Nyx_FOOL()
{
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
        FUNCTION_01D2( 219 );
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
        FUNCTION_0090();
        return;
    }

}


void AI_Nyx_MAGICIAN()
{
    int var53;
    int var54;
    var53 = RNG( 100 );
    var54 = RNG( 100 );
    
    if ( ( ( FUNCTION_004D( 3 ) == 1 ) || ( FUNCTION_004F( 3 ) == 1 ) ) || ( FUNCTION_0051( 3 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( ( ( FUNCTION_004D( 3 ) == 0 ) && ( FUNCTION_004F( 3 ) == 0 ) ) && ( FUNCTION_0051( 3 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_004D( 3 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( FUNCTION_004D( 3 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( FUNCTION_004F( 3 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( FUNCTION_004F( 3 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( FUNCTION_0051( 3 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }
    else if ( FUNCTION_0051( 3 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
        {
            
            if ( var54 < 15 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.FireBreak );
                    AI_HANSYA( 3 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var54 < ( 15 + 85 ) )
            {
                
                if ( var53 < 5 )
                {
                    AI_ACT_SKILL( BattleSkill.Agi );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( 5 + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Agilao );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( ( 5 + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Agidyne );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( ( ( 5 + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maragi );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maragion );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maragidyne6 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
        {
            
            if ( var54 < 15 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.FireBreak );
                    AI_KYUSYU( 3 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var54 < ( 15 + 85 ) )
            {
                
                if ( var53 < 5 )
                {
                    AI_ACT_SKILL( BattleSkill.Agi );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( 5 + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Agilao );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( ( 5 + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Agidyne );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( ( ( 5 + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maragi );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maragion );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maragidyne6 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 )
        {
            
            if ( var54 < 15 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.FireBreak );
                    AI_MUKOU( 3 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var54 < ( 15 + 85 ) )
            {
                
                if ( var53 < 5 )
                {
                    AI_ACT_SKILL( BattleSkill.Agi );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( 5 + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Agilao );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( ( 5 + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Agidyne );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( ( ( 5 + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maragi );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maragion );
                    AI_TAR_RND();
                    return;
                }
                else if ( var53 < ( ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maragidyne6 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 )
    {
        
        if ( var53 < 5 )
        {
            AI_ACT_SKILL( BattleSkill.Agi );
            AI_TAR_RND();
            return;
        }
        else if ( var53 < ( 5 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agilao );
            AI_TAR_RND();
            return;
        }
        else if ( var53 < ( ( 5 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_TAR_RND();
            return;
        }
        else if ( var53 < ( ( ( 5 + 20 ) + 20 ) + 5 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maragi );
            AI_TAR_RND();
            return;
        }
        else if ( var53 < ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maragion );
            AI_TAR_RND();
            return;
        }
        else if ( var53 < ( ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maragidyne6 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var53 < 5 )
    {
        AI_ACT_SKILL( BattleSkill.Agi );
        AI_TAR_RND();
        return;
    }
    else if ( var53 < ( 5 + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Agilao );
        AI_TAR_RND();
        return;
    }
    else if ( var53 < ( ( 5 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Agidyne );
        AI_TAR_RND();
        return;
    }
    else if ( var53 < ( ( ( 5 + 20 ) + 20 ) + 5 ) )
    {
        AI_ACT_SKILL( BattleSkill.Maragi );
        AI_TAR_RND();
        return;
    }
    else if ( var53 < ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Maragion );
        AI_TAR_RND();
        return;
    }
    else if ( var53 < ( ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Maragidyne6 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
        AI_TAR_RND();
        return;
    }

}


void AI_Nyx_PRIESTESS()
{
    int var55;
    int var56;
    var55 = RNG( 100 );
    var56 = RNG( 100 );
    
    if ( ( ( FUNCTION_004D( 4 ) == 1 ) || ( FUNCTION_004F( 4 ) == 1 ) ) || ( FUNCTION_0051( 4 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( ( ( FUNCTION_004D( 4 ) == 0 ) && ( FUNCTION_004F( 4 ) == 0 ) ) && ( FUNCTION_0051( 4 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_004D( 4 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( FUNCTION_004D( 4 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( FUNCTION_004F( 4 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( FUNCTION_004F( 4 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( FUNCTION_0051( 4 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }
    else if ( FUNCTION_0051( 4 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
        {
            
            if ( var56 < 25 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.IceBreak );
                    AI_HANSYA( 4 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var56 < ( 25 + 75 ) )
            {
                
                if ( var55 < 5 )
                {
                    AI_ACT_SKILL( BattleSkill.Bufu );
                    AI_NOTHANSYA( 4 );
                    return;
                }
                else if ( var55 < ( 5 + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Bufula );
                    AI_NOTHANSYA( 4 );
                    return;
                }
                else if ( var55 < ( ( 5 + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Bufudyne );
                    AI_NOTHANSYA( 4 );
                    return;
                }
                else if ( var55 < ( ( ( 5 + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mabufu );
                    AI_TAR_RND();
                    return;
                }
                else if ( var55 < ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mabufula );
                    AI_TAR_RND();
                    return;
                }
                else if ( var55 < ( ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
        {
            
            if ( var56 < 25 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.IceBreak );
                    AI_KYUSYU( 4 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var56 < ( 25 + 75 ) )
            {
                
                if ( var55 < 5 )
                {
                    AI_ACT_SKILL( BattleSkill.Bufu );
                    AI_NOTHANSYA( 4 );
                    return;
                }
                else if ( var55 < ( 5 + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Bufula );
                    AI_NOTHANSYA( 4 );
                    return;
                }
                else if ( var55 < ( ( 5 + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Bufudyne );
                    AI_NOTHANSYA( 4 );
                    return;
                }
                else if ( var55 < ( ( ( 5 + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mabufu );
                    AI_TAR_RND();
                    return;
                }
                else if ( var55 < ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mabufula );
                    AI_TAR_RND();
                    return;
                }
                else if ( var55 < ( ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 )
        {
            
            if ( var56 < 25 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.IceBreak );
                    AI_MUKOU( 4 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var56 < ( 25 + 75 ) )
            {
                
                if ( var55 < 5 )
                {
                    AI_ACT_SKILL( BattleSkill.Bufu );
                    AI_NOTHANSYA( 4 );
                    return;
                }
                else if ( var55 < ( 5 + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Bufula );
                    AI_NOTHANSYA( 4 );
                    return;
                }
                else if ( var55 < ( ( 5 + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Bufudyne );
                    AI_NOTHANSYA( 4 );
                    return;
                }
                else if ( var55 < ( ( ( 5 + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mabufu );
                    AI_TAR_RND();
                    return;
                }
                else if ( var55 < ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mabufula );
                    AI_TAR_RND();
                    return;
                }
                else if ( var55 < ( ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 )
    {
        
        if ( var55 < 5 )
        {
            AI_ACT_SKILL( BattleSkill.Bufu );
            AI_NOTHANSYA( 4 );
            return;
        }
        else if ( var55 < ( 5 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufula );
            AI_NOTHANSYA( 4 );
            return;
        }
        else if ( var55 < ( ( 5 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_NOTHANSYA( 4 );
            return;
        }
        else if ( var55 < ( ( ( 5 + 20 ) + 20 ) + 5 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mabufu );
            AI_TAR_RND();
            return;
        }
        else if ( var55 < ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mabufula );
            AI_TAR_RND();
            return;
        }
        else if ( var55 < ( ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var55 < 5 )
    {
        AI_ACT_SKILL( BattleSkill.Bufu );
        AI_NOTHANSYA( 4 );
        return;
    }
    else if ( var55 < ( 5 + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Bufula );
        AI_NOTHANSYA( 4 );
        return;
    }
    else if ( var55 < ( ( 5 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Bufudyne );
        AI_NOTHANSYA( 4 );
        return;
    }
    else if ( var55 < ( ( ( 5 + 20 ) + 20 ) + 5 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mabufu );
        AI_TAR_RND();
        return;
    }
    else if ( var55 < ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mabufula );
        AI_TAR_RND();
        return;
    }
    else if ( var55 < ( ( ( ( ( 5 + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
        AI_TAR_RND();
        return;
    }

}


void AI_Nyx_EMPRESS()
{
    int var57;
    int var58;
    int var59;
    var57 = RNG( 100 );
    var58 = RNG( 100 );
    var59 = RNG( 100 );
    
    if ( FUNCTION_004D( 6 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( FUNCTION_004D( 6 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_004F( 6 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( FUNCTION_004F( 6 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( FUNCTION_0051( 6 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( FUNCTION_0051( 6 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
        {
            
            if ( var59 < 40 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.WindBreak );
                    AI_KYUSYU( 6 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var59 < ( 40 + 60 ) )
            {
                
                if ( var57 < 10 )
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( 10 + 5 ) )
                {
                    
                    if ( var58 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.Garu );
                        AI_HANSYA( 6 );
                        return;
                    }
                    else if ( var58 < ( 20 + 80 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Garu );
                        AI_NOTHANSYA( 6 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.Garu );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var57 < ( ( 10 + 5 ) + 20 ) )
                {
                    
                    if ( var58 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.Garula );
                        AI_HANSYA( 6 );
                        return;
                    }
                    else if ( var58 < ( 20 + 80 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Garula );
                        AI_NOTHANSYA( 6 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.Garula );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var57 < ( ( ( 10 + 5 ) + 20 ) + 20 ) )
                {
                    
                    if ( var58 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.Garudyne );
                        AI_HANSYA( 6 );
                        return;
                    }
                    else if ( var58 < ( 20 + 80 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Garudyne );
                        AI_NOTHANSYA( 6 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.Garudyne );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var57 < ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Magaru );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Magarula );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Magarudyne15 );
                    AI_TAR_RND();
                    return;
                }

            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
        {
            
            if ( var59 < 40 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.WindBreak );
                    AI_MUKOU( 6 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var59 < ( 40 + 60 ) )
            {
                
                if ( var57 < 10 )
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( 10 + 5 ) )
                {
                    
                    if ( var58 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.Garu );
                        AI_HANSYA( 6 );
                        return;
                    }
                    else if ( var58 < ( 20 + 80 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Garu );
                        AI_NOTHANSYA( 6 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.Garu );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var57 < ( ( 10 + 5 ) + 20 ) )
                {
                    
                    if ( var58 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.Garula );
                        AI_HANSYA( 6 );
                        return;
                    }
                    else if ( var58 < ( 20 + 80 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Garula );
                        AI_NOTHANSYA( 6 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.Garula );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var57 < ( ( ( 10 + 5 ) + 20 ) + 20 ) )
                {
                    
                    if ( var58 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.Garudyne );
                        AI_HANSYA( 6 );
                        return;
                    }
                    else if ( var58 < ( 20 + 80 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Garudyne );
                        AI_NOTHANSYA( 6 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.Garudyne );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var57 < ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Magaru );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Magarula );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Magarudyne15 );
                    AI_TAR_RND();
                    return;
                }

            }

        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
        {
            
            if ( var57 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }
            else if ( var57 < ( 10 + 5 ) )
            {
                
                if ( var58 < 20 )
                {
                    AI_ACT_SKILL( BattleSkill.Garu );
                    AI_HANSYA( 6 );
                    return;
                }
                else if ( var58 < ( 20 + 80 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Garu );
                    AI_NOTHANSYA( 6 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.Garu );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var57 < ( ( 10 + 5 ) + 20 ) )
            {
                
                if ( var58 < 20 )
                {
                    AI_ACT_SKILL( BattleSkill.Garula );
                    AI_HANSYA( 6 );
                    return;
                }
                else if ( var58 < ( 20 + 80 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Garula );
                    AI_NOTHANSYA( 6 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.Garula );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var57 < ( ( ( 10 + 5 ) + 20 ) + 20 ) )
            {
                
                if ( var58 < 20 )
                {
                    AI_ACT_SKILL( BattleSkill.Garudyne );
                    AI_HANSYA( 6 );
                    return;
                }
                else if ( var58 < ( 20 + 80 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Garudyne );
                    AI_NOTHANSYA( 6 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.Garudyne );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var57 < ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) )
            {
                AI_ACT_SKILL( BattleSkill.Magaru );
                AI_TAR_RND();
                return;
            }
            else if ( var57 < ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Magarula );
                AI_TAR_RND();
                return;
            }
            else if ( var57 < ( ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Magarudyne15 );
                AI_TAR_RND();
                return;
            }

        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
        {
            
            if ( var59 < 40 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.WindBreak );
                    AI_KYUSYU( 6 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var59 < ( 40 + 60 ) )
            {
                
                if ( var57 < 10 )
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( 10 + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Garu );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( 10 + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Garula );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( ( 10 + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Garudyne );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Magaru );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Magarula );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Magarudyne15 );
                    AI_TAR_RND();
                    return;
                }

            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
        {
            
            if ( var59 < 40 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.WindBreak );
                    AI_MUKOU( 6 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var59 < ( 40 + 60 ) )
            {
                
                if ( var57 < 10 )
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( 10 + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Garu );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( 10 + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Garula );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( ( 10 + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Garudyne );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Magaru );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Magarula );
                    AI_TAR_RND();
                    return;
                }
                else if ( var57 < ( ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Magarudyne15 );
                    AI_TAR_RND();
                    return;
                }

            }

        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
        {
            
            if ( var57 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }
            else if ( var57 < ( 10 + 5 ) )
            {
                AI_ACT_SKILL( BattleSkill.Garu );
                AI_TAR_RND();
                return;
            }
            else if ( var57 < ( ( 10 + 5 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Garula );
                AI_TAR_RND();
                return;
            }
            else if ( var57 < ( ( ( 10 + 5 ) + 20 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_TAR_RND();
                return;
            }
            else if ( var57 < ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) )
            {
                AI_ACT_SKILL( BattleSkill.Magaru );
                AI_TAR_RND();
                return;
            }
            else if ( var57 < ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Magarula );
                AI_TAR_RND();
                return;
            }
            else if ( var57 < ( ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Magarudyne15 );
                AI_TAR_RND();
                return;
            }

        }

    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.Agi );
        AI_TAR_RND();
    }

}


void AI_Nyx_EMPEROR()
{
    int var60;
    int var61;
    int var62;
    var60 = RNG( 100 );
    var61 = RNG( 100 );
    var62 = RNG( 100 );
    
    if ( FUNCTION_004D( 5 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( FUNCTION_004D( 5 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_004F( 5 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( FUNCTION_004F( 5 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( FUNCTION_0051( 5 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( FUNCTION_0051( 5 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
        {
            
            if ( var62 < 40 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.ElecBreak );
                    AI_KYUSYU( 5 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var62 < ( 40 + 60 ) )
            {
                
                if ( var60 < 10 )
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( 10 + 5 ) )
                {
                    
                    if ( var61 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.Zio );
                        AI_HANSYA( 5 );
                        return;
                    }
                    else if ( var61 < ( 20 + 80 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Zio );
                        AI_NOTHANSYA( 5 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.Zio );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var60 < ( ( 10 + 5 ) + 20 ) )
                {
                    
                    if ( var61 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.Zionga );
                        AI_HANSYA( 5 );
                        return;
                    }
                    else if ( var61 < ( 20 + 80 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Zionga );
                        AI_NOTHANSYA( 5 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.Zionga );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var60 < ( ( ( 10 + 5 ) + 20 ) + 20 ) )
                {
                    
                    if ( var61 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.Ziodyne );
                        AI_HANSYA( 5 );
                        return;
                    }
                    else if ( var61 < ( 20 + 80 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Ziodyne );
                        AI_NOTHANSYA( 5 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.Ziodyne );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var60 < ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mazio );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mazionga );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maziodyne33 );
                    AI_TAR_RND();
                    return;
                }

            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
        {
            
            if ( var62 < 40 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.ElecBreak );
                    AI_MUKOU( 5 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var62 < ( 40 + 60 ) )
            {
                
                if ( var60 < 10 )
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( 10 + 5 ) )
                {
                    
                    if ( var61 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.Zio );
                        AI_HANSYA( 5 );
                        return;
                    }
                    else if ( var61 < ( 20 + 80 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Zio );
                        AI_NOTHANSYA( 5 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.Zio );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var60 < ( ( 10 + 5 ) + 20 ) )
                {
                    
                    if ( var61 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.Zionga );
                        AI_HANSYA( 5 );
                        return;
                    }
                    else if ( var61 < ( 20 + 80 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Zionga );
                        AI_NOTHANSYA( 5 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.Zionga );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var60 < ( ( ( 10 + 5 ) + 20 ) + 20 ) )
                {
                    
                    if ( var61 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.Ziodyne );
                        AI_HANSYA( 5 );
                        return;
                    }
                    else if ( var61 < ( 20 + 80 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Ziodyne );
                        AI_NOTHANSYA( 5 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.Ziodyne );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var60 < ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mazio );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mazionga );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maziodyne33 );
                    AI_TAR_RND();
                    return;
                }

            }

        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
        {
            
            if ( var60 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }
            else if ( var60 < ( 10 + 5 ) )
            {
                
                if ( var61 < 20 )
                {
                    AI_ACT_SKILL( BattleSkill.Zio );
                    AI_HANSYA( 5 );
                    return;
                }
                else if ( var61 < ( 20 + 80 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Zio );
                    AI_NOTHANSYA( 5 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.Zio );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var60 < ( ( 10 + 5 ) + 20 ) )
            {
                
                if ( var61 < 20 )
                {
                    AI_ACT_SKILL( BattleSkill.Zionga );
                    AI_HANSYA( 5 );
                    return;
                }
                else if ( var61 < ( 20 + 80 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Zionga );
                    AI_NOTHANSYA( 5 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.Zionga );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var60 < ( ( ( 10 + 5 ) + 20 ) + 20 ) )
            {
                
                if ( var61 < 20 )
                {
                    AI_ACT_SKILL( BattleSkill.Ziodyne );
                    AI_HANSYA( 5 );
                    return;
                }
                else if ( var61 < ( 20 + 80 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Ziodyne );
                    AI_NOTHANSYA( 5 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.Ziodyne );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var60 < ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) )
            {
                AI_ACT_SKILL( BattleSkill.Mazio );
                AI_TAR_RND();
                return;
            }
            else if ( var60 < ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Mazionga );
                AI_TAR_RND();
                return;
            }
            else if ( var60 < ( ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Maziodyne33 );
                AI_TAR_RND();
                return;
            }

        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
        {
            
            if ( var62 < 40 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.ElecBreak );
                    AI_KYUSYU( 5 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var62 < ( 40 + 60 ) )
            {
                
                if ( var60 < 10 )
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( 10 + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Zio );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( 10 + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Zionga );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( ( 10 + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Ziodyne );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mazio );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mazionga );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maziodyne33 );
                    AI_TAR_RND();
                    return;
                }

            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
        {
            
            if ( var62 < 40 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.ElecBreak );
                    AI_MUKOU( 5 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var62 < ( 40 + 60 ) )
            {
                
                if ( var60 < 10 )
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( 10 + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Zio );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( 10 + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Zionga );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( ( 10 + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Ziodyne );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mazio );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Mazionga );
                    AI_TAR_RND();
                    return;
                }
                else if ( var60 < ( ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( BattleSkill.Maziodyne33 );
                    AI_TAR_RND();
                    return;
                }

            }

        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
        {
            
            if ( var60 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }
            else if ( var60 < ( 10 + 5 ) )
            {
                AI_ACT_SKILL( BattleSkill.Zio );
                AI_TAR_RND();
                return;
            }
            else if ( var60 < ( ( 10 + 5 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Zionga );
                AI_TAR_RND();
                return;
            }
            else if ( var60 < ( ( ( 10 + 5 ) + 20 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_TAR_RND();
                return;
            }
            else if ( var60 < ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) )
            {
                AI_ACT_SKILL( BattleSkill.Mazio );
                AI_TAR_RND();
                return;
            }
            else if ( var60 < ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Mazionga );
                AI_TAR_RND();
                return;
            }
            else if ( var60 < ( ( ( ( ( ( 10 + 5 ) + 20 ) + 20 ) + 5 ) + 20 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Maziodyne33 );
                AI_TAR_RND();
                return;
            }

        }

    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.Agi );
        AI_TAR_RND();
    }

}


void AI_Nyx_HIEROPHANT()
{
    int var63;
    int var64;
    int var65;
    int var66;
    var63 = RNG( 100 );
    var64 = RNG( 100 );
    var65 = RNG( 100 );
    var66 = RNG( 100 );
    
    if ( AI_ENBAD( 0x00100000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( AI_ENBAD( 0x00100000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_015B( 1, 0x00100000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( FUNCTION_015B( 1, 0x00100000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( FUNCTION_015B( 2, 0x00100000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( FUNCTION_015B( 2, 0x00100000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( FUNCTION_015B( 4, 0x00100000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }
    else if ( FUNCTION_015B( 4, 0x00100000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }

    
    if ( FUNCTION_015B( 3, 0x00100000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }
    else if ( FUNCTION_015B( 3, 0x00100000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }

    
    if ( FUNCTION_015B( 5, 0x00100000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }
    else if ( FUNCTION_015B( 5, 0x00100000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }

    
    if ( FUNCTION_015B( 7, 0x00100000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }
    else if ( FUNCTION_015B( 7, 0x00100000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }

    
    if ( FUNCTION_015B( 10, 0x00100000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
    }
    else if ( FUNCTION_015B( 10, 0x00100000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
    }

    
    if ( FUNCTION_015B( 8, 0x00100000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
    }
    else if ( FUNCTION_015B( 8, 0x00100000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
    }

    
    if ( FUNCTION_0044( 0x4000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 457 ) );
    }
    else if ( FUNCTION_0044( 0x4000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 457 ) );
    }

    
    if ( FUNCTION_0044( 0x00008000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
    }
    else if ( FUNCTION_0044( 0x00008000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        
        if ( var64 < 40 )
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_NOTBAD( 0x00100000 );
            return;
        }
        else if ( var64 < ( 40 + 40 ) )
        {
            
            if ( var66 < 75 )
            {
                AI_ACT_SKILL( BattleSkill.CruelAttack );
                AI_TAR_BAD( 0x00100000 );
                return;
            }
            else if ( var66 < ( 75 + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.CruelAttack );
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var64 < ( ( 40 + 40 ) + 20 ) )
        {
            
            if ( var66 < 75 )
            {
                AI_ACT_SKILL( BattleSkill.VileAssault );
                AI_TAR_BAD( 0x00100000 );
                return;
            }
            else if ( var66 < ( 75 + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.VileAssault );
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 )
    {
        
        if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 457 ) ) == 1 ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) ) == 1 ) )
        {
            
            if ( var65 < 50 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                STAND();
                return;
            }
            else if ( var65 < ( 50 + 50 ) )
            {
                AI_ACT_SKILL( BattleSkill.FatalEnd );
                STAND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 457 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) ) == 0 ) )
        {
            
            if ( var63 < 20 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }
            else if ( var63 < ( 20 + 30 ) )
            {
                AI_ACT_SKILL( BattleSkill.Rebellion );
                AI_TAR_RND();
                return;
            }
            else if ( var63 < ( ( 20 + 30 ) + 30 ) )
            {
                AI_ACT_SKILL( BattleSkill.Revolution );
                AI_TAR_RND();
                return;
            }
            else if ( var63 < ( ( ( 20 + 30 ) + 30 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.FatalEnd );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
        AI_TAR_RND();
        return;
    }

}


void AI_Nyx_LOVERS()
{
    int var67;
    var67 = RNG( 100 );
    
    if ( FUNCTION_01DE() == 1 )
    {
        
        if ( var67 < 25 )
        {
            AI_ACT_SKILL( BattleSkill.MarinKarin );
            AI_TAR_RND();
            return;
        }
        else if ( var67 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Pulinpa );
            AI_TAR_RND();
            return;
        }
        else if ( var67 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Tentarafoo62 );
            AI_TAR_RND();
            return;
        }
        else if ( var67 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.HolyArrow139 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
        AI_TAR_RND();
        return;
    }

}


void AI_Nyx_CHARIOT()
{
    int var68;
    var68 = RNG( 100 );
    
    if ( var68 < 25 )
    {
        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
        AI_TAR_RND();
        return;
    }
    else if ( var68 < ( 25 + 25 ) )
    {
        
        if ( FUNCTION_01C7( 0x0400 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.PowerCharge );
            AI_MINE();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.HeatWave );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var68 < ( ( 25 + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.GodsHand );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.HeatWave );
        AI_TAR_RND();
        return;
    }

}


void AI_Nyx_JUSTICE()
{
    int var69;
    var69 = RNG( 100 );
    
    if ( var69 < 25 )
    {
        AI_ACT_SKILL( BattleSkill.Mahama );
        AI_TAR_RND();
        return;
    }
    else if ( var69 < ( 25 + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.Hamaon );
        AI_TAR_RND();
        return;
    }
    else if ( var69 < ( ( 25 + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
        AI_TAR_RND();
        return;
    }
    else if ( var69 < ( ( ( 25 + 25 ) + 25 ) + 5 ) )
    {
        
        if ( FUNCTION_01C7( 1 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Tarukaja );
            AI_MINE();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
        AI_TAR_RND();
        return;
    }

}


void AI_Nyx_HERMIT()
{
    int var70;
    int var71;
    int var72;
    var70 = RNG( 100 );
    var71 = RNG( 100 );
    var72 = RNG( 100 );
    
    if ( ( FUNCTION_01C7( 0x00010000 ) == 1 ) || ( FUNCTION_01C7( 0x00020000 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( ( FUNCTION_01C7( 0x00010000 ) == 0 ) && ( FUNCTION_01C7( 0x00020000 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_0044( 0x00400000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( FUNCTION_0044( 0x00400000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) )
    {
        
        if ( var70 < 20 )
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }
        else if ( var70 < ( 20 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Tetrakarn );
            AI_MINE();
            return;
        }
        else if ( var70 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Makarakarn );
            AI_MINE();
            return;
        }
        else if ( var70 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.FoulBreath );
            AI_TAR_RND();
            return;
        }
        else if ( var70 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mudoon );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) )
    {
        
        if ( var71 < 25 )
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }
        else if ( var71 < ( 25 + 25 ) )
        {
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Poisma );
                AI_NOTBAD( 0x80 );
                return;
            }
            else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.FoulBreath );
                AI_NOTHOJO( 0x00400000 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var71 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mamudo );
            AI_TAR_RND();
            return;
        }
        else if ( var71 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Poisma );
            AI_NOTBAD( 0x80 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
    {
        
        if ( var72 < 10 )
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }
        else if ( var72 < ( 10 + 0x20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Poisma );
            AI_NOTBAD( 0x80 );
            return;
        }
        else if ( var72 < ( ( 10 + 0x20 ) + 0x20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Tentarafoo62 );
            AI_TAR_RND();
            return;
        }
        else if ( var72 < ( ( ( 10 + 0x20 ) + 0x20 ) + 6 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mamudoon54 );
            AI_TAR_RND();
            return;
        }
        else if ( var72 < ( ( ( ( 10 + 0x20 ) + 0x20 ) + 6 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.FoulBreath );
            AI_NOTHOJO( 0x00400000 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
        AI_TAR_RND();
        return;
    }

}


void AI_Nyx_FORTUNE()
{
    int var73;
    int var74;
    int var75;
    int var76;
    int var77;
    var73 = RNG( 100 );
    var74 = RNG( 100 );
    var75 = RNG( 100 );
    var76 = RNG( 100 );
    var77 = RNG( 100 );
    
    if ( var77 < 25 )
    {
        
        if ( var73 < 17 )
        {
            AI_ACT_SKILL( BattleSkill.Agi );
            AI_TAR_RND();
            return;
        }
        else if ( var73 < ( 17 + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agilao );
            AI_TAR_RND();
            return;
        }
        else if ( var73 < ( ( 17 + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_TAR_RND();
            return;
        }
        else if ( var73 < ( ( ( 17 + 17 ) + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maragi );
            AI_TAR_RND();
            return;
        }
        else if ( var73 < ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 0x10 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maragion );
            AI_TAR_RND();
            return;
        }
        else if ( var73 < ( ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 0x10 ) + 0x10 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maragidyne6 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var77 < ( 25 + 25 ) )
    {
        
        if ( var74 < 17 )
        {
            AI_ACT_SKILL( BattleSkill.Bufu );
            AI_TAR_RND();
            return;
        }
        else if ( var74 < ( 17 + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufula );
            AI_TAR_RND();
            return;
        }
        else if ( var74 < ( ( 17 + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_TAR_RND();
            return;
        }
        else if ( var74 < ( ( ( 17 + 17 ) + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mabufu );
            AI_TAR_RND();
            return;
        }
        else if ( var74 < ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 0x10 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mabufula );
            AI_TAR_RND();
            return;
        }
        else if ( var74 < ( ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 0x10 ) + 0x10 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var77 < ( ( 25 + 25 ) + 25 ) )
    {
        
        if ( var75 < 17 )
        {
            AI_ACT_SKILL( BattleSkill.Zio );
            AI_TAR_RND();
            return;
        }
        else if ( var75 < ( 17 + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Zionga );
            AI_TAR_RND();
            return;
        }
        else if ( var75 < ( ( 17 + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_TAR_RND();
            return;
        }
        else if ( var75 < ( ( ( 17 + 17 ) + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mazio );
            AI_TAR_RND();
            return;
        }
        else if ( var75 < ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 0x10 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mazionga );
            AI_TAR_RND();
            return;
        }
        else if ( var75 < ( ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 0x10 ) + 0x10 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maziodyne33 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var77 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
    {
        
        if ( var76 < 17 )
        {
            AI_ACT_SKILL( BattleSkill.Garu );
            AI_TAR_RND();
            return;
        }
        else if ( var76 < ( 17 + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garula );
            AI_TAR_RND();
            return;
        }
        else if ( var76 < ( ( 17 + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_TAR_RND();
            return;
        }
        else if ( var76 < ( ( ( 17 + 17 ) + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Magaru );
            AI_TAR_RND();
            return;
        }
        else if ( var76 < ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 0x10 ) )
        {
            AI_ACT_SKILL( BattleSkill.Magarula );
            AI_TAR_RND();
            return;
        }
        else if ( var76 < ( ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 0x10 ) + 0x10 ) )
        {
            AI_ACT_SKILL( BattleSkill.Magarudyne15 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
        AI_TAR_RND();
        return;
    }

}


void AI_Nyx_STRENGTH()
{
    int var78;
    int var79;
    int var80;
    var78 = RNG( 100 );
    var79 = RNG( 100 );
    var80 = RNG( 100 );
    
    if ( FUNCTION_0057( 220 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( FUNCTION_0057( 220 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( FUNCTION_0044( 0x80 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( FUNCTION_0044( 0x80 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( FUNCTION_008F() == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( FUNCTION_008F() == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
    {
        
        if ( var78 < 10 )
        {
            AI_ACT_SKILL( BattleSkill.PowerCharge );
            AI_MINE();
            return;
        }
        else if ( var78 < ( 10 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Deathbound );
            AI_TAR_RND();
            return;
        }
        else if ( var78 < ( ( 10 + 20 ) + 30 ) )
        {
            AI_ACT_SKILL( BattleSkill.TempestSlash );
            AI_TAR_RND();
            return;
        }
        else if ( var78 < ( ( ( 10 + 20 ) + 30 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Rakunda );
            AI_NOTHOJO( 0x80 );
            return;
        }
        else if ( var78 < ( ( ( ( 10 + 20 ) + 30 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        
        if ( var79 < 40 )
        {
            AI_ACT_SKILL( BattleSkill.Deathbound );
            AI_TAR_RND();
            return;
        }
        else if ( var79 < ( 40 + 40 ) )
        {
            AI_ACT_SKILL( BattleSkill.TempestSlash );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
    {
        
        if ( var80 < 25 )
        {
            AI_ACT_SKILL( BattleSkill.PowerCharge );
            AI_MINE();
            return;
        }
        else if ( var80 < ( 25 + 75 ) )
        {
            AI_ACT_SKILL( BattleSkill.Rakunda );
            AI_NOTHOJO( 0x80 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_Nyx_HANGEDMAN()
{
    int var81;
    int var82;
    int var83;
    int var84;
    var81 = RNG( 100 );
    var82 = RNG( 100 );
    var83 = RNG( 100 );
    var84 = RNG( 100 );
    
    if ( FUNCTION_0057( 221 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( FUNCTION_0057( 221 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( AI_ENBAD( 8 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( AI_ENBAD( 8 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) )
    {
        
        if ( var81 < 17 )
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }
        else if ( var81 < ( 17 + 0x10 ) )
        {
            
            if ( var84 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.Mudo );
                AI_TAR_RND();
                return;
            }
            else if ( var84 < ( 10 + 90 ) )
            {
                AI_ACT_SKILL( BattleSkill.Mudo );
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var81 < ( ( 17 + 0x10 ) + 0x10 ) )
        {
            
            if ( var84 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.Mudoon );
                AI_TAR_RND();
                return;
            }
            else if ( var84 < ( 10 + 90 ) )
            {
                AI_ACT_SKILL( BattleSkill.Mudoon );
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var81 < ( ( ( 17 + 0x10 ) + 0x10 ) + 17 ) )
        {
            
            if ( var84 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.EvilTouch );
                AI_TAR_RND();
                return;
            }
            else if ( var84 < ( 10 + 90 ) )
            {
                AI_ACT_SKILL( BattleSkill.EvilTouch );
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var81 < ( ( ( ( 17 + 0x10 ) + 0x10 ) + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.Megidola );
            AI_TAR_RND();
            return;
        }
        else if ( var81 < ( ( ( ( ( 17 + 0x10 ) + 0x10 ) + 17 ) + 17 ) + 17 ) )
        {
            AI_ACT_SKILL( BattleSkill.MindCharge );
            AI_MINE();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Megidola );
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
    {
        
        if ( var82 < 10 )
        {
            AI_ACT_SKILL( BattleSkill.GhastlyWail );
            AI_TAR_RND();
            return;
        }
        else if ( var82 < ( 10 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.MindCharge );
            AI_MINE();
            return;
        }
        else if ( var82 < ( ( 10 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Megidola );
            AI_TAR_RND();
            return;
        }
        else if ( var82 < ( ( ( 10 + 20 ) + 20 ) + 10 ) )
        {
            
            if ( var84 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.Mudoon );
                AI_TAR_RND();
                return;
            }
            else if ( var84 < ( 10 + 90 ) )
            {
                AI_ACT_SKILL( BattleSkill.Mudoon );
                FUNCTION_013D( 1 );
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var82 < ( ( ( ( 10 + 20 ) + 20 ) + 10 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }
        else if ( var82 < ( ( ( ( ( 10 + 20 ) + 20 ) + 10 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.EvilTouch );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
        AI_TAR_RND();
        return;
    }

}


void AI_Nyx_DEATH()
{
    int var85;
    int var86;
    int var87;
    int var88;
    int var89;
    int var90;
    int var91;
    int var92;
    int var93;
    var85 = RNG( 100 );
    var86 = RNG( 100 );
    var87 = RNG( 100 );
    var88 = RNG( 100 );
    var89 = RNG( 100 );
    var90 = RNG( 100 );
    var91 = RNG( 100 );
    var92 = RNG( 100 );
    var93 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x04000000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( FUNCTION_01C7( 0x04000000 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( ( FUNCTION_0033( 80 ) == 1 ) && ( FUNCTION_0033( 50 ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( ( FUNCTION_0033( 50 ) == 1 ) && ( FUNCTION_0033( 25 ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }
    else if ( FUNCTION_0033( 25 ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }

    
    if ( FUNCTION_0033( 25 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }
    else if ( FUNCTION_0033( 25 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }

    
    if ( FUNCTION_008F() == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }
    else if ( FUNCTION_008F() == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }

    
    if ( ( ( ( FUNCTION_0044( 1 ) == 1 ) && ( FUNCTION_0044( 4 ) == 1 ) ) || ( FUNCTION_0044( 0x40 ) == 1 ) ) || ( ( FUNCTION_0044( 0x10 ) == 1 ) && ( FUNCTION_0044( 0x0100 ) == 1 ) ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }
    else if ( ( ( ( ( FUNCTION_0044( 1 ) == 0 ) && ( FUNCTION_0044( 4 ) == 0 ) ) && ( FUNCTION_0044( 0x40 ) == 0 ) ) && ( FUNCTION_0044( 0x10 ) == 0 ) ) && ( FUNCTION_0044( 0x0100 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }

    
    if ( ( ( ( FUNCTION_01C7( 2 ) == 1 ) && ( FUNCTION_01C7( 8 ) == 1 ) ) || ( FUNCTION_01C7( 0x80 ) == 1 ) ) || ( ( FUNCTION_01C7( 0x20 ) == 1 ) && ( FUNCTION_01C7( 0x0200 ) == 1 ) ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
    }
    else if ( ( ( ( ( FUNCTION_01C7( 2 ) == 0 ) && ( FUNCTION_01C7( 8 ) == 0 ) ) && ( FUNCTION_01C7( 0x80 ) == 0 ) ) && ( FUNCTION_01C7( 0x20 ) == 0 ) ) && ( FUNCTION_01C7( 0x0200 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
    }

    
    if ( ( FUNCTION_0057( 223 ) == 1 ) || ( FUNCTION_0057( 212 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
    }
    else if ( ( FUNCTION_0057( 223 ) == 0 ) && ( FUNCTION_0057( 212 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
    }

    
    if ( FUNCTION_0057( 220 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
    }
    else if ( FUNCTION_0057( 220 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
    }

    
    if ( FUNCTION_0057( 221 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
    }
    else if ( FUNCTION_0057( 221 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) );
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) ) == 1 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) );
    }

    
    if ( FUNCTION_0182() == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) );
    }

    
    if ( FUNCTION_0182() == 1 )
    {
        AI_Nyx_DEATH_Turn();
        return;
    }

    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) ) && ( FUNCTION_0182() == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
        NYX_YAMIYO();
        FUNCTION_017F();
        AI_MINE();
        return;
    }

    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( FUNCTION_0182() == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
        NYX_YAMIYO();
        FUNCTION_017F();
        AI_MINE();
        return;
    }

    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( FUNCTION_0182() == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
        NYX_YAMIYO();
        FUNCTION_017F();
        AI_MINE();
        return;
    }

    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 0 ) )
    {
        
        if ( var85 < 20 )
        {
            
            if ( FUNCTION_0057( 3 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Agidyne );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0057( 3 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var85 < ( 20 + 20 ) )
        {
            
            if ( FUNCTION_0057( 21 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Bufudyne );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0057( 21 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var85 < ( ( 20 + 20 ) + 20 ) )
        {
            
            if ( FUNCTION_0057( 30 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0057( 30 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var85 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
        {
            
            if ( FUNCTION_0057( 12 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0057( 12 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var85 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 20 ) )
        {
            
            if ( ( FUNCTION_0057( 69 ) == 0 ) && ( FUNCTION_0040( 0x80 ) == 0 ) )
            {
                AI_ACT_SKILL( BattleSkill.PoisonMist69 );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0057( 69 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0040( 0x80 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }

    }
    else if ( ( FUNCTION_0033( 80 ) == 1 ) && ( FUNCTION_0033( 25 ) == 0 ) )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 1 )
        {
            
            if ( var91 < 25 )
            {
                AI_ACT_SKILL( BattleSkill.Agidyne );
                AI_TAR_RND();
                return;
            }
            else if ( var91 < ( 25 + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.Bufudyne );
                AI_TAR_RND();
                return;
            }
            else if ( var91 < ( ( 25 + 25 ) + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_TAR_RND();
                return;
            }
            else if ( var91 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_TAR_RND();
                return;
            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 )
        {
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) ) == 1 )
            {
                
                if ( var93 < 30 )
                {
                    AI_ACT_SKILL( BattleSkill.Dekunda );
                    AI_MINE();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) ) == 1 )
            {
                
                if ( var92 < 30 )
                {
                    AI_ACT_SKILL( BattleSkill.Dekaja );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var89 < 40 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) ) == 1 )
                {
                    NYX_YAMIYO();
                    FUNCTION_017F();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var89 < ( 40 + 60 ) )
            {
                
                if ( var86 < 17 )
                {
                    
                    if ( FUNCTION_0057( 3 ) == 0 )
                    {
                        AI_ACT_SKILL( BattleSkill.Agidyne );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( FUNCTION_0057( 3 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var86 < ( 17 + 17 ) )
                {
                    
                    if ( FUNCTION_0057( 21 ) == 0 )
                    {
                        AI_ACT_SKILL( BattleSkill.Bufudyne );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( FUNCTION_0057( 21 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var86 < ( ( 17 + 17 ) + 17 ) )
                {
                    
                    if ( FUNCTION_0057( 30 ) == 0 )
                    {
                        AI_ACT_SKILL( BattleSkill.Ziodyne );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( FUNCTION_0057( 30 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var86 < ( ( ( 17 + 17 ) + 17 ) + 17 ) )
                {
                    
                    if ( FUNCTION_0057( 12 ) == 0 )
                    {
                        AI_ACT_SKILL( BattleSkill.Garudyne );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( FUNCTION_0057( 12 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var86 < ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 0x10 ) )
                {
                    
                    if ( FUNCTION_0057( 12 ) == 0 )
                    {
                        AI_ACT_SKILL( BattleSkill.Garudyne );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( FUNCTION_0057( 12 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var86 < ( ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 0x10 ) + 0x10 ) )
                {
                    
                    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.MindCharge );
                        AI_MINE();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }

                }

            }

        }

    }
    else if ( FUNCTION_0033( 25 ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 1 )
        {
            
            if ( var91 < 25 )
            {
                AI_ACT_SKILL( BattleSkill.Agidyne );
                AI_TAR_RND();
                return;
            }
            else if ( var91 < ( 25 + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.Bufudyne );
                AI_TAR_RND();
                return;
            }
            else if ( var91 < ( ( 25 + 25 ) + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_TAR_RND();
                return;
            }
            else if ( var91 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_TAR_RND();
                return;
            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 )
        {
            
            if ( var90 < 15 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) ) == 1 )
                {
                    NYX_YAMIYO();
                    FUNCTION_017F();
                    AI_TAR_RND();
                    return;
                }
                else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) ) == 0 )
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var90 < ( 15 + 45 ) )
            {
                
                if ( FUNCTION_0057( 319 ) == 0 )
                {
                    NYX_YORUNO();
                    AI_ACT_SKILL( BattleSkill.NightQueen );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var90 < ( ( 15 + 45 ) + 40 ) )
            {
                
                if ( var87 < 15 )
                {
                    
                    if ( FUNCTION_0057( 6 ) == 0 )
                    {
                        AI_ACT_SKILL( BattleSkill.Maragidyne6 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( FUNCTION_0057( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.Agidyne );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var87 < ( 15 + 14 ) )
                {
                    
                    if ( FUNCTION_0057( 24 ) == 0 )
                    {
                        AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( FUNCTION_0057( 24 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.Bufudyne );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var87 < ( ( 15 + 14 ) + 14 ) )
                {
                    
                    if ( FUNCTION_0057( 33 ) == 0 )
                    {
                        AI_ACT_SKILL( BattleSkill.Maziodyne33 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( FUNCTION_0057( 33 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.Ziodyne );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var87 < ( ( ( 15 + 14 ) + 14 ) + 14 ) )
                {
                    
                    if ( FUNCTION_0057( 15 ) == 0 )
                    {
                        AI_ACT_SKILL( BattleSkill.Magarudyne15 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( FUNCTION_0057( 15 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.Garudyne );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var87 < ( ( ( ( 15 + 14 ) + 14 ) + 14 ) + 15 ) )
                {
                    
                    if ( FUNCTION_0057( 38 ) == 0 )
                    {
                        AI_ACT_SKILL( BattleSkill.Megidola );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( var87 < ( ( ( ( ( 15 + 14 ) + 14 ) + 14 ) + 15 ) + 14 ) )
                {
                    AI_ACT_SKILL( BattleSkill.PowerCharge );
                    AI_MINE();
                    return;
                }
                else if ( var87 < ( ( ( ( ( ( 15 + 14 ) + 14 ) + 14 ) + 15 ) + 14 ) + 14 ) )
                {
                    AI_ACT_SKILL( BattleSkill.MindCharge );
                    AI_MINE();
                    return;
                }

            }

        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_Nyx_DEATH_Dress()
{
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 )
    {
        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
        AI_TAR_RND();
        return;
    }

}


void AI_Nyx_DEATH_Turn()
{
    int var94;
    int var95;
    int var96;
    int var97;
    int var98;
    var94 = RNG( 100 );
    var95 = RNG( 100 );
    var96 = RNG( 100 );
    var97 = RNG( 100 );
    var98 = RNG( 100 );
    
    if ( ( ( FUNCTION_004D( 3 ) == 1 ) || ( FUNCTION_004F( 3 ) == 1 ) ) || ( FUNCTION_0051( 3 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 482 ) );
    }
    else if ( ( ( FUNCTION_004D( 3 ) == 0 ) && ( FUNCTION_004F( 3 ) == 0 ) ) && ( FUNCTION_0051( 3 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 482 ) );
    }

    
    if ( ( ( FUNCTION_004D( 4 ) == 1 ) || ( FUNCTION_004F( 4 ) == 1 ) ) || ( FUNCTION_0051( 4 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 483 ) );
    }
    else if ( ( ( FUNCTION_004D( 4 ) == 0 ) && ( FUNCTION_004F( 4 ) == 0 ) ) && ( FUNCTION_0051( 4 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 483 ) );
    }

    
    if ( ( ( FUNCTION_004D( 5 ) == 1 ) || ( FUNCTION_004F( 5 ) == 1 ) ) || ( FUNCTION_0051( 5 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 484 ) );
    }
    else if ( ( ( FUNCTION_004D( 5 ) == 0 ) && ( FUNCTION_004F( 5 ) == 0 ) ) && ( FUNCTION_0051( 5 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 484 ) );
    }

    
    if ( ( ( FUNCTION_004D( 6 ) == 1 ) || ( FUNCTION_004F( 6 ) == 1 ) ) || ( FUNCTION_0051( 6 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 485 ) );
    }
    else if ( ( ( FUNCTION_004D( 6 ) == 0 ) && ( FUNCTION_004F( 6 ) == 0 ) ) && ( FUNCTION_0051( 6 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 485 ) );
    }

    
    if ( ( FUNCTION_01C7( 1 ) == 1 ) && ( FUNCTION_01C7( 4 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 486 ) );
    }
    else if ( ( FUNCTION_01C7( 1 ) == 0 ) && ( FUNCTION_01C7( 4 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 486 ) );
    }

    
    if ( FUNCTION_01C7( 0x40 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 487 ) );
    }
    else if ( FUNCTION_01C7( 0x40 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 487 ) );
    }

    
    if ( ( FUNCTION_01C7( 0x10 ) == 1 ) && ( FUNCTION_01C7( 0x0100 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 488 ) );
    }
    else if ( ( FUNCTION_01C7( 0x10 ) == 0 ) && ( FUNCTION_01C7( 0x0100 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 488 ) );
    }

    
    if ( FUNCTION_0040( 0x80 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 489 ) );
    }
    else if ( FUNCTION_0040( 0x80 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 489 ) );
    }

    
    if ( FUNCTION_0040( 8 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 490 ) );
    }
    else if ( FUNCTION_0040( 8 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 490 ) );
    }

    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 482 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 483 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 484 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 485 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 491 ) );
    }
    else if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 482 ) ) == 1 ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 483 ) ) == 1 ) ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 484 ) ) == 1 ) ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 485 ) ) == 1 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 491 ) );
    }

    
    if ( ( FUNCTION_0044( 2 ) == 1 ) && ( FUNCTION_0044( 8 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 492 ) );
    }
    else if ( ( FUNCTION_0044( 2 ) == 0 ) && ( FUNCTION_0044( 8 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 492 ) );
    }

    
    if ( FUNCTION_0044( 0x80 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 493 ) );
    }
    else if ( FUNCTION_0044( 0x80 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 493 ) );
    }

    
    if ( ( FUNCTION_0044( 0x20 ) == 1 ) && ( FUNCTION_0044( 0x0200 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 494 ) );
    }
    else if ( ( FUNCTION_0044( 0x20 ) == 0 ) && ( FUNCTION_0044( 0x0200 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 494 ) );
    }

    
    if ( FUNCTION_01C5() == 4 )
    {
        FUNCTION_0180();
        AI_MINE();
        return;
    }

    
    if ( var94 < 25 )
    {
        
        if ( var95 < 20 )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_TAR_RND();
            return;
        }
        else if ( var95 < ( 20 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_TAR_RND();
            return;
        }
        else if ( var95 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_TAR_RND();
            return;
        }
        else if ( var95 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
        }

    }
    else if ( var94 < ( 25 + 25 ) )
    {
        
        if ( var96 < 17 )
        {
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 486 ) ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Tarukaja );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var96 < ( 17 + 17 ) )
        {
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 487 ) ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Rakukaja );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var96 < ( ( 17 + 17 ) + 17 ) )
        {
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 488 ) ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Sukukaja );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var96 < ( ( ( 17 + 17 ) + 17 ) + 17 ) )
        {
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 492 ) ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Matarunda );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var96 < ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 0x10 ) )
        {
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 493 ) ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Marakunda );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var96 < ( ( ( ( ( 17 + 17 ) + 17 ) + 17 ) + 0x10 ) + 0x10 ) )
        {
            
            if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 494 ) ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Masukunda );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else if ( var94 < ( ( 25 + 25 ) + 25 ) )
    {
        
        if ( var97 < 50 )
        {
            
            if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 489 ) ) == 0 ) && ( FUNCTION_0057( 69 ) == 0 ) )
            {
                AI_ACT_SKILL( BattleSkill.PoisonMist69 );
                AI_TAR_RND();
                return;
            }
            else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 489 ) ) == 1 )
            {
                AI_ACT_WAIT();
                AI_MINE();
                return;
            }
            else if ( FUNCTION_0057( 69 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var97 < ( 50 + 50 ) )
        {
            
            if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 490 ) ) == 0 ) && ( FUNCTION_0057( 0x40 ) == 0 ) )
            {
                AI_ACT_SKILL( BattleSkill.EvilSmile64 );
                AI_TAR_RND();
                return;
            }
            else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 490 ) ) == 1 )
            {
                AI_ACT_WAIT();
                AI_MINE();
                return;
            }
            else if ( FUNCTION_0057( 0x40 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                AI_TAR_RND();
                return;
            }

        }

    }
    else if ( var94 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 491 ) ) == 0 )
        {
            
            if ( var98 < 25 )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 482 ) ) == 1 )
                {
                    
                    if ( FUNCTION_004D( 3 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.FireBreak );
                        AI_HANSYA( 3 );
                        return;
                    }
                    else if ( FUNCTION_004F( 3 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.FireBreak );
                        AI_KYUSYU( 3 );
                        return;
                    }
                    else if ( FUNCTION_0051( 3 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.FireBreak );
                        AI_MUKOU( 3 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_WAIT();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var98 < ( 25 + 25 ) )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 483 ) ) == 1 )
                {
                    
                    if ( FUNCTION_004D( 4 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.IceBreak );
                        AI_HANSYA( 4 );
                        return;
                    }
                    else if ( FUNCTION_004F( 4 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.IceBreak );
                        AI_KYUSYU( 4 );
                        return;
                    }
                    else if ( FUNCTION_0051( 4 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.IceBreak );
                        AI_MUKOU( 4 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_WAIT();
                        AI_MINE();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var98 < ( ( 25 + 25 ) + 25 ) )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 484 ) ) == 1 )
                {
                    
                    if ( FUNCTION_004D( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.ElecBreak );
                        AI_HANSYA( 5 );
                        return;
                    }
                    else if ( FUNCTION_004F( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.ElecBreak );
                        AI_KYUSYU( 5 );
                        return;
                    }
                    else if ( FUNCTION_0051( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.ElecBreak );
                        AI_MUKOU( 5 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_WAIT();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var98 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
            {
                
                if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 485 ) ) == 1 )
                {
                    
                    if ( FUNCTION_004D( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.WindBreak );
                        AI_HANSYA( 6 );
                        return;
                    }
                    else if ( FUNCTION_004F( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.WindBreak );
                        AI_KYUSYU( 6 );
                        return;
                    }
                    else if ( FUNCTION_0051( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.WindBreak );
                        AI_MUKOU( 6 );
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
                    AI_TAR_RND();
                    return;
                }

            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 491 ) ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.AlmightyAttack395 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Agi );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_Nyx2()
{
    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
        AI_ACT_SKILL( BattleSkill.Death96 );
        AI_TAR_RND();
        return;
    }
    else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
        AI_ACT_SKILL( BattleSkill.Death99 );
        AI_TAR_RND();
        return;
    }
    else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
        AI_ACT_SKILL( BattleSkill.Death100 );
        AI_TAR_RND();
        return;
    }
    else if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
        AI_ACT_SKILL( BattleSkill.Death101 );
        AI_TAR_RND();
        return;
    }

}


void AI_KILLER()
{
    int var99;
    int var100;
    int var101;
    int var102;
    var99 = RNG( 100 );
    var100 = RNG( 100 );
    var101 = RNG( 100 );
    var102 = RNG( 100 );
    
    if ( ( FUNCTION_0044( 0x00010000 ) == 1 ) || ( FUNCTION_0044( 0x00020000 ) == 1 ) )
    {
        AI_ACT_SKILL( BattleSkill.Megidolaon39 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( var101 < 25 )
        {
            
            if ( var99 < 15 )
            {
                AI_ACT_SKILL( BattleSkill.Maragidyne6 );
                AI_TAR_RND();
                return;
            }
            else if ( var99 < ( 15 + 15 ) )
            {
                AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
                AI_TAR_RND();
                return;
            }
            else if ( var99 < ( ( 15 + 15 ) + 15 ) )
            {
                AI_ACT_SKILL( BattleSkill.Maziodyne33 );
                AI_TAR_RND();
                return;
            }
            else if ( var99 < ( ( ( 15 + 15 ) + 15 ) + 15 ) )
            {
                AI_ACT_SKILL( BattleSkill.Magarudyne15 );
                AI_TAR_RND();
                return;
            }
            else if ( var99 < ( ( ( ( 15 + 15 ) + 15 ) + 15 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.MyriadArrows );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.VileAssault );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var101 < ( 25 + 25 ) )
        {
            
            if ( FUNCTION_004D( 3 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.FireBreak );
                AI_HANSYA( 3 );
                return;
            }
            else if ( FUNCTION_004F( 3 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.FireBreak );
                AI_KYUSYU( 3 );
                return;
            }
            else if ( FUNCTION_0051( 3 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.FireBreak );
                AI_MUKOU( 3 );
                return;
            }
            else if ( FUNCTION_004D( 4 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.IceBreak );
                AI_HANSYA( 4 );
                return;
            }
            else if ( FUNCTION_004F( 4 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.IceBreak );
                AI_KYUSYU( 4 );
                return;
            }
            else if ( FUNCTION_0051( 4 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.IceBreak );
                AI_MUKOU( 4 );
                return;
            }
            else if ( FUNCTION_004D( 5 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.ElecBreak );
                AI_HANSYA( 5 );
                return;
            }
            else if ( FUNCTION_004F( 5 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.ElecBreak );
                AI_KYUSYU( 5 );
                return;
            }
            else if ( FUNCTION_0051( 5 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.ElecBreak );
                AI_MUKOU( 5 );
                return;
            }
            else if ( FUNCTION_004D( 6 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.WindBreak );
                AI_HANSYA( 6 );
                return;
            }
            else if ( FUNCTION_004F( 6 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.WindBreak );
                AI_KYUSYU( 6 );
                return;
            }
            else if ( FUNCTION_0051( 6 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.WindBreak );
                AI_MUKOU( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.MindCharge );
                AI_MINE();
                return;
            }

        }
        else if ( var101 < ( ( 25 + 25 ) + 25 ) )
        {
            
            if ( var102 < 50 )
            {
                AI_ACT_SKILL( BattleSkill.Mudoon );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Hamaon );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var101 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            
            if ( AI_ENWEAK_PAI( 3 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Agidyne );
                AI_WEAK( 3 );
                return;
            }
            else if ( AI_ENWEAK_PAI( 4 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Bufudyne );
                AI_WEAK( 4 );
                return;
            }
            else if ( AI_ENWEAK_PAI( 5 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_WEAK( 5 );
                return;
            }
            else if ( AI_ENWEAK_PAI( 6 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_WEAK( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Megidola );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        
        if ( var101 < 25 )
        {
            
            if ( var100 < 15 )
            {
                AI_ACT_SKILL( BattleSkill.Megidolaon39 );
                AI_TAR_RND();
                return;
            }
            else if ( var100 < ( 15 + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.MyriadArrows );
                AI_TAR_RND();
                return;
            }
            else if ( var100 < ( ( 15 + 20 ) + 15 ) )
            {
                AI_ACT_SKILL( BattleSkill.VileAssault );
                AI_TAR_RND();
                return;
            }
            else if ( var100 < ( ( ( 15 + 20 ) + 15 ) + 15 ) )
            {
                AI_ACT_SKILL( BattleSkill.Mamudoon54 );
                AI_TAR_RND();
                return;
            }
            else if ( var100 < ( ( ( ( 15 + 20 ) + 15 ) + 15 ) + 10 ) )
            {
                AI_ACT_SKILL( BattleSkill.LifeDrain93 );
                AI_TAR_RND();
                return;
            }
            else if ( var100 < ( ( ( ( ( 15 + 20 ) + 15 ) + 15 ) + 10 ) + 10 ) )
            {
                AI_ACT_SKILL( BattleSkill.SpiritDrain76 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.VorpalBladeJourney );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var101 < ( 25 + 25 ) )
        {
            
            if ( FUNCTION_004D( 3 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.FireBreak );
                AI_HANSYA( 3 );
                return;
            }
            else if ( FUNCTION_004F( 3 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.FireBreak );
                AI_KYUSYU( 3 );
                return;
            }
            else if ( FUNCTION_0051( 3 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.FireBreak );
                AI_MUKOU( 3 );
                return;
            }
            else if ( FUNCTION_004D( 4 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.IceBreak );
                AI_HANSYA( 4 );
                return;
            }
            else if ( FUNCTION_004F( 4 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.IceBreak );
                AI_KYUSYU( 4 );
                return;
            }
            else if ( FUNCTION_0051( 4 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.IceBreak );
                AI_MUKOU( 4 );
                return;
            }
            else if ( FUNCTION_004D( 5 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.ElecBreak );
                AI_HANSYA( 5 );
                return;
            }
            else if ( FUNCTION_004F( 5 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.ElecBreak );
                AI_KYUSYU( 5 );
                return;
            }
            else if ( FUNCTION_0051( 5 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.ElecBreak );
                AI_MUKOU( 5 );
                return;
            }
            else if ( FUNCTION_004D( 6 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.WindBreak );
                AI_HANSYA( 6 );
                return;
            }
            else if ( FUNCTION_004F( 6 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.WindBreak );
                AI_KYUSYU( 6 );
                return;
            }
            else if ( FUNCTION_0051( 6 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.WindBreak );
                AI_MUKOU( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.MindCharge );
                AI_MINE();
                return;
            }

        }
        else if ( var101 < ( ( 25 + 25 ) + 25 ) )
        {
            
            if ( var102 < 50 )
            {
                AI_ACT_SKILL( BattleSkill.Mamudoon54 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Mahamaon48 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var101 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            
            if ( AI_ENWEAK_PAI( 3 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Agidyne );
                AI_WEAK( 3 );
                return;
            }
            else if ( AI_ENWEAK_PAI( 4 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Bufudyne );
                AI_WEAK( 4 );
                return;
            }
            else if ( AI_ENWEAK_PAI( 5 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_WEAK( 5 );
                return;
            }
            else if ( AI_ENWEAK_PAI( 6 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_WEAK( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Megidola );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_ELIZABETH()
{
    int var103;
    
    if ( ( ( FUNCTION_0051( 0 ) == 1 ) || ( FUNCTION_004D( 0 ) == 1 ) ) || ( FUNCTION_004F( 0 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( ( ( FUNCTION_0051( 0 ) == 0 ) && ( FUNCTION_004D( 0 ) == 0 ) ) && ( FUNCTION_004F( 0 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( ( ( FUNCTION_0051( 1 ) == 1 ) || ( FUNCTION_004D( 1 ) == 1 ) ) || ( FUNCTION_004F( 1 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( ( ( FUNCTION_0051( 1 ) == 0 ) && ( FUNCTION_004D( 1 ) == 0 ) ) && ( FUNCTION_004F( 1 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( ( ( FUNCTION_0051( 2 ) == 1 ) || ( FUNCTION_004D( 2 ) == 1 ) ) || ( FUNCTION_004F( 2 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( ( ( FUNCTION_0051( 2 ) == 0 ) && ( FUNCTION_004D( 2 ) == 0 ) ) && ( FUNCTION_004F( 2 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( ( ( FUNCTION_0051( 3 ) == 1 ) || ( FUNCTION_004D( 3 ) == 1 ) ) || ( FUNCTION_004F( 3 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }
    else if ( ( ( FUNCTION_0051( 3 ) == 0 ) && ( FUNCTION_004D( 3 ) == 0 ) ) && ( FUNCTION_004F( 3 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }

    
    if ( ( ( FUNCTION_0051( 4 ) == 1 ) || ( FUNCTION_004D( 4 ) == 1 ) ) || ( FUNCTION_004F( 4 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }
    else if ( ( ( FUNCTION_0051( 4 ) == 0 ) && ( FUNCTION_004D( 4 ) == 0 ) ) && ( FUNCTION_004F( 4 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }

    
    if ( ( ( FUNCTION_0051( 5 ) == 1 ) || ( FUNCTION_004D( 5 ) == 1 ) ) || ( FUNCTION_004F( 5 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }
    else if ( ( ( FUNCTION_0051( 5 ) == 0 ) && ( FUNCTION_004D( 5 ) == 0 ) ) && ( FUNCTION_004F( 5 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }

    
    if ( ( ( FUNCTION_0051( 6 ) == 1 ) || ( FUNCTION_004D( 6 ) == 1 ) ) || ( FUNCTION_004F( 6 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }
    else if ( ( ( FUNCTION_0051( 6 ) == 0 ) && ( FUNCTION_004D( 6 ) == 0 ) ) && ( FUNCTION_004F( 6 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }

    
    if ( ( ( FUNCTION_0051( 8 ) == 1 ) || ( FUNCTION_004D( 8 ) == 1 ) ) || ( FUNCTION_004F( 8 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
    }
    else if ( ( ( FUNCTION_0051( 8 ) == 0 ) && ( FUNCTION_004D( 8 ) == 0 ) ) && ( FUNCTION_004F( 8 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
    }

    
    if ( ( ( FUNCTION_0051( 9 ) == 1 ) || ( FUNCTION_004D( 9 ) == 1 ) ) || ( FUNCTION_004F( 9 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
    }
    else if ( ( ( FUNCTION_0051( 9 ) == 0 ) && ( FUNCTION_004D( 9 ) == 0 ) ) && ( FUNCTION_004F( 9 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
    }

    var103 = 0;
    
    if ( FUNCTION_01DE() == 1 )
    {
        var103 = FUNCTION_0192( 1 );
        var103 = ( var103 + 1 );
        FUNCTION_0193( 1, var103 );
    }

    
    if ( var103 > 100 )
    {
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( ( ( ( ( ( ( ( AI_CHK_PLAYER_ID( BattleUnit.Yukari ) == 1 ) || ( AI_CHK_PLAYER_ID( BattleUnit.Aigis ) == 1 ) ) || ( AI_CHK_PLAYER_ID( BattleUnit.Mitsuru ) == 1 ) ) || ( AI_CHK_PLAYER_ID( BattleUnit.Junpei ) == 1 ) ) || ( AI_CHK_PLAYER_ID( BattleUnit.Akihiko ) == 1 ) ) || ( AI_CHK_PLAYER_ID( BattleUnit.Ken ) == 1 ) ) || ( AI_CHK_PLAYER_ID( BattleUnit.ShinjiroMetis ) == 1 ) ) || ( AI_CHK_PLAYER_ID( BattleUnit.Koromaru ) == 1 ) )
    {
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( ( FUNCTION_0059( 278 ) == 1 ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( ( ( FUNCTION_0044( 0x00010000 ) == 1 ) || ( FUNCTION_0044( 0x00020000 ) == 1 ) ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( ( FUNCTION_0033( 50 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) );
        AI_ELIZABETH_STOJKOVIC2();
        return;
    }

    
    if ( FUNCTION_0033( 30 ) == 1 )
    {
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( ( FUNCTION_01DE() == 1 ) && ( FUNCTION_008F() == 0 ) )
    {
        
        if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else 
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }

    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 )
    {
        AI_ELIZABETH_SURUTO();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 )
    {
        AI_ELIZABETH_JACK();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 1 )
    {
        AI_ELIZABETH_TORU();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 1 )
    {
        AI_ELIZABETH_KUR();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 1 )
    {
        AI_ELIZABETH_META();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 1 )
    {
        AI_ELIZABETH_ARISU();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 1 )
    {
        AI_ELIZABETH_NEVI();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 1 )
    {
        AI_ELIZABETH_MASA();
        return;
    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

    AI_ACT_WAIT();
}


void AI_ELIZABETH_SURUTO()
{
    int var104;
    var104 = RNG( 100 );
    FUNCTION_011E( 207 );
    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) )
    {
        
        if ( var104 < 55 )
        {
            AI_ACT_PERSONA( 48, 80 );
            AI_TAR_RND();
            return;
        }
        else if ( var104 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var104 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_JACK()
{
    int var105;
    var105 = RNG( 100 );
    FUNCTION_011E( 208 );
    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 0 ) )
    {
        
        if ( var105 < 55 )
        {
            AI_ACT_PERSONA( 7, 82 );
            AI_TAR_RND();
            return;
        }
        else if ( var105 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var105 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_TORU()
{
    int var106;
    var106 = RNG( 100 );
    FUNCTION_011E( 209 );
    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 0 ) )
    {
        
        if ( var106 < 55 )
        {
            AI_ACT_PERSONA( 77, 83 );
            AI_TAR_RND();
            return;
        }
        else if ( var106 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var106 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_KUR()
{
    int var107;
    var107 = RNG( 100 );
    FUNCTION_011E( 210 );
    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) ) == 0 ) )
    {
        
        if ( var107 < 55 )
        {
            AI_ACT_PERSONA( 11, 81 );
            AI_TAR_RND();
            return;
        }
        else if ( var107 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var107 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_META()
{
    int var108;
    var108 = RNG( 100 );
    FUNCTION_011E( 211 );
    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) ) == 0 ) )
    {
        
        if ( var108 < 55 )
        {
            AI_ACT_PERSONA( 140, 85 );
            AI_TAR_RND();
            return;
        }
        else if ( var108 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var108 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_ARISU()
{
    int var109;
    var109 = RNG( 100 );
    FUNCTION_011E( 212 );
    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) ) == 0 ) )
    {
        
        if ( var109 < 55 )
        {
            AI_ACT_PERSONA( 91, 86 );
            AI_TAR_RND();
            return;
        }
        else if ( var109 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var109 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_NEVI()
{
    int var110;
    var110 = RNG( 100 );
    FUNCTION_011E( 213 );
    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
    {
        
        if ( var110 < 15 )
        {
            AI_ACT_PERSONA( 0x40, 87 );
            AI_TAR_RND();
            return;
        }
        else if ( var110 < 30 )
        {
            AI_ACT_PERSONA( 0x40, 88 );
            AI_TAR_RND();
            return;
        }
        else if ( var110 < 45 )
        {
            AI_ACT_PERSONA( 0x40, 89 );
            AI_TAR_RND();
            return;
        }
        else if ( var110 < 60 )
        {
            AI_ACT_PERSONA( 0x40, 90 );
            AI_TAR_RND();
            return;
        }
        else if ( var110 < 75 )
        {
            AI_ACT_PERSONA( 0x40, 91 );
            AI_TAR_RND();
            return;
        }
        else if ( var110 < 82 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var110 < 90 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_MASA()
{
    FUNCTION_011E( 214 );
    AI_ACT_PERSONA( 113, 84 );
    AI_TAR_RND();
}


void AI_ELIZABETH_MASA2()
{
    FUNCTION_011E( 214 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 510 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 510 ) );
        AI_ACT_PERSONA( 113, 84 );
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 510 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 510 ) );
        FUNCTION_01D2( 224 );
        AI_TAR_RND();
        return;
    }

}


void AI_ELIZABETH_STOJKOVIC()
{
    FUNCTION_011E( 215 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 511 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 511 ) );
        AI_ACT_PERSONA( 46, 194 );
        AI_MINE();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 511 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 511 ) );
        AI_ACT_PERSONA( 46, 84 );
        AI_TAR_RND();
        return;
    }

}


void AI_ELIZABETH_STOJKOVIC2()
{
    FUNCTION_011E( 215 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 509 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 509 ) );
        AI_ACT_PERSONA( 46, 194 );
        AI_MINE();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 509 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 509 ) );
        FUNCTION_01D2( 224 );
        AI_TAR_RND();
        return;
    }

}


void AI_DEBUG()
{
    
    if ( FUNCTION_003B( 4 ) == 1 )
    {
        AI_MYAI( 1 );
        return;
    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_OSHIETE_MAYA()
{
    int var111;
    var111 = RNG( 100 );
    
    if ( FUNCTION_0158( 1, 20 ) == 1 )
    {
        
        if ( var111 < 50 )
        {
            FUNCTION_01D2( 218 );
            AI_MINE();
            return;
        }
        else if ( var111 < ( 50 + 50 ) )
        {
            
            if ( ( AI_CHK_PLAYER_ID( BattleUnit.Yukari ) == 1 ) || ( AI_CHK_PLAYER_ID( BattleUnit.Junpei ) == 1 ) )
            {
                AI_ACT_WEAPON();
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                FUNCTION_01D2( 218 );
                AI_MINE();
                return;
            }

        }

    }
    else if ( FUNCTION_0158( 1, 20 ) == 0 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Eagle()
{
    int var112;
    int var113;
    int var114;
    var112 = RNG( 100 );
    var113 = RNG( 100 );
    var114 = RNG( 100 );
    
    if ( var112 < 25 )
    {
        AI_ACT_SKILL( BattleSkill.Garu );
        AI_TAR_RND();
    }
    else if ( var112 < ( 25 + 45 ) )
    {
        
        if ( FUNCTION_0057( 13 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Garu );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var112 < ( ( 25 + 45 ) + 30 ) )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_HENYOU()
{
    int var115;
    int var116;
    var115 = RNG( 100 );
    var116 = RNG( 100 );
    
    if ( FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( var115 < 20 )
        {
            AI_ACT_SKILL( BattleSkill.Garula );
            AI_TAR_RND();
            return;
        }
        else if ( var115 < ( 20 + 35 ) )
        {
            AI_ACT_SKILL( BattleSkill.Magarula );
            AI_TAR_RND();
        }
        else if ( var115 < ( ( 20 + 35 ) + 10 ) )
        {
            
            if ( FUNCTION_01C7( 0x80 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Dekunda );
                AI_MINE();
                return;
            }
            else if ( FUNCTION_01C7( 0x40 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Rakukaja );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( var115 < ( ( ( 20 + 35 ) + 10 ) + 5 ) )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var115 < ( ( ( ( 20 + 35 ) + 10 ) + 5 ) + 30 ) )
        {
            
            if ( FUNCTION_0040( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.PoisonMist69 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Garula );
                AI_TAR_RND();
                return;
            }

        }

    }
    else if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( var116 < 10 )
        {
            
            if ( FUNCTION_0057( 192 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Dia );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( var116 < ( 10 + 5 ) )
        {
            
            if ( FUNCTION_01C7( 0x80 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Dekunda );
                AI_MINE();
                return;
            }
            else if ( FUNCTION_01C7( 0x40 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Rakukaja );
                AI_MINE();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Magarula );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var116 < ( ( 10 + 5 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garula );
            AI_TAR_RND();
            return;
        }
        else if ( var116 < ( ( ( 10 + 5 ) + 25 ) + 35 ) )
        {
            AI_ACT_SKILL( BattleSkill.Magarula );
            AI_TAR_RND();
            return;
        }
        else if ( var116 < ( ( ( ( 10 + 5 ) + 25 ) + 35 ) + 20 ) )
        {
            
            if ( FUNCTION_0040( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.PoisonMist69 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( var116 < ( ( ( ( ( 10 + 5 ) + 25 ) + 35 ) + 20 ) + 5 ) )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_KING()
{
    int var117;
    var117 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Megido );
        AI_TAR_RND();
        return;
    }

    
    if ( var117 < 10 )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.EvilTouch );
            AI_NOTBAD( 8 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Hamaon );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var117 < ( 10 + 20 ) )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.EvilSmile64 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.MindCharge );
            AI_MINE();
            return;
        }

    }
    else if ( var117 < ( ( 10 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.MindCharge );
        AI_MINE();
        return;
    }
    else if ( var117 < ( ( ( 10 + 20 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Hamaon );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.Mahamaon48 );
        AI_TAR_RND();
        return;
    }

}


void AI_DANCING_KAI()
{
    int var118;
    int var119;
    var118 = RNG( 100 );
    var119 = RNG( 100 );
    
    if ( FUNCTION_0033( 60 ) == 0 )
    {
        
        if ( var118 < 30 )
        {
            AI_ACT_SKILL( BattleSkill.Zio );
            AI_NOTBAD( 0x00100000 );
            return;
        }
        else if ( var118 < ( 30 + 30 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufu );
            AI_NOTBAD( 0x00100000 );
            return;
        }
        else if ( var118 < ( ( 30 + 30 ) + 30 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agi );
            AI_NOTBAD( 0x00100000 );
            return;
        }
        else if ( var118 < ( ( ( 30 + 30 ) + 30 ) + 10 ) )
        {
            
            if ( FUNCTION_0040( 4 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Tentarafoo62 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Agi );
                AI_NOTBAD( 0x00100000 );
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 60 ) == 1 )
    {
        
        if ( var119 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.Magaru );
            AI_TAR_RND();
            return;
        }
        else if ( var119 < ( 50 + 5 ) )
        {
            AI_ACT_SKILL( BattleSkill.Dia );
            AI_HPMIN();
            return;
        }
        else if ( var119 < ( ( 50 + 5 ) + 15 ) )
        {
            AI_ACT_SKILL( BattleSkill.Zio );
            AI_TAR_RND();
            return;
        }
        else if ( var119 < ( ( ( 50 + 5 ) + 15 ) + 15 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufu );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Agi );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_NAKU_KAI()
{
    int var120;
    int var121;
    var120 = RNG( 100 );
    var121 = RNG( 100 );
    
    if ( FUNCTION_008F() == 0 )
    {
        
        if ( var120 < 30 )
        {
            AI_ACT_SKILL( BattleSkill.Maragi );
            AI_TAR_RND();
            return;
        }
        else if ( var120 < ( 30 + 50 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agilao );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0040( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Poisma );
            AI_NOTBAD( 0x80 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Maragi );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_008F() == 1 )
    {
        
        if ( var121 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.MightySwing );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.TorrentShot );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_GOUKI_KAI()
{
    int var122;
    int var123;
    var122 = RNG( 100 );
    var123 = RNG( 100 );
    
    if ( FUNCTION_0047() == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Tarukaja );
        AI_MINE();
        return;
    }

    
    if ( FUNCTION_01C7( 1 ) == 1 )
    {
        
        if ( var123 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.KillRush );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_01C7( 1 ) == 0 )
    {
        
        if ( var122 < 40 )
        {
            AI_ACT_SKILL( BattleSkill.Tarukaja );
            AI_MINE();
            return;
        }
        else if ( var122 < ( 40 + 20 ) )
        {
            
            if ( FUNCTION_0044( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Marakunda );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( var122 < ( ( 40 + 20 ) + 30 ) )
        {
            AI_ACT_SKILL( BattleSkill.TorrentShot );
            AI_TAR_RND();
            return;
        }
        else if ( var122 < ( ( ( 40 + 20 ) + 30 ) + 10 ) )
        {
            
            if ( FUNCTION_0195( 0x10 ) < 3 )
            {
                AI_ACT_SKILL( BattleSkill.Sukukaja );
                AI_NOTHOJO( 272 );
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_FUKUTU_KAI()
{
    int var124;
    int var125;
    int var126;
    int var127;
    var124 = RNG( 100 );
    var125 = RNG( 100 );
    var126 = RNG( 100 );
    var127 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Dia );
        AI_MINE();
        return;
    }

    
    if ( FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( var125 < 70 )
            {
                AI_ACT_SKILL( BattleSkill.Magarula );
                AI_TAR_RND();
                return;
            }
            else if ( var125 < ( 70 + 30 ) )
            {
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WAIT();
                AI_MINE();
                return;
            }

        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            
            if ( ( ( FUNCTION_004D( 6 ) == 1 ) || ( FUNCTION_004F( 6 ) == 1 ) ) || ( FUNCTION_0051( 6 ) == 1 ) )
            {
                
                if ( var127 < 50 )
                {
                    
                    if ( FUNCTION_004D( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.WindBreak );
                        AI_HANSYA( 6 );
                        return;
                    }
                    else if ( FUNCTION_004F( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.WindBreak );
                        AI_KYUSYU( 6 );
                        return;
                    }
                    else if ( FUNCTION_0051( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.WindBreak );
                        AI_MUKOU( 6 );
                        return;
                    }

                }
                else if ( var127 < ( 50 + 50 ) )
                {
                    
                    if ( var124 < 30 )
                    {
                        AI_ACT_SKILL( BattleSkill.Garudyne );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var124 < ( 30 + 15 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.KillRush );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var124 < ( ( 30 + 15 ) + 30 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.MindCharge );
                        AI_MINE();
                        return;
                    }
                    else if ( var124 < ( ( ( 30 + 15 ) + 30 ) + 20 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Hama );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_WEAPON();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_WAIT();
                    AI_MINE();
                    return;
                }

            }
            else if ( var124 < 30 )
            {
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_TAR_RND();
                return;
            }
            else if ( var124 < ( 30 + 15 ) )
            {
                AI_ACT_SKILL( BattleSkill.KillRush );
                AI_TAR_RND();
                return;
            }
            else if ( var124 < ( ( 30 + 15 ) + 30 ) )
            {
                AI_ACT_SKILL( BattleSkill.MindCharge );
                AI_MINE();
                return;
            }
            else if ( var124 < ( ( ( 30 + 15 ) + 30 ) + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.Hama );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( var125 < 70 )
            {
                AI_ACT_SKILL( BattleSkill.Magarula );
                AI_TAR_RND();
                return;
            }
            else if ( var125 < ( 70 + 30 ) )
            {
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WAIT();
                AI_MINE();
                return;
            }

        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            
            if ( ( ( FUNCTION_004D( 6 ) == 1 ) || ( FUNCTION_004F( 6 ) == 1 ) ) || ( FUNCTION_0051( 6 ) == 1 ) )
            {
                
                if ( var127 < 50 )
                {
                    
                    if ( FUNCTION_004D( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.WindBreak );
                        AI_HANSYA( 6 );
                        return;
                    }
                    else if ( FUNCTION_004F( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.WindBreak );
                        AI_KYUSYU( 6 );
                        return;
                    }
                    else if ( FUNCTION_0051( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.WindBreak );
                        AI_MUKOU( 6 );
                        return;
                    }

                }
                else if ( var127 < ( 50 + 50 ) )
                {
                    
                    if ( var126 < 10 )
                    {
                        AI_ACT_SKILL( BattleSkill.HeatWave );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var126 < ( 10 + 25 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.MindCharge );
                        AI_MINE();
                        return;
                    }
                    else if ( var126 < ( ( 10 + 25 ) + 35 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Garudyne );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var126 < ( ( ( 10 + 25 ) + 35 ) + 20 ) )
                    {
                        
                        if ( FUNCTION_01C7( 0x40 ) == 0 )
                        {
                            AI_ACT_SKILL( BattleSkill.Rakukaja );
                            AI_MINE();
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( BattleSkill.KillRush );
                            AI_TAR_RND();
                        }

                    }
                    else if ( var126 < ( ( ( ( 10 + 25 ) + 35 ) + 20 ) + 10 ) )
                    {
                        
                        if ( FUNCTION_01C7( 0x00020000 ) == 0 )
                        {
                            AI_ACT_SKILL( 242 );
                            AI_TAR_RND();
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( BattleSkill.KillRush );
                            AI_TAR_RND();
                            return;
                        }

                    }
                    else 
                    {
                        AI_ACT_WAIT();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_WAIT();
                    AI_MINE();
                    return;
                }

            }
            else if ( var126 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.HeatWave );
                AI_TAR_RND();
                return;
            }
            else if ( var126 < ( 10 + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.MindCharge );
                AI_MINE();
                return;
            }
            else if ( var126 < ( ( 10 + 25 ) + 35 ) )
            {
                AI_ACT_SKILL( BattleSkill.Garudyne );
                AI_TAR_RND();
                return;
            }
            else if ( var126 < ( ( ( 10 + 25 ) + 35 ) + 20 ) )
            {
                
                if ( FUNCTION_01C7( 0x40 ) == 0 )
                {
                    AI_ACT_SKILL( BattleSkill.Rakukaja );
                    AI_MINE();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.KillRush );
                    AI_TAR_RND();
                }

            }
            else if ( var126 < ( ( ( ( 10 + 25 ) + 35 ) + 20 ) + 10 ) )
            {
                
                if ( FUNCTION_01C7( 0x00020000 ) == 0 )
                {
                    AI_ACT_SKILL( 242 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.KillRush );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_WAIT();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_GAIA_KAI()
{
    int var128;
    int var129;
    int var130;
    var128 = RNG( 100 );
    var129 = RNG( 100 );
    var130 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( BattleSkill.LifeDrain75 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var129 < 40 )
        {
            
            if ( var130 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.GiganticFist );
                AI_ID( 1 );
                return;
            }
            else if ( var130 < ( 10 + 90 ) )
            {
                AI_ACT_SKILL( BattleSkill.GiganticFist );
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( var129 < ( 40 + 40 ) )
        {
            
            if ( var130 < 10 )
            {
                AI_ACT_SKILL( BattleSkill.FatalEnd );
                AI_ID( 1 );
                return;
            }
            else if ( var130 < ( 10 + 90 ) )
            {
                AI_ACT_SKILL( BattleSkill.FatalEnd );
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_01C7( 0x0400 ) == 0 )
    {
        
        if ( var128 < 40 )
        {
            AI_ACT_SKILL( BattleSkill.PowerCharge );
            AI_MINE();
            return;
        }
        else if ( var128 < ( 40 + 30 ) )
        {
            
            if ( FUNCTION_0044( 0x4000 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Rebellion );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.PowerCharge );
                AI_MINE();
                return;
            }

        }
        else if ( var128 < ( ( 40 + 30 ) + 15 ) )
        {
            
            if ( FUNCTION_0043( 0x10 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Sukukaja );
                AI_NOTHOJO( 272 );
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_MEGATON_KAI()
{
    int var131;
    int var132;
    var131 = RNG( 100 );
    var132 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var132 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_TAR_RND();
            return;
        }
        else if ( var132 < ( 50 + 50 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( BattleSkill.VileAssault );
        AI_TAR_BAD( 0x00100000 );
        return;
    }

    
    if ( var131 < 15 )
    {
        
        if ( FUNCTION_0040( 2 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.EerieSound60 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.MindCharge );
            AI_MINE();
            return;
        }

    }
    else if ( var131 < ( 15 + 20 ) )
    {
        
        if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Marakunda );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var131 < ( ( 15 + 20 ) + 35 ) )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( var131 < ( ( ( 15 + 20 ) + 35 ) + 30 ) )
    {
        AI_ACT_SKILL( BattleSkill.MindCharge );
        AI_MINE();
        return;
    }
    else 
    {
        AI_ACT_WAIT();
        AI_TAR_RND();
        return;
    }

}


void AI_NEMURU_KAI()
{
    int var133;
    var133 = RNG( 100 );
    
    if ( AI_ENBAD( 8 ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.GhastlyWail );
        AI_TAR_RND();
        return;
    }

    
    if ( var133 < 25 )
    {
        
        if ( FUNCTION_003C( 1 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Hamaon );
            FUNCTION_013D( 1 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Maragidyne6 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var133 < ( 25 + 35 ) )
    {
        AI_ACT_SKILL( BattleSkill.Maragidyne6 );
        AI_TAR_RND();
        return;
    }
    else if ( var133 < ( ( 25 + 35 ) + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.Megidola );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0040( 8 ) == 0 )
    {
        AI_ACT_SKILL( BattleSkill.EvilTouch );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.GhastlyWail );
        AI_TAR_RND();
        return;
    }

}


void AI_JIGOKU_KAI()
{
    int var134;
    int var135;
    int var136;
    int var137;
    var134 = RNG( 100 );
    var135 = RNG( 100 );
    var136 = RNG( 100 );
    var137 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_0040( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.PoisonMist69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( var135 < 70 )
            {
                AI_ACT_SKILL( BattleSkill.Maziodyne33 );
                AI_TAR_RND();
                return;
            }
            else if ( var135 < ( 70 + 30 ) )
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WAIT();
                AI_MINE();
                return;
            }

        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            
            if ( ( ( FUNCTION_004D( 5 ) == 1 ) || ( FUNCTION_004F( 5 ) == 1 ) ) || ( FUNCTION_0051( 5 ) == 1 ) )
            {
                
                if ( var137 < 50 )
                {
                    
                    if ( FUNCTION_004D( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.ElecBreak );
                        AI_HANSYA( 5 );
                        return;
                    }
                    else if ( FUNCTION_004F( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.ElecBreak );
                        AI_KYUSYU( 5 );
                        return;
                    }
                    else if ( FUNCTION_0051( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.ElecBreak );
                        AI_MUKOU( 5 );
                        return;
                    }

                }
                else if ( var137 < ( 50 + 50 ) )
                {
                    
                    if ( var134 < 30 )
                    {
                        AI_ACT_SKILL( BattleSkill.Ziodyne );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var134 < ( 30 + 20 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.HeatWave );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var134 < ( ( 30 + 20 ) + 30 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.MindCharge );
                        AI_MINE();
                        return;
                    }
                    else if ( var134 < ( ( ( 30 + 20 ) + 30 ) + 10 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Mudo );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_WEAPON();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_WAIT();
                    AI_MINE();
                    return;
                }

            }
            else if ( var134 < 30 )
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_TAR_RND();
                return;
            }
            else if ( var134 < ( 30 + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.HeatWave );
                AI_TAR_RND();
                return;
            }
            else if ( var134 < ( ( 30 + 20 ) + 30 ) )
            {
                AI_ACT_SKILL( BattleSkill.MindCharge );
                AI_MINE();
                return;
            }
            else if ( var134 < ( ( ( 30 + 20 ) + 30 ) + 10 ) )
            {
                AI_ACT_SKILL( BattleSkill.Mudo );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( var135 < 70 )
            {
                AI_ACT_SKILL( BattleSkill.Maziodyne33 );
                AI_TAR_RND();
                return;
            }
            else if ( var135 < ( 70 + 30 ) )
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WAIT();
                AI_MINE();
                return;
            }

        }
        else if ( FUNCTION_01C7( 221 ) == 0 )
        {
            
            if ( ( ( FUNCTION_004D( 5 ) == 1 ) || ( FUNCTION_004F( 5 ) == 1 ) ) || ( FUNCTION_0051( 5 ) == 1 ) )
            {
                
                if ( var137 < 50 )
                {
                    
                    if ( FUNCTION_004D( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.ElecBreak );
                        AI_HANSYA( 5 );
                        return;
                    }
                    else if ( FUNCTION_004F( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.ElecBreak );
                        AI_KYUSYU( 5 );
                        return;
                    }
                    else if ( FUNCTION_0051( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( BattleSkill.ElecBreak );
                        AI_MUKOU( 5 );
                        return;
                    }

                }
                else if ( var137 < ( 50 + 50 ) )
                {
                    
                    if ( var136 < 20 )
                    {
                        AI_ACT_SKILL( BattleSkill.TorrentShot );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var136 < ( 20 + 20 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.MindCharge );
                        AI_MINE();
                        return;
                    }
                    else if ( var136 < ( ( 20 + 20 ) + 30 ) )
                    {
                        AI_ACT_SKILL( BattleSkill.Ziodyne );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var136 < ( ( ( 20 + 20 ) + 30 ) + 20 ) )
                    {
                        
                        if ( FUNCTION_01C7( 0x40 ) == 0 )
                        {
                            AI_ACT_SKILL( BattleSkill.Rakukaja );
                            AI_MINE();
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( BattleSkill.TorrentShot );
                            AI_TAR_RND();
                        }

                    }
                    else if ( var136 < ( ( ( ( 20 + 20 ) + 30 ) + 20 ) + 10 ) )
                    {
                        
                        if ( FUNCTION_0043( 0x00010000 ) == 0 )
                        {
                            AI_ACT_SKILL( 241 );
                            AI_TAR_RND();
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( BattleSkill.TorrentShot );
                            AI_TAR_RND();
                            return;
                        }

                    }
                    else 
                    {
                        AI_ACT_WAIT();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_WAIT();
                    AI_MINE();
                    return;
                }

            }
            else if ( var136 < 20 )
            {
                AI_ACT_SKILL( BattleSkill.TorrentShot );
                AI_TAR_RND();
                return;
            }
            else if ( var136 < ( 20 + 20 ) )
            {
                AI_ACT_SKILL( BattleSkill.MindCharge );
                AI_MINE();
                return;
            }
            else if ( var136 < ( ( 20 + 20 ) + 30 ) )
            {
                AI_ACT_SKILL( BattleSkill.Ziodyne );
                AI_TAR_RND();
                return;
            }
            else if ( var136 < ( ( ( 20 + 20 ) + 30 ) + 20 ) )
            {
                
                if ( FUNCTION_01C7( 0x40 ) == 0 )
                {
                    AI_ACT_SKILL( BattleSkill.Rakukaja );
                    AI_MINE();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.TorrentShot );
                    AI_TAR_RND();
                }

            }
            else if ( var136 < ( ( ( ( 20 + 20 ) + 30 ) + 20 ) + 10 ) )
            {
                
                if ( FUNCTION_0043( 0x00010000 ) == 0 )
                {
                    AI_ACT_SKILL( 241 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.TorrentShot );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_WAIT();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_BURNING()
{
    int var138;
    int var139;
    var138 = RNG( 100 );
    var139 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var139 < 70 )
        {
            AI_ACT_SKILL( BattleSkill.VileAssault );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Deathbound );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_01C7( 0x0400 ) == 0 )
    {
        
        if ( var138 < 25 )
        {
            AI_ACT_SKILL( BattleSkill.PowerCharge );
            AI_MINE();
            return;
        }
        else if ( var138 < ( 25 + 20 ) )
        {
            
            if ( FUNCTION_0044( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Marakunda );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Maragidyne6 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var138 < ( ( 25 + 20 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Deathbound );
            AI_TAR_RND();
            return;
        }
        else if ( var138 < ( ( ( 25 + 20 ) + 25 ) + 15 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maragidyne6 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_HEIKOU_KAI()
{
    int var140;
    int var141;
    var140 = RNG( 100 );
    var141 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var141 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.GiganticFist );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.BladeofFury );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_003E( 0x80 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.Posumudi );
            AI_TAR_BAD( 0x80 );
            return;
        }
        else if ( FUNCTION_003E( 4 ) == 1 )
        {
            
            if ( FUNCTION_003D( 4 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.MePatra );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_003D( 4 ) == 1 )
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( FUNCTION_0035( 90 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.Diarama );
            AI_HPMIN();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.FatalEnd );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_008F() == 0 )
    {
        
        if ( var140 < 10 )
        {
            AI_ACT_SKILL( BattleSkill.GiganticFist );
            AI_TAR_RND();
            return;
        }
        else if ( var140 < ( 10 + 5 ) )
        {
            AI_ACT_SKILL( BattleSkill.Zanei );
            AI_TAR_RND();
            return;
        }
        else if ( var140 < ( ( 10 + 5 ) + 10 ) )
        {
            AI_ACT_SKILL( BattleSkill.MightySwing );
            AI_TAR_RND();
            return;
        }
        else if ( var140 < ( ( ( 10 + 5 ) + 10 ) + 5 ) )
        {
            AI_ACT_SKILL( BattleSkill.DoubleFangs );
            AI_TAR_RND();
            return;
        }
        else if ( var140 < ( ( ( ( 10 + 5 ) + 10 ) + 5 ) + 10 ) )
        {
            AI_ACT_SKILL( BattleSkill.BladeofFury );
            AI_TAR_RND();
            return;
        }
        else if ( var140 < ( ( ( ( ( 10 + 5 ) + 10 ) + 5 ) + 10 ) + 15 ) )
        {
            
            if ( FUNCTION_0058( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Deathbound );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.TempestSlash );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var140 < ( ( ( ( ( ( 10 + 5 ) + 10 ) + 5 ) + 10 ) + 15 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.TempestSlash );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_01C7( 0x0400 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.PowerCharge );
            AI_MINE();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Deathbound );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_MINE();
        return;
    }

}


void AI_TENBATU()
{
    int var142;
    var142 = RNG( 100 );
    
    if ( ( AI_ENBAD( 0x10 ) == 1 ) && ( FUNCTION_01C7( 0x00010000 ) == 0 ) )
    {
        AI_ACT_SKILL( 241 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_01C7( 0x00010000 ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Provoke );
        AI_TAR_RND();
        return;
    }

    
    if ( var142 < 30 )
    {
        AI_ACT_SKILL( BattleSkill.Megidola );
        AI_TAR_RND();
        return;
    }
    else if ( var142 < ( 30 + 30 ) )
    {
        
        if ( FUNCTION_0057( 39 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Megidolaon39 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Megidola );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var142 < ( ( 30 + 30 ) + 30 ) )
    {
        
        if ( FUNCTION_01C7( 0x00010000 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.Provoke );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 241 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0043( 0x00010000 ) == 0 )
    {
        AI_ACT_SKILL( 241 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.Megidolaon39 );
        AI_TAR_RND();
        return;
    }

}


void AI_ROYAL_KAI()
{
    int var143;
    var143 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_0033( 90 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.Dia );
            AI_HPMIN();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_003E( 1 ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Charmdi );
        AI_TAR_BAD( 1 );
        return;
    }

    
    if ( FUNCTION_003E( 4 ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Patra );
        AI_TAR_BAD( 4 );
        return;
    }

    
    if ( FUNCTION_003E( 0x80 ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Posumudi );
        AI_TAR_BAD( 0x80 );
        return;
    }

    
    if ( FUNCTION_003E( 8 ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Patra );
        AI_TAR_BAD( 8 );
        return;
    }

    
    if ( var143 < 20 )
    {
        
        if ( AI_CHK_PLAYER_ID( BattleUnit.Yukari ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.MarinKarin );
            AI_ID( 2 );
            return;
        }
        else if ( ( ( AI_ENBAD( 1 ) == 1 ) || ( AI_ENBAD( 4 ) == 1 ) ) || ( AI_ENBAD( 0x80 ) == 1 ) )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( ( ( AI_ENBAD( 1 ) == 0 ) && ( AI_ENBAD( 4 ) == 0 ) ) && ( AI_ENBAD( 0x80 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.MarinKarin );
            AI_NOTBAD( 1 );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else if ( var143 < ( 20 + 10 ) )
    {
        
        if ( ( ( AI_ENBAD( 1 ) == 0 ) || ( AI_ENBAD( 4 ) == 0 ) ) || ( AI_ENBAD( 0x80 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.SexyDance58 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.MightySwing );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var143 < ( ( 20 + 10 ) + 20 ) )
    {
        
        if ( ( ( AI_ENBAD( 4 ) == 1 ) || ( AI_ENBAD( 1 ) == 1 ) ) || ( AI_ENBAD( 0x80 ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.HeatWave );
            AI_TAR_RND();
            return;
        }
        else if ( ( ( AI_ENBAD( 13 ) == 0 ) && ( AI_ENBAD( 1 ) == 0 ) ) && ( AI_ENBAD( 0x80 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Pulinpa );
            AI_NOTBAD( 13 );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( var143 < ( ( ( 20 + 10 ) + 20 ) + 10 ) )
    {
        
        if ( ( ( AI_ENBAD( 4 ) == 0 ) || ( AI_ENBAD( 1 ) == 0 ) ) || ( AI_ENBAD( 0x80 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Tentarafoo62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var143 < ( ( ( ( 20 + 10 ) + 20 ) + 10 ) + 20 ) )
    {
        
        if ( ( ( AI_ENBAD( 4 ) == 1 ) || ( AI_ENBAD( 1 ) == 1 ) ) || ( AI_ENBAD( 0x80 ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Poisma );
            AI_TAR_RND();
            return;
        }
        else if ( ( ( AI_ENBAD( 13 ) == 0 ) && ( AI_ENBAD( 1 ) == 0 ) ) && ( AI_ENBAD( 0x80 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Poisma );
            AI_NOTBAD( 0x80 );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            AI_MINE();
            return;
        }

    }
    else if ( var143 < ( ( ( ( ( 20 + 10 ) + 20 ) + 10 ) + 20 ) + 10 ) )
    {
        
        if ( ( ( AI_ENBAD( 4 ) == 0 ) || ( AI_ENBAD( 1 ) == 0 ) ) || ( AI_ENBAD( 0x80 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.PoisonMist69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.PrimalForce );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.PrimalForce );
        AI_TAR_RND();
        return;
    }

}


void AI_NORBLE_KAI()
{
    int var144;
    int var145;
    var144 = RNG( 100 );
    var145 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_0058( 144 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.VorpalBladeJourney );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.LifeDrain75 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0033( 20 ) == 0 )
    {
        
        if ( var144 < 25 )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_TAR_RND();
            return;
        }
        else if ( var144 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_TAR_RND();
            return;
        }
        else if ( var144 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_TAR_RND();
            return;
        }
        else if ( var144 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( FUNCTION_0033( 20 ) == 1 )
    {
        
        if ( var145 < 18 )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_TAR_RND();
            return;
        }
        else if ( var145 < ( 18 + 18 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_TAR_RND();
            return;
        }
        else if ( var145 < ( ( 18 + 18 ) + 18 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_TAR_RND();
            return;
        }
        else if ( var145 < ( ( ( 18 + 18 ) + 18 ) + 18 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_TAR_RND();
            return;
        }
        else if ( var145 < ( ( ( ( 18 + 18 ) + 18 ) + 18 ) + 7 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maragidyne6 );
            AI_TAR_RND();
            return;
        }
        else if ( var145 < ( ( ( ( ( 18 + 18 ) + 18 ) + 18 ) + 7 ) + 7 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
            AI_TAR_RND();
            return;
        }
        else if ( var145 < ( ( ( ( ( ( 18 + 18 ) + 18 ) + 18 ) + 7 ) + 7 ) + 7 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maziodyne33 );
            AI_TAR_RND();
            return;
        }
        else if ( var145 < ( ( ( ( ( ( ( 18 + 18 ) + 18 ) + 18 ) + 7 ) + 7 ) + 7 ) + 7 ) )
        {
            AI_ACT_SKILL( BattleSkill.Magarudyne15 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_NIKUYOKU_KAI()
{
    int var146;
    int var147;
    var146 = RNG( 100 );
    var147 = RNG( 100 );
    
    if ( FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( ( ( FUNCTION_004D( 3 ) == 2 ) || ( FUNCTION_004F( 3 ) == 2 ) ) || ( FUNCTION_0051( 3 ) == 2 ) )
        {
            AI_ACT_SKILL( 251 );
            AI_TAR_RND();
            return;
        }
        else if ( ( ( ( FUNCTION_004D( 3 ) == 1 ) && ( FUNCTION_004F( 3 ) == 1 ) ) || ( ( FUNCTION_004D( 3 ) == 1 ) && ( FUNCTION_0051( 3 ) == 1 ) ) ) || ( ( FUNCTION_004F( 3 ) == 1 ) && ( FUNCTION_0051( 3 ) == 1 ) ) )
        {
            AI_ACT_SKILL( 251 );
            AI_TAR_RND();
            return;
        }

        
        if ( FUNCTION_004D( 3 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.FireBreak );
            AI_HANSYA( 3 );
            return;
        }
        else if ( FUNCTION_004F( 3 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.FireBreak );
            AI_KYUSYU( 3 );
            return;
        }
        else if ( FUNCTION_0051( 3 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.FireBreak );
            AI_MUKOU( 3 );
            return;
        }

        
        if ( var146 < 20 )
        {
            AI_ACT_SKILL( BattleSkill.SpiritDrain94 );
            AI_TAR_RND();
            return;
        }
        else if ( var146 < ( 20 + 15 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maragidyne6 );
            AI_TAR_RND();
            return;
        }
        else if ( var146 < ( ( 20 + 15 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mudoon );
            AI_TAR_RND();
            return;
        }
        else if ( var146 < ( ( ( 20 + 15 ) + 25 ) + 10 ) )
        {
            
            if ( FUNCTION_01C7( 0x00010000 ) == 0 )
            {
                AI_ACT_SKILL( 241 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( ( var147 < 15 ) && ( ( ( FUNCTION_0044( 1 ) == 1 ) || ( FUNCTION_0044( 0x40 ) == 1 ) ) || ( FUNCTION_0044( 0x10 ) == 1 ) ) )
        {
            AI_ACT_SKILL( BattleSkill.Dekaja );
            AI_TAR_RND();
            return;
        }
        else if ( ( var147 < 30 ) && ( ( ( FUNCTION_0043( 2 ) == 1 ) || ( FUNCTION_0043( 0x80 ) == 1 ) ) || ( FUNCTION_0043( 0x20 ) == 1 ) ) )
        {
            AI_ACT_SKILL( BattleSkill.Dekunda );
            AI_TAR_RND();
            return;
        }
        else if ( var147 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.LifeDrain93 );
            AI_TAR_RND();
            return;
        }
        else if ( var147 < 70 )
        {
            AI_ACT_SKILL( BattleSkill.Mamudo );
            AI_TAR_RND();
            return;
        }
        else if ( var147 < 85 )
        {
            
            if ( FUNCTION_0043( 1 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Tarukaja );
                AI_NOTHOJO( 5 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.LifeDrain93 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var147 < 100 )
        {
            
            if ( FUNCTION_0043( 0x40 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Rakukaja );
                AI_NOTHOJO( 0x40 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Mamudo );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_ZENNOU()
{
    int var148;
    int var149;
    var148 = RNG( 100 );
    var149 = RNG( 100 );
    
    if ( FUNCTION_0044( 0x00020000 ) == 1 )
    {
        
        if ( FUNCTION_0049( 5 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Megidolaon39 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0049( 5 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.Maziodyne33 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_0033( 30 ) == 0 )
        {
            
            if ( FUNCTION_0159( 1, 5 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.SpiritDrain94 );
                AI_ID( 1 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Megidola );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var148 < 20 )
        {
            AI_ACT_SKILL( BattleSkill.Maragidyne6 );
            AI_TAR_RND();
            return;
        }
        else if ( var148 < ( 20 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
            AI_TAR_RND();
            return;
        }
        else if ( var148 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maziodyne33 );
            AI_TAR_RND();
            return;
        }
        else if ( var148 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Magarudyne15 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Megidolaon39 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( ( FUNCTION_0162( 1, 9 ) == 1 ) && ( FUNCTION_015B( 1, 0x00100000 ) == 0 ) )
    {
        
        if ( ( FUNCTION_0160( 1, 3 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_ID( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 4 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_ID( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 5 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_ID( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 6 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_ID( 1 );
        }

    }

    
    if ( ( FUNCTION_0162( 1, 18 ) == 1 ) && ( FUNCTION_015B( 1, 0x00100000 ) == 0 ) )
    {
        
        if ( ( FUNCTION_0160( 1, 3 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_ID( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 4 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_ID( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 5 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_ID( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 6 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_ID( 1 );
        }

    }

    
    if ( ( FUNCTION_0162( 1, 27 ) == 1 ) && ( FUNCTION_015B( 1, 0x00100000 ) == 0 ) )
    {
        
        if ( ( FUNCTION_0160( 1, 3 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_ID( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 4 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_ID( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 5 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_ID( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 6 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_ID( 1 );
        }

    }

    
    if ( ( FUNCTION_0162( 1, 36 ) == 1 ) && ( FUNCTION_015B( 1, 0x00100000 ) == 0 ) )
    {
        
        if ( ( FUNCTION_0160( 1, 3 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_ID( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 4 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_ID( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 5 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_ID( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 6 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_ID( 1 );
        }

    }

    
    if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( var148 < 20 )
        {
            AI_ACT_SKILL( BattleSkill.Maragidyne6 );
            AI_TAR_RND();
            return;
        }
        else if ( var148 < ( 20 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
            AI_TAR_RND();
            return;
        }
        else if ( var148 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maziodyne33 );
            AI_TAR_RND();
            return;
        }
        else if ( var148 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Magarudyne15 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Megidola );
            AI_TAR_RND();
            return;
        }

    }
    else if ( ( FUNCTION_0033( 50 ) == 1 ) && ( FUNCTION_0033( 20 ) == 0 ) )
    {
        
        if ( var149 < 25 )
        {
            AI_ACT_SKILL( BattleSkill.Mamudoon54 );
            AI_TAR_RND();
            return;
        }
        else if ( var149 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mahamaon48 );
            AI_TAR_RND();
            return;
        }
        else if ( var149 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Megidola );
            AI_TAR_RND();
            return;
        }
        else if ( var149 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Megidolaon39 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( FUNCTION_0033( 20 ) == 1 )
    {
        
        if ( AI_ENWEAK_ST_PAI( 3 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_WEAK( 3 );
            return;
        }
        else if ( AI_ENWEAK_ST_PAI( 4 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_WEAK( 4 );
            return;
        }
        else if ( AI_ENWEAK_ST_PAI( 6 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_WEAK( 6 );
            return;
        }
        else if ( AI_ENWEAK_ST_PAI( 5 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_WEAK( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Megidolaon39 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_FUNNU_KAI()
{
    int var150;
    int var151;
    var150 = RNG( 100 );
    var151 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_0033( 20 ) == 0 )
    {
        
        if ( var150 < 20 )
        {
            AI_ACT_SKILL( BattleSkill.PrimalForce );
            AI_TAR_RND();
            return;
        }
        else if ( var150 < ( 20 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.VorpalBladeJourney );
            AI_TAR_RND();
            return;
        }
        else if ( var150 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.PowerCharge );
            AI_MINE();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 20 ) == 1 )
    {
        
        if ( var151 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.LastResort );
            AI_TAR_RND();
            return;
        }
        else if ( var151 < ( 50 + 50 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mazionga );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_AIHEK()
{
    int var152;
    var152 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.Megidolaon39 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_005E( 20 ) == 1 )
    {
        AI_ACT_SKILL( BattleSkill.MindCharge );
        AI_MINE();
        return;
    }

    
    if ( var152 < 5 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( var152 < ( 5 + 20 ) )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Infuriate );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.PrimalForce );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var152 < ( ( 5 + 20 ) + 15 ) )
    {
        
        if ( FUNCTION_0044( 0x00400000 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.StagnantAir );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var152 < ( ( ( 5 + 20 ) + 15 ) + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.PrimalForce );
        AI_TAR_RND();
        return;
    }
    else if ( var152 < ( ( ( ( 5 + 20 ) + 15 ) + 25 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Megidolaon39 );
        AI_TAR_RND();
        return;
    }
    else if ( var152 < ( ( ( ( ( 5 + 20 ) + 15 ) + 25 ) + 20 ) + 5 ) )
    {
        
        if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Marakunda );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var152 < ( ( ( ( ( ( 5 + 20 ) + 15 ) + 25 ) + 20 ) + 5 ) + 5 ) )
    {
        
        if ( FUNCTION_0044( 0x20 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Masukunda );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var152 < ( ( ( ( ( ( ( 5 + 20 ) + 15 ) + 25 ) + 20 ) + 5 ) + 5 ) + 5 ) )
    {
        
        if ( FUNCTION_0044( 2 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Matarunda );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.PrimalForce );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_KYOUSIN()
{
    int var153;
    int var154;
    int var155;
    var153 = RNG( 100 );
    var154 = RNG( 100 );
    var155 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var154 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.Zionga );
            AI_TAR_RND();
            return;
        }
        else if ( var154 < ( 50 + 50 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mazionga );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }

    
    if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( var155 < 20 )
        {
            AI_ACT_SKILL( BattleSkill.Mazionga );
            AI_TAR_RND();
            return;
        }
        else if ( var155 < ( 20 + 20 ) )
        {
            
            if ( AI_ENBAD( 0x80 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.Mazionga );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.PoisonMist69 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var155 < ( ( 20 + 20 ) + 30 ) )
        {
            AI_ACT_SKILL( BattleSkill.MindCharge );
            AI_MINE();
            return;
        }
        else if ( var155 < ( ( ( 20 + 20 ) + 30 ) + 30 ) )
        {
            
            if ( FUNCTION_004D( 5 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.ElecBreak );
                AI_HANSYA( 5 );
                return;
            }
            else if ( FUNCTION_004F( 5 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.ElecBreak );
                AI_KYUSYU( 5 );
                return;
            }
            else if ( FUNCTION_0051( 5 ) == 1 )
            {
                AI_ACT_SKILL( BattleSkill.ElecBreak );
                AI_MUKOU( 5 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Mazionga );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( var153 < 20 )
    {
        
        if ( AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.PoisonMist69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Mazionga );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var153 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mazionga );
        AI_TAR_RND();
        return;
    }
    else if ( var153 < ( ( 20 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.MindCharge );
        AI_MINE();
        return;
    }
    else if ( var153 < ( ( ( 20 + 20 ) + 20 ) + 30 ) )
    {
        AI_ACT_SKILL( BattleSkill.Zionga );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_MAGS_KAI()
{
    int var156;
    int var157;
    int var158;
    var156 = RNG( 100 );
    var157 = RNG( 100 );
    var158 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var157 < 45 )
        {
            AI_ACT_SKILL( BattleSkill.Mabufula );
            AI_TAR_RND();
            return;
        }
        else if ( var157 < ( 45 + 15 ) )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_TAR_RND();
            return;
        }
        else if ( var157 < ( ( 45 + 15 ) + 40 ) )
        {
            
            if ( FUNCTION_0033( 30 ) == 1 )
            {
                
                if ( FUNCTION_004D( 4 ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.IceBreak );
                    AI_HANSYA( 4 );
                    return;
                }
                else if ( FUNCTION_004F( 4 ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.IceBreak );
                    AI_KYUSYU( 4 );
                    return;
                }
                else if ( FUNCTION_0051( 4 ) == 1 )
                {
                    AI_ACT_SKILL( BattleSkill.IceBreak );
                    AI_MUKOU( 4 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.Mabufula );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Mabufula );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }

    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( var156 < 35 )
        {
            AI_ACT_SKILL( BattleSkill.Mabufula );
            AI_TAR_RND();
            return;
        }
        else if ( var156 < ( 35 + 5 ) )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var156 < ( ( 35 + 5 ) + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.MindCharge );
            AI_MINE();
            return;
        }
        else if ( var156 < ( ( ( 35 + 5 ) + 20 ) + 20 ) )
        {
            
            if ( FUNCTION_0043( 0x00020000 ) == 0 )
            {
                AI_ACT_SKILL( 242 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Mabufula );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( var158 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.Bufudyne );
            AI_HPMIN();
            return;
        }
        else if ( var158 < ( 50 + 50 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mabufula );
            AI_TAR_RND();
            return;
        }
        else if ( var158 < ( ( 50 + 50 ) + 50 ) )
        {
            AI_ACT_SKILL( BattleSkill.MindCharge );
            AI_MINE();
            return;
        }
        else if ( FUNCTION_004D( 4 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.IceBreak );
            AI_HANSYA( 4 );
            return;
        }
        else if ( FUNCTION_004F( 4 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.IceBreak );
            AI_KYUSYU( 4 );
            return;
        }
        else if ( FUNCTION_0051( 4 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.IceBreak );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Mabufula );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_GRAND_MAGS()
{
    int var159;
    int var160;
    var159 = RNG( 100 );
    var160 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var160 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.Maragidyne6 );
            AI_TAR_RND();
            return;
        }
        else if ( var160 < ( 50 + 30 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Megidolaon39 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var159 < 20 )
    {
        AI_ACT_SKILL( BattleSkill.Maragidyne6 );
        AI_TAR_RND();
        return;
    }
    else if ( var159 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Agidyne );
        AI_TAR_RND();
        return;
    }
    else if ( var159 < ( ( 20 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.MindCharge );
        AI_MINE();
        return;
    }
    else if ( var159 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        
        if ( AI_ENBAD( 4 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Tentarafoo62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Maragidyne6 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var159 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 15 ) )
    {
        AI_ACT_SKILL( BattleSkill.Megidolaon39 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_KYOURAN_MALIA()
{
    int var161;
    var161 = RNG( 100 );
    
    if ( var161 < 20 )
    {
        AI_ACT_SKILL( BattleSkill.Bufudyne );
        AI_TAR_RND();
        return;
    }
    else if ( var161 < ( 20 + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
        AI_TAR_RND();
        return;
    }
    else if ( var161 < ( ( 20 + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mudoon );
        AI_TAR_RND();
        return;
    }
    else if ( var161 < ( ( ( 20 + 25 ) + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mamudoon54 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_ABYSS_MOTHER()
{
    int var162;
    int var163;
    var162 = RNG( 100 );
    var163 = RNG( 100 );
    
    if ( AI_ENBAD( 8 ) == 1 )
    {
        
        if ( var163 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.GhastlyWail );
            AI_TAR_RND();
            return;
        }
        else if ( var163 < ( 50 + 50 ) )
        {
            
            if ( var162 < 25 )
            {
                
                if ( FUNCTION_0040( 8 ) == 0 )
                {
                    AI_ACT_SKILL( BattleSkill.Infuriate );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( BattleSkill.Mahamaon48 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var162 < ( 25 + 5 ) )
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }
            else if ( var162 < ( ( 25 + 5 ) + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.Mahama );
                AI_TAR_RND();
                return;
            }
            else if ( var162 < ( ( ( 25 + 5 ) + 25 ) + 25 ) )
            {
                AI_ACT_SKILL( BattleSkill.Mahamaon48 );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0044( 2 ) == 0 )
            {
                AI_ACT_SKILL( BattleSkill.Matarunda );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( BattleSkill.Mahamaon48 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( var162 < 25 )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Infuriate );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Mahamaon48 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var162 < ( 25 + 5 ) )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( var162 < ( ( 25 + 5 ) + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mahama );
        AI_TAR_RND();
        return;
    }
    else if ( var162 < ( ( ( 25 + 5 ) + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mahamaon48 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 2 ) == 0 )
    {
        AI_ACT_SKILL( BattleSkill.Matarunda );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.Mahamaon48 );
        AI_TAR_RND();
        return;
    }

}


void AI_KING_CATHLE()
{
    int var164;
    int var165;
    var164 = RNG( 100 );
    var165 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var165 < 50 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.GodsHand );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var164 < 20 )
    {
        AI_ACT_SKILL( BattleSkill.PowerCharge );
        AI_MINE();
        return;
    }
    else if ( var164 < ( 20 + 10 ) )
    {
        
        if ( FUNCTION_0040( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.PoisonMist69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Maziodyne33 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var164 < ( ( 20 + 10 ) + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.GodsHand );
        AI_TAR_RND();
        return;
    }
    else if ( var164 < ( ( ( 20 + 10 ) + 25 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Maziodyne33 );
        AI_TAR_RND();
        return;
    }
    else if ( var164 < ( ( ( ( 20 + 10 ) + 25 ) + 20 ) + 10 ) )
    {
        AI_ACT_SKILL( BattleSkill.Ziodyne );
        AI_TAR_RND();
        return;
    }
    else if ( var164 < ( ( ( ( ( 20 + 10 ) + 25 ) + 20 ) + 10 ) + 10 ) )
    {
        
        if ( FUNCTION_0051( 5 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.ElecBreak );
            AI_MUKOU( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Ziodyne );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_WHITE_SIJIL()
{
    int var166;
    int var167;
    var166 = RNG( 100 );
    var167 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var167 < 50 )
        {
            AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Megidolaon39 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var166 < 20 )
    {
        AI_ACT_SKILL( BattleSkill.Megidolaon39 );
        AI_TAR_RND();
        return;
    }
    else if ( var166 < ( 20 + 30 ) )
    {
        AI_ACT_SKILL( BattleSkill.MindCharge );
        AI_MINE();
        return;
    }
    else if ( var166 < ( ( 20 + 30 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mamudoon54 );
        AI_TAR_RND();
        return;
    }
    else if ( var166 < ( ( ( 20 + 30 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.VirusBreath );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_INYOKU_HEBI()
{
    int var168;
    int var169;
    int var170;
    int var171;
    var168 = RNG( 100 );
    var169 = RNG( 100 );
    var170 = RNG( 100 );
    var171 = RNG( 100 );
    
    if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( var169 < 30 )
        {
            AI_MYAI( 88 );
            AI_TAR_RND();
            return;
        }
        else if ( var169 < ( 30 + 25 ) )
        {
            AI_ACT_SKILL( BattleSkill.Maragidyne6 );
            AI_TAR_RND();
            return;
        }
        else if ( var169 < ( ( 30 + 25 ) + 15 ) )
        {
            AI_ACT_SKILL( BattleSkill.SexyDance58 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Mahamaon48 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0035( 15 ) == 1 )
    {
        
        if ( var170 < 40 )
        {
            AI_ACT_SKILL( BattleSkill.Diarama );
            AI_HPMIN();
            return;
        }
        else if ( var170 < ( 40 + 40 ) )
        {
            AI_ACT_SKILL( BattleSkill.Mediarahan );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_003E( 0x00100000 ) == 1 )
    {
        
        if ( var171 < 60 )
        {
            AI_ACT_SKILL( BattleSkill.RePatra );
            AI_TAR_BAD( 0x00100000 );
            return;
        }
        else if ( var171 < ( 60 + 20 ) )
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Mahama );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var168 < 25 )
    {
        
        if ( FUNCTION_0040( 1 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.SexyDance58 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Agidyne );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var168 < ( 25 + 25 ) )
    {
        AI_ACT_SKILL( BattleSkill.Agidyne );
        AI_TAR_RND();
        return;
    }
    else if ( var168 < ( ( 25 + 25 ) + 25 ) )
    {
        
        if ( FUNCTION_003B( 1 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.VirusBreath );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.Mahama );
        AI_TAR_RND();
        return;
    }

}


void AI_OMEGA_TANK()
{
    int var172;
    int var173;
    var172 = RNG( 100 );
    var173 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var173 < 30 )
        {
            AI_ACT_SKILL( BattleSkill.VileAssault );
            AI_TAR_RND();
            return;
        }
        else if ( var173 < ( 30 + 30 ) )
        {
            AI_ACT_SKILL( BattleSkill.PrimalForce );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var172 < 20 )
    {
        AI_ACT_SKILL( BattleSkill.PowerCharge );
        AI_MINE();
        return;
    }
    else if ( var172 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.VileAssault );
        AI_TAR_RND();
        return;
    }
    else if ( var172 < ( ( 20 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.PrimalForce );
        AI_TAR_RND();
        return;
    }
    else if ( var172 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        
        if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Marakunda );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_LAST_SAMRAI()
{
    int var174;
    int var175;
    var174 = RNG( 100 );
    var175 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var175 < 30 )
        {
            AI_ACT_SKILL( BattleSkill.VorpalBladeJourney );
            AI_TAR_RND();
            return;
        }
        else if ( var175 < ( 30 + 40 ) )
        {
            AI_ACT_SKILL( BattleSkill.MyriadArrows );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var174 < 20 )
    {
        AI_ACT_SKILL( BattleSkill.VorpalBladeJourney );
        AI_TAR_RND();
        return;
    }
    else if ( var174 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.PowerCharge );
        AI_MINE();
        return;
    }
    else if ( var174 < ( ( 20 + 20 ) + 20 ) )
    {
        
        if ( FUNCTION_0043( 1 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Matarukaja );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var174 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.MyriadArrows );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_AKERON_SERCH()
{
    int var176;
    var176 = RNG( 100 );
    
    if ( var176 < 20 )
    {
        AI_ACT_SKILL( BattleSkill.Maragidyne6 );
        AI_TAR_RND();
        return;
    }
    else if ( var176 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
        AI_TAR_RND();
        return;
    }
    else if ( var176 < ( ( 20 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Maziodyne33 );
        AI_TAR_RND();
        return;
    }
    else if ( var176 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Magarudyne15 );
        AI_TAR_RND();
        return;
    }
    else if ( var176 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 10 ) )
    {
        
        if ( ( FUNCTION_01C7( 0x00010000 ) == 1 ) || ( FUNCTION_0043( 0x00010000 ) == 1 ) )
        {
            AI_ACT_SKILL( BattleSkill.Infuriate );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 241 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var176 < ( ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 10 ) + 10 ) )
    {
        
        if ( FUNCTION_01C7( 0x00010000 ) == 0 )
        {
            AI_ACT_SKILL( 241 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Infuriate );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_EIEN_TOKEI()
{
    int var177;
    var177 = RNG( 100 );
    
    if ( var177 < 20 )
    {
        AI_ACT_SKILL( BattleSkill.Magarudyne15 );
        AI_TAR_RND();
        return;
    }
    else if ( var177 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.Garudyne );
        AI_TAR_RND();
        return;
    }
    else if ( var177 < ( ( 20 + 20 ) + 20 ) )
    {
        
        if ( FUNCTION_0044( 0x20 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Masukunda );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Magarudyne15 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var177 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        
        if ( FUNCTION_0051( 6 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.WindBreak );
            AI_MUKOU( 6 );
            return;
        }
        else if ( FUNCTION_004D( 6 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.WindBreak );
            AI_HANSYA( 6 );
            return;
        }
        else if ( FUNCTION_004F( 6 ) == 1 )
        {
            AI_ACT_SKILL( BattleSkill.WindBreak );
            AI_KYUSYU( 6 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var177 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 20 ) )
    {
        
        if ( ( AI_ENBAD( 2 ) == 0 ) || ( AI_ENBAD( 4 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.EerieSound60 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Magarudyne15 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var177 < ( ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 20 ) + 20 ) )
    {
        
        if ( ( AI_ENBAD( 2 ) == 0 ) || ( AI_ENBAD( 4 ) == 0 ) )
        {
            AI_ACT_SKILL( BattleSkill.Tentarafoo62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Garudyne );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_MU_KYOJIN()
{
    int var178;
    var178 = RNG( 100 );
    
    if ( var178 < 10 )
    {
        AI_ACT_SKILL( BattleSkill.Mahamaon48 );
        AI_TAR_RND();
        return;
    }
    else if ( var178 < ( 10 + 10 ) )
    {
        AI_ACT_SKILL( BattleSkill.Hamaon );
        AI_TAR_RND();
        return;
    }
    else if ( var178 < ( ( 10 + 10 ) + 10 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mamudoon54 );
        AI_TAR_RND();
        return;
    }
    else if ( var178 < ( ( ( 10 + 10 ) + 10 ) + 10 ) )
    {
        AI_ACT_SKILL( BattleSkill.Mudoon );
        AI_TAR_RND();
        return;
    }
    else if ( var178 < ( ( ( ( 10 + 10 ) + 10 ) + 10 ) + 10 ) )
    {
        AI_ACT_SKILL( BattleSkill.MyriadArrows );
        AI_TAR_RND();
        return;
    }
    else if ( var178 < ( ( ( ( ( 10 + 10 ) + 10 ) + 10 ) + 10 ) + 10 ) )
    {
        AI_ACT_SKILL( BattleSkill.Deathbound );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_KONTON_KYUKURO()
{
    int var179;
    int var180;
    var179 = RNG( 100 );
    var180 = RNG( 100 );
    
    if ( FUNCTION_0033( 15 ) == 1 )
    {
        
        if ( var180 < 20 )
        {
            AI_ACT_SKILL( BattleSkill.Diarahan );
            AI_MINE();
            return;
        }
        else if ( var180 < ( 20 + 40 ) )
        {
            AI_ACT_SKILL( BattleSkill.Megidolaon39 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.PrimalForce );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var179 < 20 )
    {
        AI_ACT_SKILL( BattleSkill.Bufudyne );
        AI_TAR_RND();
        return;
    }
    else if ( var179 < ( 20 + 20 ) )
    {
        
        if ( FUNCTION_0043( 0x40 ) == 0 )
        {
            AI_ACT_SKILL( BattleSkill.Marakukaja );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( BattleSkill.Mabufudyne24 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var179 < ( ( 20 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( BattleSkill.GodsHand );
        AI_TAR_RND();
        return;
    }
    else if ( var179 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( BattleSkill.Infuriate );
        AI_TAR_RND();
        return;
    }

}


void AI_HONSYO_AEGIS()
{
}


void AI_GOUWAN_AEGIS()
{
}


void AI_CATHLE_AEGIS()
{
}


void AI_SLAVE_AEGIS()
{
}


void AI_ROYAL_AEGIS()
{
}


void AI_ZANKOKU_AEGIS()
{
}


void AI_BRAVE_AEGIS()
{
}


void AI_HANKETU_AEGIS()
{
}


void AI_ICE_AEGIS()
{
}


void AI_HAKAI_AEGIS()
{
}


void AI_IKARI_AEGIS()
{
}


void AI_SAKEBU_AEGIS()
{
}


void AI_WANDA_AEGIS()
{
}


void AI_OKUBYOU_AEGIS()
{
}


void AI_NAKU_AEGIS()
{
}


void AI_KYOUKI_AEGIS()
{
}


void AI_KYOEIM_AEGIS()
{
}


void AI_TINOHE_AEGIS()
{
}


void AI_SINKNO_AEGIS()
{
}


void AI_SULOUT_AEGIS()
{
}


void AI_AKERON_AEGIS()
{
}


void AI_KONKYU_AEGIS()
{
}


void AI_KAIDEN_AEGIS()
{
}


void AI_ONNENM_AEGIS()
{
}


void AI_TENJIN_AEGIS()
{
}


void AI_HAGURE_AEGIS()
{
}


void AI_K_GARDKILL()
{
}


void AI_H_GARDKILL()
{
}


void AI_D_GARDKILL()
{
}


void AI_S_GARDKILL()
{
}


void AI_ZAKO_DEKAJYA()
{
}


void AI_ZAKO_DEKNDA()
{
}


void AI_ZAKO_DEKAJYA_DEKNDA()
{
}


void AI_MAYA_GARDKILL()
{
}


void AI_TAIDA_ZAKO()
{
}


void test()
{
}


void kakunin()
{
}


void AI_metis()
{
}


void AI_Erebos()
{
}


void AI_Erebos_A()
{
}


void AI_Erebos_B()
{
}


void AI_TUJYOU()
{
}


void AI_Shadow_hero()
{
}


void AI_Shadow_hero_AIGISU()
{
}


void AI_Shadow_hero_YUKARI()
{
}


void AI_Shadow_hero_MITURU()
{
}


void AI_Shadow_hero_JUNPEI()
{
}


void AI_Shadow_hero_SANADA()
{
}


void AI_Shadow_hero_AMADA()
{
}


void AI_Shadow_hero_KOROMARU()
{
}


void AI_Shadow_hero_METIS()
{
}


void AI_AMADAK_AEGIS()
{
}


void AI_SANADA_AEGIS()
{
}


void AI_Junpei()
{
}


void AI_Koromaru()
{
}


void AI_YUKARI_AEGIS()
{
}


void AI_MIRURU_AEGIS()
{
}

