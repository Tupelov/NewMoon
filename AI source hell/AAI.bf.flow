
// 
// FlowScript decompiled using Atlus Script Tools by TGE (2017-2021)
// In the unfortunate case of any bugs, please report them back to me.
// 


// 
// Imports
// 

import( "AAI.bf.msg" );

// 
// Procedure declarations
// 

void AI_EVENT_1A0_BTLSTART()
{
}


void AI_EVENT_1A0_ACTSTART()
{
}


void AI_EVENT_1A0_ACTEND()
{
}


void AI_EVENT_1A1_BTLSTART()
{
}


void AI_EVENT_1A1_ACTSTART()
{
}


void AI_EVENT_1A1_ACTEND()
{
}


void AI_EVENT_1A2_BTLSTART()
{
}


void AI_EVENT_1A2_ACTSTART()
{
}


void AI_EVENT_1A2_ACTEND()
{
}


void AI_EVENT_1A3_BTLSTART()
{
}


void AI_EVENT_1A3_ACTSTART()
{
}


void AI_EVENT_1A3_ACTEND()
{
}


void AI_EVENT_1A4_BTLSTART()
{
}


void AI_EVENT_1A4_ACTSTART()
{
}


void AI_EVENT_1A4_ACTEND()
{
}


void AI_EVENT_1A5_BTLSTART()
{
}


void AI_EVENT_1A5_ACTSTART()
{
}


void AI_EVENT_1A5_ACTEND()
{
}


void AI_EVENT_1A6_BTLSTART()
{
}


void AI_EVENT_1A6_ACTSTART()
{
}


void AI_EVENT_1A6_ACTEND()
{
}


void AI_EVENT_1A7_BTLSTART()
{
}


void AI_EVENT_1A7_ACTSTART()
{
}


void AI_EVENT_1A7_ACTEND()
{
}


void AI_EVENT_1A8_BTLSTART()
{
}


void AI_EVENT_1A8_ACTSTART()
{
}


void AI_EVENT_1A8_ACTEND()
{
}


void AI_JIBAKU()
{
}


void AI_EVENT_1A9_BTLSTART()
{
}


void AI_EVENT_1A9_ACTSTART()
{
}


void AI_EVENT_1A9_ACTEND()
{
}


void AI_EVENT_1AA_BTLSTART()
{
}


void AI_EVENT_1AA_ACTSTART()
{
}


void AI_EVENT_1AA_ACTEND()
{
}


void AI_EVENT_1AB_BTLSTART()
{
}


void AI_EVENT_1AB_ACTSTART()
{
}


void AI_EVENT_1AB_ACTEND()
{
}


void AI_EVENT_1AC_BTLSTART()
{
}


void AI_EVENT_1AC_ACTSTART()
{
}


void AI_EVENT_1AC_ACTEND()
{
}


void NYX_TAROT_CHANGE()
{
}


void NYX_YAMIYO()
{
}


void NYX_YORUNO()
{
}


void AI_EVENT_1AD_BTLSTART()
{
}


void AI_EVENT_1AD_ACTSTART()
{
}


void AI_EVENT_1AD_ACTEND()
{
}


void AI_EVENT_1AE_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B0();
    EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
    MSG( 115 );
    MSG( 116 );
    FUNCTION_00B7( 0 );
    EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 3 );
    MSG( 117 );
    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1AE_ACTSTART()
{
    
    if ( FUNCTION_01BD( 1, 294 ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( -47.20f, 101.30f, -944.50f, -54.00f, 93.10f, -845.10f );
            FUNCTION_01B4( 2.90f, 297.70f, -1036.20f, -7.50f, 268.00f, -941.30f );
            FUNCTION_01B5( 112 );
            MSG( 118 );
            FUNCTION_01B3( 399.30f, 400.40f, 63.40f, 348.30f, 346.40f, -3.60f );
            FUNCTION_01B4( 54.30f, 357.40f, 229.20f, 57.50f, 305.40f, 143.80f );
            FUNCTION_01B5( 88 );
            MSG( 119 );
            FUNCTION_01B3( 31.00f, 408.90f, 456.00f, 38.80f, 367.10f, 365.40f );
            FUNCTION_01B4( -3.40f, 99.80f, 853.80f, 5.20f, 96.20f, 754.30f );
            FUNCTION_01B5( 103 );
            MSG( 120 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( FUNCTION_0036( 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 124.90f, 151.60f, -896.40f, 94.40f, 134.30f, -802.80f );
            FUNCTION_01B4( -18.80f, 63.30f, -871.50f, -21.10f, 59.00f, -771.60f );
            FUNCTION_01B5( 105 );
            MSG( 125 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( FUNCTION_0036( 50 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( -249.30f, 315.10f, -772.50f, -219.90f, 272.50f, -687.00f );
            FUNCTION_01B4( 9.20f, 112.80f, -847.80f, -7.70f, 98.20f, -750.30f );
            FUNCTION_01B5( 79 );
            MSG( 123 );
            FUNCTION_01B3( 3.60f, 83.90f, 626.90f, 10.40f, 81.30f, 527.20f );
            FUNCTION_01B4( 12.30f, 196.40f, 247.20f, 20.60f, 169.20f, 151.40f );
            FUNCTION_01B5( 160 );
            MSG( 124 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }
        else if ( ( FUNCTION_0036( 75 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
            FUNCTION_01B8();
            FUNCTION_01BA();
            OPEN_MSG_WIN();
            FUNCTION_01C1( 0 );
            FUNCTION_01B3( 371.70f, 345.00f, 215.00f, 332.40f, 304.00f, 132.70f );
            FUNCTION_01B4( 95.70f, 313.50f, 296.30f, 97.50f, 272.50f, 205.10f );
            FUNCTION_01B5( 136 );
            MSG( 121 );
            FUNCTION_01B3( -337.00f, 370.30f, -912.30f, -306.00f, 329.80f, -826.40f );
            FUNCTION_01B4( -20.30f, 204.30f, -1121.00f, -32.00f, 191.50f, -1022.50f );
            FUNCTION_01B5( 132 );
            MSG( 122 );
            CLOSE_MSG_WIN();
            FUNCTION_01B7();
            FUNCTION_01B9();
        }

    }

}


void AI_EVENT_1AE_ACTEND()
{
    FUNCTION_01AD();
}


void AI_EVENT_1EA_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 181 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 206 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1CE_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 182 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 207 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1CF_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 183 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 208 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D0_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 184 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
        MSG( 209 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D1_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 185 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 210 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D6_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 186 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 211 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D7_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 187 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 212 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D8_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 188 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 213 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1D9_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 189 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 214 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DA_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 190 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 215 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DB_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 191 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 216 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DC_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 192 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 217 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DD_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 193 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 218 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DE_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 194 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 219 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1DF_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 195 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 220 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E0_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 196 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 221 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E1_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 197 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 222 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E2_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 198 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 223 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E3_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 199 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 224 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E4_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 200 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 225 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E5_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 201 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 226 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E6_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 202 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 227 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E7_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 203 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 228 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E8_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 204 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 229 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1E9_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    FUNCTION_01B0();
    OPEN_MSG_WIN();
    
    if ( BIT_CHK( ( 0 + 321 ) ) )
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 4, 4, 2, 2 );
        MSG( 205 );
    }
    else 
    {
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 230 );
    }

    FUNCTION_00B7( 0 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1AF_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B3( 84.80f, 224.40f, 132.90f, 80.30f, 185.90f, 40.70f );
    FUNCTION_01B4( 208.00f, 186.30f, 129.40f, 179.20f, 157.30f, 38.10f );
    FUNCTION_01B5( 50 );
    MSG( 126 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1AF_ACTSTART()
{
    FUNCTION_01AD();
}


void AI_EVENT_1AF_ACTEND()
{
    
    if ( ( FUNCTION_0158( 233, 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 145.30f, 197.60f, 377.40f, 139.10f, 174.10f, 280.40f );
        FUNCTION_01B4( 190.90f, 132.20f, 633.60f, 167.90f, 112.60f, 538.30f );
        FUNCTION_01B5( 69 );
        MSG( 129 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( FUNCTION_0158( 233, 50 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -94.10f, 195.80f, 95.90f, -64.80f, 162.40f, 6.30f );
        FUNCTION_01B4( -182.50f, 152.10f, 72.80f, -129.30f, 130.50f, -9.00f );
        FUNCTION_01B5( 50 );
        MSG( 0x80 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( FUNCTION_0158( 233, 75 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 173.20f, 268.80f, -676.40f, 139.30f, 229.00f, -591.10f );
        FUNCTION_01B4( 125.30f, 98.40f, -723.50f, 92.80f, 89.10f, -629.40f );
        FUNCTION_01B5( 89 );
        MSG( 127 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1B4_BTLSTART()
{
    FUNCTION_01AD();
}


void AI_EVENT_1B4_ACTSTART()
{
    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 3 );
        MSG( 169 );
        MSG( 170 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 505 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 505 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 179 );
        MSG( 180 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 506 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 171 );
        MSG( 172 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
        MSG( 173 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 511 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 504 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
        MSG( 175 );
        MSG( 176 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1B4_ACTEND()
{
    
    if ( ( FUNCTION_0176() == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
        MSG( 177 );
        FUNCTION_00B7( 0 );
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 2 );
        MSG( 178 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( FUNCTION_0176() == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B0();
        EVT_CUTIN_FUNCTION_00B6( 0, 0, 0, 6, 4, 2, 0 );
        MSG( 167 );
        MSG( 168 );
        FUNCTION_00B7( 0 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1B0_BTLSTART()
{
    FUNCTION_01B6( 492, 0 );
}


void AI_EVENT_1B0_ACTSTART()
{
    int var0 = FUNCTION_0192( 0 );
    
    if ( FUNCTION_01BD( 0, 1 ) == 1 )
    {
        var0 = ( var0 + 1 );
        FUNCTION_0193( 10, var0 );
    }

    
    if ( ( ( FUNCTION_01EC() == 225 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) ) == 0 ) ) && ( var0 > 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 496 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, -901.60f, 101.10f, 343.80f, -816.50f );
        FUNCTION_01B4( -17.10f, 58.40f, -791.30f, -25.30f, 62.40f, -691.70f );
        FUNCTION_01B5( 170 );
        MSG( 132 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( FUNCTION_01EC() == 224 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) ) && ( MYBAD( 2, 0x00080000 ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, -901.60f, 101.10f, 343.80f, -816.50f );
        FUNCTION_01B4( -17.10f, 58.40f, -791.30f, -25.30f, 62.40f, -691.70f );
        FUNCTION_01B5( 170 );
        MSG( 131 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( FUNCTION_01EC() == 226 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) ) && ( MYBAD( 4, 0x00080000 ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, -901.60f, 101.10f, 343.80f, -816.50f );
        FUNCTION_01B4( -17.10f, 58.40f, -791.30f, -25.30f, 62.40f, -691.70f );
        FUNCTION_01B5( 170 );
        MSG( 135 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( FUNCTION_01EC() == 227 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) ) && ( MYBAD( 5, 0x00080000 ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, -901.60f, 101.10f, 343.80f, -816.50f );
        FUNCTION_01B4( -17.10f, 58.40f, -791.30f, -25.30f, 62.40f, -691.70f );
        FUNCTION_01B5( 170 );
        MSG( 137 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( FUNCTION_01EC() == 228 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) ) == 0 ) ) && ( MYBAD( 7, 0x00080000 ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, -901.60f, 101.10f, 343.80f, -816.50f );
        FUNCTION_01B4( -17.10f, 58.40f, -791.30f, -25.30f, 62.40f, -691.70f );
        FUNCTION_01B5( 170 );
        MSG( 139 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( FUNCTION_01EC() == 229 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 0 ) ) && ( MYBAD( 8, 0x00080000 ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, -901.60f, 101.10f, 343.80f, -816.50f );
        FUNCTION_01B4( -17.10f, 58.40f, -791.30f, -25.30f, 62.40f, -691.70f );
        FUNCTION_01B5( 170 );
        MSG( 141 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( FUNCTION_01EC() == 230 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) ) == 0 ) ) && ( MYBAD( 10, 0x00080000 ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 134.80f, 383.90f, -901.60f, 101.10f, 343.80f, -816.50f );
        FUNCTION_01B4( -17.10f, 58.40f, -791.30f, -25.30f, 62.40f, -691.70f );
        FUNCTION_01B5( 170 );
        MSG( 142 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1B0_ACTEND()
{
    FUNCTION_01AD();
}


void AI_EVENT_1B1_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B3( 0.00f, 175.20f, 246.10f, -11.60f, 151.40f, 149.70f );
    FUNCTION_01B4( 63.70f, 99.80f, 659.60f, 38.10f, 83.20f, 564.40f );
    FUNCTION_01B5( 83 );
    MSG( 143 );
    FUNCTION_01B3( 389.40f, 373.00f, -813.90f, 338.70f, 325.30f, -742.10f );
    FUNCTION_01B4( 227.50f, 125.70f, -688.60f, 193.80f, 106.70f, -596.40f );
    FUNCTION_01B5( 67 );
    MSG( 147 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1B1_ACTSTART()
{
    
    if ( ( FUNCTION_01BD( 0, 1 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) );
        FUNCTION_01B6( 494, 0 );
        FUNCTION_01B6( 495, 0 );
    }

}


void AI_EVENT_1B1_ACTEND()
{
    
    if ( ( ( ( FUNCTION_0158( 235, 25 ) == 1 ) && ( FUNCTION_015B( 235, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 235, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 12.90f, 329.90f, 105.10f, -5.40f, 269.70f, 27.40f );
        FUNCTION_01B4( 27.80f, 58.40f, 680.70f, -0.10f, 57.30f, 584.70f );
        FUNCTION_01B5( 161 );
        MSG( 146 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 235, 50 ) == 1 ) && ( FUNCTION_015B( 235, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 235, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -425.70f, 415.90f, -860.40f, -401.40f, 368.60f, -775.70f );
        FUNCTION_01B4( -304.80f, 197.10f, -740.20f, -287.40f, 167.60f, -646.30f );
        FUNCTION_01B5( 120 );
        MSG( 145 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 235, 75 ) == 1 ) && ( FUNCTION_015B( 235, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 235, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -422.60f, 254.00f, 146.80f, -359.50f, 213.70f, 80.50f );
        FUNCTION_01B4( -306.10f, 94.10f, 111.90f, -254.70f, 79.80f, 27.30f );
        FUNCTION_01B5( 0x40 );
        MSG( 144 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 236, 25 ) == 1 ) && ( FUNCTION_015B( 236, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 236, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 384.10f, 360.10f, -727.10f, 332.10f, 310.60f, -657.40f );
        FUNCTION_01B4( 265.20f, 214.20f, -713.00f, 228.90f, 179.30f, -626.60f );
        FUNCTION_01B5( 91 );
        MSG( 150 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 236, 50 ) == 1 ) && ( FUNCTION_015B( 236, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 236, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 422.60f, 287.40f, 145.20f, 387.40f, 244.10f, 62.20f );
        FUNCTION_01B4( 186.50f, 159.90f, 140.80f, 192.50f, 130.80f, 45.30f );
        FUNCTION_01B5( 111 );
        MSG( 149 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 236, 75 ) == 1 ) && ( FUNCTION_015B( 236, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 236, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 140.40f, 201.80f, 155.00f, 158.40f, 164.30f, 64.00f );
        FUNCTION_01B4( 188.00f, 76.30f, 150.00f, 196.50f, 66.30f, 50.80f );
        FUNCTION_01B5( 50 );
        MSG( 148 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1B2_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B3( 396.30f, 276.20f, 81.70f, 359.60f, 227.60f, 2.40f );
    FUNCTION_01B4( 361.80f, 210.60f, 613.10f, 331.10f, 172.60f, 525.90f );
    FUNCTION_01B5( 92 );
    MSG( 151 );
    FUNCTION_01B3( -425.60f, 242.80f, -664.30f, -382.50f, 202.50f, -583.60f );
    FUNCTION_01B4( -403.80f, 113.10f, -582.80f, -349.10f, 94.00f, -501.30f );
    FUNCTION_01B5( 50 );
    MSG( 155 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1B2_ACTSTART()
{
    
    if ( ( FUNCTION_01BD( 0, 1 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) );
        FUNCTION_01B6( 496, 0 );
        FUNCTION_01B6( 497, 0 );
    }

}


void AI_EVENT_1B2_ACTEND()
{
    
    if ( ( ( ( FUNCTION_0158( 237, 25 ) == 1 ) && ( FUNCTION_015B( 237, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 237, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 290.60f, 258.10f, -751.30f, 250.10f, 216.60f, -669.80f );
        FUNCTION_01B4( -85.20f, 161.90f, -681.10f, -54.90f, 136.30f, -589.30f );
        FUNCTION_01B5( 144 );
        MSG( 154 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 237, 50 ) == 1 ) && ( FUNCTION_015B( 237, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 237, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -108.80f, 281.60f, -744.50f, -75.30f, 243.10f, -658.60f );
        FUNCTION_01B4( 263.40f, 150.50f, -808.10f, 229.40f, 134.40f, -715.40f );
        FUNCTION_01B5( 160 );
        MSG( 153 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 237, 75 ) == 1 ) && ( FUNCTION_015B( 237, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 237, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -1.50f, 320.70f, 188.60f, 36.20f, 273.10f, 109.20f );
        FUNCTION_01B4( -109.70f, 103.80f, 21.00f, -37.90f, 88.80f, -47.00f );
        FUNCTION_01B5( 120 );
        MSG( 152 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 238, 25 ) == 1 ) && ( FUNCTION_015B( 238, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 238, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -318.40f, 145.60f, -498.40f, -274.30f, 118.80f, -412.80f );
        FUNCTION_01B4( -434.20f, 99.60f, -539.80f, -373.20f, 81.10f, -462.80f );
        FUNCTION_01B5( 50 );
        MSG( 158 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 238, 50 ) == 1 ) && ( FUNCTION_015B( 238, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 238, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -478.40f, 234.30f, -644.90f, -427.00f, 200.80f, -565.90f );
        FUNCTION_01B4( -371.00f, 89.50f, -650.40f, -333.20f, 80.20f, -558.30f );
        FUNCTION_01B5( 50 );
        MSG( 157 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 238, 75 ) == 1 ) && ( FUNCTION_015B( 238, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 238, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -86.20f, 254.70f, 80.20f, -87.00f, 199.40f, -3.10f );
        FUNCTION_01B4( 9.90f, 173.10f, 57.90f, -17.30f, 135.20f, -30.60f );
        FUNCTION_01B5( 50 );
        MSG( 156 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_EVENT_1B3_BTLSTART()
{
    FUNCTION_01B8();
    FUNCTION_01BA();
    OPEN_MSG_WIN();
    FUNCTION_01C1( 0 );
    FUNCTION_01B3( -205.80f, 341.10f, 353.40f, -181.20f, 295.90f, 267.60f );
    FUNCTION_01B4( -291.40f, 164.50f, 674.90f, -249.90f, 134.60f, 589.00f );
    FUNCTION_01B5( 108 );
    MSG( 159 );
    FUNCTION_01B3( 115.00f, 317.40f, -804.30f, 107.00f, 272.70f, -715.20f );
    FUNCTION_01B4( 203.60f, 64.00f, -761.60f, 177.00f, 59.70f, -665.30f );
    FUNCTION_01B5( 82 );
    MSG( 166 );
    CLOSE_MSG_WIN();
    FUNCTION_01B7();
    FUNCTION_01B9();
}


void AI_EVENT_1B3_ACTSTART()
{
    
    if ( ( FUNCTION_01BD( 0, 1 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 503 ) );
        FUNCTION_01B6( 498, 0 );
        FUNCTION_01B6( 499, 0 );
    }

}


void AI_EVENT_1B3_ACTEND()
{
    
    if ( ( ( ( FUNCTION_0158( 239, 25 ) == 1 ) && ( FUNCTION_015B( 239, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 239, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 497 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -69.70f, 262.00f, -597.60f, -94.10f, 234.30f, -504.70f );
        FUNCTION_01B4( -252.40f, 99.60f, -684.70f, -242.80f, 84.90f, -586.30f );
        FUNCTION_01B5( 83 );
        MSG( 162 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 239, 50 ) == 1 ) && ( FUNCTION_015B( 239, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 239, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -477.30f, 383.70f, -725.40f, -440.20f, 331.30f, -648.70f );
        FUNCTION_01B4( -324.90f, 108.10f, -731.20f, -306.10f, 93.00f, -634.20f );
        FUNCTION_01B5( 87 );
        MSG( 161 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 239, 75 ) == 1 ) && ( FUNCTION_015B( 239, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 239, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -422.60f, 254.00f, 146.80f, -359.50f, 213.70f, 80.50f );
        FUNCTION_01B4( -306.10f, 94.10f, 111.90f, -254.70f, 79.80f, 27.30f );
        FUNCTION_01B5( 0x40 );
        MSG( 160 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 240, 25 ) == 1 ) && ( FUNCTION_015B( 240, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 240, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 500 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 48.40f, 281.90f, 158.50f, 80.30f, 230.60f, 78.90f );
        FUNCTION_01B4( -194.60f, 90.80f, 707.30f, -157.70f, 80.30f, 615.00f );
        FUNCTION_01B5( 125 );
        MSG( 165 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 240, 50 ) == 1 ) && ( FUNCTION_015B( 240, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 240, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 501 ) );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( 382.50f, 258.80f, -800.10f, 327.90f, 222.10f, -724.80f );
        FUNCTION_01B4( 460.10f, 119.40f, -662.30f, 386.10f, 101.60f, -597.50f );
        FUNCTION_01B5( 0x40 );
        MSG( 164 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }
    else if ( ( ( ( FUNCTION_0158( 240, 75 ) == 1 ) && ( FUNCTION_015B( 240, 0x00080000 ) == 0 ) ) && ( FUNCTION_015B( 240, 0x00100000 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
        FUNCTION_01B8();
        FUNCTION_01BA();
        OPEN_MSG_WIN();
        FUNCTION_01C1( 0 );
        FUNCTION_01B3( -245.90f, 229.00f, -40.40f, -159.40f, 192.60f, -74.80f );
        FUNCTION_01B4( -156.70f, 55.30f, -7.10f, -75.80f, 54.00f, -65.90f );
        FUNCTION_01B5( 67 );
        MSG( 163 );
        CLOSE_MSG_WIN();
        FUNCTION_01B7();
        FUNCTION_01B9();
    }

}


void AI_HighPriestess()
{
}


void AI_P_TUKIBITOA()
{
    
    if ( FUNCTION_0043( 0x40 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
    }

    
    if ( AI_ENBAD( 4 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
    }

    int var3 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) ) == 0 )
    {
        
        if ( var3 < 50 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var3 < ( 50 + 20 ) )
        {
            AI_ACT_SKILL( 61 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 1 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) ) == 1 )
    {
        AI_ACT_WEAPON();
        FUNCTION_0063( 4 );
        return;
    }

    FUNCTION_0075();
}


void AI_P_TUKIBITOB()
{
    
    if ( MYHP( 0x0100, 99 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }
    else if ( MYHP( 0x0100, 99 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }

    
    if ( FUNCTION_0033( 99 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }
    else if ( FUNCTION_0033( 99 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
    }

    int var4 = RNG( 100 );
    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) )
    {
        
        if ( var4 < 50 )
        {
            AI_ACT_SKILL( 192 );
            FUNCTION_0065( 0x0100 );
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 ) )
    {
        AI_ACT_SKILL( 192 );
        FUNCTION_0065( 276 );
        return;
    }
    else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 ) )
    {
        AI_ACT_SKILL( 192 );
        FUNCTION_0065( 276 );
        return;
    }
    else 
    {
        FUNCTION_0090();
        FUNCTION_0066();
        return;
    }

    FUNCTION_0075();
}


void AI_RARE()
{
    int var6 = RNG( 100 );
    int var5 = FUNCTION_0192( 0 );
    var5 = ( var5 + 10 );
    FUNCTION_0193( 0, var5 );
    int var7 = RNG( 4 );
    int var8 = RNG( 100 );
    int var9 = FUNCTION_0192( 1 );
    int var10 = RNG( 100 );
    int var11 = FUNCTION_0192( 2 );
    FUNCTION_0033( var6 );
    FUNCTION_0033( var5 );
    
    if ( ( var9 < 3 ) && ( BIT_CHK( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 5 ) ) == 0 ) )
    {
        
        if ( ( ( ( ( ( ( BIT_CHK( ( 0 + 341 ) ) == 1 ) && ( BIT_CHK( ( 0 + 338 ) ) == 1 ) ) && ( BIT_CHK( ( 0 + 337 ) ) == 0 ) ) && ( BIT_CHK( ( 0 + 342 ) ) == 0 ) ) && ( BIT_CHK( ( 0 + 344 ) ) == 0 ) ) && ( BIT_CHK( ( 0 + 343 ) ) == 0 ) ) && ( BIT_CHK( ( ( 0 + 0x0400 ) + 1569 ) ) == 1 ) )
        {
            
            if ( var8 < 25 )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 18 ), 85 );
            }
            else if ( var8 < ( 25 + 25 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 69 ), 85 );
            }
            else if ( var8 < ( ( 25 + 25 ) + 25 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 72 ), 85 );
            }
            else 
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 70 ), 85 );
            }

        }
        else if ( ( ( ( BIT_CHK( ( 0 + 337 ) ) == 1 ) && ( BIT_CHK( ( 0 + 342 ) ) == 0 ) ) && ( BIT_CHK( ( 0 + 344 ) ) == 0 ) ) && ( BIT_CHK( ( 0 + 343 ) ) == 0 ) )
        {
            
            if ( var8 < 20 )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 18 ), 85 );
            }
            else if ( var8 < ( 20 + 20 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 69 ), 85 );
            }
            else if ( var8 < ( ( 20 + 20 ) + 20 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 72 ), 85 );
            }
            else if ( var8 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 70 ), 85 );
            }
            else 
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var5 );
                FUNCTION_01ED( ( 4000 + 75 ), 85 );
            }

        }
        else if ( ( ( BIT_CHK( ( 0 + 344 ) ) == 1 ) && ( BIT_CHK( ( 0 + 342 ) ) == 0 ) ) && ( BIT_CHK( ( 0 + 343 ) ) == 0 ) )
        {
            
            if ( var8 < 17 )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 18 ), 85 );
            }
            else if ( var8 < ( 17 + 17 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 69 ), 85 );
            }
            else if ( var8 < ( ( 17 + 17 ) + 0x10 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 72 ), 85 );
            }
            else if ( var8 < ( ( ( 17 + 17 ) + 0x10 ) + 17 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 70 ), 85 );
            }
            else if ( var8 < ( ( ( ( 17 + 17 ) + 0x10 ) + 17 ) + 0x10 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 75 ), 85 );
            }
            else 
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var5 );
                FUNCTION_01ED( ( 4000 + 74 ), 85 );
            }

        }
        else if ( ( BIT_CHK( ( 0 + 342 ) ) == 1 ) && ( BIT_CHK( ( 0 + 343 ) ) == 0 ) )
        {
            
            if ( var8 < 14 )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 18 ), 85 );
            }
            else if ( var8 < ( 14 + 14 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 69 ), 85 );
            }
            else if ( var8 < ( ( 14 + 14 ) + 15 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 72 ), 85 );
            }
            else if ( var8 < ( ( ( 14 + 14 ) + 15 ) + 14 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 70 ), 85 );
            }
            else if ( var8 < ( ( ( ( 14 + 14 ) + 15 ) + 14 ) + 14 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 75 ), 85 );
            }
            else if ( var8 < ( ( ( ( ( 14 + 14 ) + 15 ) + 14 ) + 14 ) + 15 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 74 ), 85 );
            }
            else 
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 71 ), 85 );
            }

        }
        else if ( BIT_CHK( ( 0 + 343 ) ) == 1 )
        {
            
            if ( var8 < 12 )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 18 ), 85 );
            }
            else if ( var8 < ( 12 + 13 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 69 ), 85 );
            }
            else if ( var8 < ( ( 12 + 13 ) + 12 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 72 ), 85 );
            }
            else if ( var8 < ( ( ( 12 + 13 ) + 12 ) + 13 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 70 ), 85 );
            }
            else if ( var8 < ( ( ( ( 12 + 13 ) + 12 ) + 13 ) + 12 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 75 ), 85 );
            }
            else if ( var8 < ( ( ( ( ( 12 + 13 ) + 12 ) + 13 ) + 12 ) + 13 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 74 ), 85 );
            }
            else if ( var8 < ( ( ( ( ( ( 12 + 13 ) + 12 ) + 13 ) + 12 ) + 13 ) + 12 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 71 ), 85 );
            }
            else 
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 73 ), 85 );
            }

        }
        else if ( BIT_CHK( ( ( 0 + 0x0400 ) + 1569 ) ) == 1 )
        {
            
            if ( var8 < 34 )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 18 ), 85 );
            }
            else if ( var8 < ( 34 + 33 ) )
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 69 ), 85 );
            }
            else 
            {
                var9 = ( var9 + 1 );
                FUNCTION_0193( 1, var9 );
                FUNCTION_01ED( ( 4000 + 72 ), 85 );
            }

        }

    }

    
    if ( var7 == 1 )
    {
        FUNCTION_011E( 226 );
    }
    else if ( var7 == 2 )
    {
        FUNCTION_011E( 227 );
    }
    else 
    {
        FUNCTION_011E( 228 );
    }

    
    if ( var5 > var6 )
    {
        AI_ASK_TO_LEAVE();
        return;
    }
    else 
    {
        FUNCTION_01D2( 221 );
        return;
    }

}


void AI_TheEmpress()
{
}


void AI_TheEmperor()
{
}


void AI_TheHierophant()
{
}


void AI_TheLovers()
{
}


void AI_TheChariot()
{
}


void AI_TheJustice()
{
}


void AI_JusticeTheChariot()
{
}


void AI_TheHermit()
{
}


void AI_TheHermitJuden()
{
}


void AI_WheelofFortune()
{
}


void AI_Strength()
{
}


void AI_Takaya1()
{
}


void AI_Jin1()
{
}


void AI_TheHangedMan()
{
}


void AI_H_Sekizo_1()
{
    
    if ( RNG( 1 ) == 0 )
    {
        AI_ACT_SKILL( 2 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 1 );
        AI_TAR_RND();
        return;
    }

}


void AI_H_Sekizo_2()
{
    
    if ( RNG( 1 ) == 0 )
    {
        AI_ACT_SKILL( 20 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 1 );
        AI_TAR_RND();
        return;
    }

}


void AI_H_Sekizo_3()
{
    
    if ( RNG( 1 ) == 0 )
    {
        AI_ACT_SKILL( 29 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 1 );
        AI_TAR_RND();
        return;
    }

}


void AI_H_GISEI_1()
{
    
    if ( FUNCTION_003D( 0x0400 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }
    else if ( FUNCTION_003D( 0x0400 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
        AI_JIBAKU();
        AI_ACT_SKILL( 309 );
        AI_TAR_RND();
        return;
    }

}


void AI_H_GISEI_2()
{
    
    if ( FUNCTION_003D( 0x0400 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
    }
    else if ( FUNCTION_003D( 0x0400 ) == 0 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 0 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
        AI_JIBAKU();
        AI_ACT_SKILL( 309 );
        AI_TAR_RND();
        return;
    }

}


void AI_Chidori()
{
}


void AI_Jin2()
{
}


void AI_Takaya2()
{
}


void AI_Nyx_FOOL()
{
}


void AI_Nyx_MAGICIAN()
{
}


void AI_Nyx_PRIESTESS()
{
}


void AI_Nyx_EMPRESS()
{
}


void AI_Nyx_EMPEROR()
{
}


void AI_Nyx_HIEROPHANT()
{
}


void AI_Nyx_LOVERS()
{
}


void AI_Nyx_CHARIOT()
{
}


void AI_Nyx_JUSTICE()
{
}


void AI_Nyx_HERMIT()
{
}


void AI_Nyx_FORTUNE()
{
}


void AI_Nyx_STRENGTH()
{
}


void AI_Nyx_HANGEDMAN()
{
}


void AI_Nyx_DEATH()
{
}


void AI_Nyx_DEATH_Dress()
{
}


void AI_Nyx_DEATH_Turn()
{
}


void AI_Nyx2()
{
}


void AI_KILLER()
{
    int var100 = RNG( 100 );
    int var101 = RNG( 100 );
    int var102 = RNG( 100 );
    int var103 = RNG( 100 );
    
    if ( ( FUNCTION_0044( 0x00010000 ) == 1 ) || ( FUNCTION_0044( 0x00020000 ) == 1 ) )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( var102 < 25 )
        {
            
            if ( var100 < 15 )
            {
                AI_ACT_SKILL( 6 );
                AI_TAR_RND();
                return;
            }
            else if ( var100 < ( 15 + 15 ) )
            {
                AI_ACT_SKILL( 24 );
                AI_TAR_RND();
                return;
            }
            else if ( var100 < ( ( 15 + 15 ) + 15 ) )
            {
                AI_ACT_SKILL( 33 );
                AI_TAR_RND();
                return;
            }
            else if ( var100 < ( ( ( 15 + 15 ) + 15 ) + 15 ) )
            {
                AI_ACT_SKILL( 15 );
                AI_TAR_RND();
                return;
            }
            else if ( var100 < ( ( ( ( 15 + 15 ) + 15 ) + 15 ) + 20 ) )
            {
                AI_ACT_SKILL( 142 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 147 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var102 < ( 25 + 25 ) )
        {
            
            if ( FUNCTION_004D( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                FUNCTION_0068( 3 );
                return;
            }
            else if ( FUNCTION_004F( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                FUNCTION_0069( 3 );
                return;
            }
            else if ( FUNCTION_0051( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                FUNCTION_006A( 3 );
                return;
            }
            else if ( FUNCTION_004D( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                FUNCTION_0068( 4 );
                return;
            }
            else if ( FUNCTION_004F( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                FUNCTION_0069( 4 );
                return;
            }
            else if ( FUNCTION_0051( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                FUNCTION_006A( 4 );
                return;
            }
            else if ( FUNCTION_004D( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                FUNCTION_0068( 5 );
                return;
            }
            else if ( FUNCTION_004F( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                FUNCTION_0069( 5 );
                return;
            }
            else if ( FUNCTION_0051( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                FUNCTION_006A( 5 );
                return;
            }
            else if ( FUNCTION_004D( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                FUNCTION_0068( 6 );
                return;
            }
            else if ( FUNCTION_004F( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                FUNCTION_0069( 6 );
                return;
            }
            else if ( FUNCTION_0051( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                FUNCTION_006A( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 221 );
                FUNCTION_0066();
                return;
            }

        }
        else if ( var102 < ( ( 25 + 25 ) + 25 ) )
        {
            
            if ( var103 < 50 )
            {
                AI_ACT_SKILL( 53 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 47 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var102 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            
            if ( ENWEAK_PAI( 3 ) == 1 )
            {
                AI_ACT_SKILL( 3 );
                FUNCTION_006B( 3 );
                return;
            }
            else if ( ENWEAK_PAI( 4 ) == 1 )
            {
                AI_ACT_SKILL( 21 );
                FUNCTION_006B( 4 );
                return;
            }
            else if ( ENWEAK_PAI( 5 ) == 1 )
            {
                AI_ACT_SKILL( 30 );
                FUNCTION_006B( 5 );
                return;
            }
            else if ( ENWEAK_PAI( 6 ) == 1 )
            {
                AI_ACT_SKILL( 12 );
                FUNCTION_006B( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 38 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        
        if ( var102 < 25 )
        {
            
            if ( var101 < 15 )
            {
                AI_ACT_SKILL( 39 );
                AI_TAR_RND();
                return;
            }
            else if ( var101 < ( 15 + 20 ) )
            {
                AI_ACT_SKILL( 142 );
                AI_TAR_RND();
                return;
            }
            else if ( var101 < ( ( 15 + 20 ) + 15 ) )
            {
                AI_ACT_SKILL( 147 );
                AI_TAR_RND();
                return;
            }
            else if ( var101 < ( ( ( 15 + 20 ) + 15 ) + 15 ) )
            {
                AI_ACT_SKILL( 54 );
                AI_TAR_RND();
                return;
            }
            else if ( var101 < ( ( ( ( 15 + 20 ) + 15 ) + 15 ) + 10 ) )
            {
                AI_ACT_SKILL( 93 );
                AI_TAR_RND();
                return;
            }
            else if ( var101 < ( ( ( ( ( 15 + 20 ) + 15 ) + 15 ) + 10 ) + 10 ) )
            {
                AI_ACT_SKILL( 76 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 144 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var102 < ( 25 + 25 ) )
        {
            
            if ( FUNCTION_004D( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                FUNCTION_0068( 3 );
                return;
            }
            else if ( FUNCTION_004F( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                FUNCTION_0069( 3 );
                return;
            }
            else if ( FUNCTION_0051( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                FUNCTION_006A( 3 );
                return;
            }
            else if ( FUNCTION_004D( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                FUNCTION_0068( 4 );
                return;
            }
            else if ( FUNCTION_004F( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                FUNCTION_0069( 4 );
                return;
            }
            else if ( FUNCTION_0051( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                FUNCTION_006A( 4 );
                return;
            }
            else if ( FUNCTION_004D( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                FUNCTION_0068( 5 );
                return;
            }
            else if ( FUNCTION_004F( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                FUNCTION_0069( 5 );
                return;
            }
            else if ( FUNCTION_0051( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                FUNCTION_006A( 5 );
                return;
            }
            else if ( FUNCTION_004D( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                FUNCTION_0068( 6 );
                return;
            }
            else if ( FUNCTION_004F( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                FUNCTION_0069( 6 );
                return;
            }
            else if ( FUNCTION_0051( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                FUNCTION_006A( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 221 );
                FUNCTION_0066();
                return;
            }

        }
        else if ( var102 < ( ( 25 + 25 ) + 25 ) )
        {
            
            if ( var103 < 50 )
            {
                AI_ACT_SKILL( 54 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 48 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var102 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            
            if ( ENWEAK_PAI( 3 ) == 1 )
            {
                AI_ACT_SKILL( 3 );
                FUNCTION_006B( 3 );
                return;
            }
            else if ( ENWEAK_PAI( 4 ) == 1 )
            {
                AI_ACT_SKILL( 21 );
                FUNCTION_006B( 4 );
                return;
            }
            else if ( ENWEAK_PAI( 5 ) == 1 )
            {
                AI_ACT_SKILL( 30 );
                FUNCTION_006B( 5 );
                return;
            }
            else if ( ENWEAK_PAI( 6 ) == 1 )
            {
                AI_ACT_SKILL( 12 );
                FUNCTION_006B( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 38 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_ELIZABETH()
{
    
    if ( ( ( FUNCTION_0051( 0 ) == 1 ) || ( FUNCTION_004D( 0 ) == 1 ) ) || ( FUNCTION_004F( 0 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else if ( ( ( FUNCTION_0051( 0 ) == 0 ) && ( FUNCTION_004D( 0 ) == 0 ) ) && ( FUNCTION_004F( 0 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( ( ( FUNCTION_0051( 1 ) == 1 ) || ( FUNCTION_004D( 1 ) == 1 ) ) || ( FUNCTION_004F( 1 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }
    else if ( ( ( FUNCTION_0051( 1 ) == 0 ) && ( FUNCTION_004D( 1 ) == 0 ) ) && ( FUNCTION_004F( 1 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
    }

    
    if ( ( ( FUNCTION_0051( 2 ) == 1 ) || ( FUNCTION_004D( 2 ) == 1 ) ) || ( FUNCTION_004F( 2 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }
    else if ( ( ( FUNCTION_0051( 2 ) == 0 ) && ( FUNCTION_004D( 2 ) == 0 ) ) && ( FUNCTION_004F( 2 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
    }

    
    if ( ( ( FUNCTION_0051( 3 ) == 1 ) || ( FUNCTION_004D( 3 ) == 1 ) ) || ( FUNCTION_004F( 3 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }
    else if ( ( ( FUNCTION_0051( 3 ) == 0 ) && ( FUNCTION_004D( 3 ) == 0 ) ) && ( FUNCTION_004F( 3 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) );
    }

    
    if ( ( ( FUNCTION_0051( 4 ) == 1 ) || ( FUNCTION_004D( 4 ) == 1 ) ) || ( FUNCTION_004F( 4 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }
    else if ( ( ( FUNCTION_0051( 4 ) == 0 ) && ( FUNCTION_004D( 4 ) == 0 ) ) && ( FUNCTION_004F( 4 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
    }

    
    if ( ( ( FUNCTION_0051( 5 ) == 1 ) || ( FUNCTION_004D( 5 ) == 1 ) ) || ( FUNCTION_004F( 5 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }
    else if ( ( ( FUNCTION_0051( 5 ) == 0 ) && ( FUNCTION_004D( 5 ) == 0 ) ) && ( FUNCTION_004F( 5 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }

    
    if ( ( ( FUNCTION_0051( 6 ) == 1 ) || ( FUNCTION_004D( 6 ) == 1 ) ) || ( FUNCTION_004F( 6 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }
    else if ( ( ( FUNCTION_0051( 6 ) == 0 ) && ( FUNCTION_004D( 6 ) == 0 ) ) && ( FUNCTION_004F( 6 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
    }

    
    if ( ( ( FUNCTION_0051( 8 ) == 1 ) || ( FUNCTION_004D( 8 ) == 1 ) ) || ( FUNCTION_004F( 8 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
    }
    else if ( ( ( FUNCTION_0051( 8 ) == 0 ) && ( FUNCTION_004D( 8 ) == 0 ) ) && ( FUNCTION_004F( 8 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
    }

    
    if ( ( ( FUNCTION_0051( 9 ) == 1 ) || ( FUNCTION_004D( 9 ) == 1 ) ) || ( FUNCTION_004F( 9 ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
    }
    else if ( ( ( FUNCTION_0051( 9 ) == 0 ) && ( FUNCTION_004D( 9 ) == 0 ) ) && ( FUNCTION_004F( 9 ) == 0 ) )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
    }

    int var105 = 0;
    
    if ( FUNCTION_01DE() == 1 )
    {
        var105 = FUNCTION_0192( 1 );
        var105 = ( var105 + 1 );
        FUNCTION_0193( 1, var105 );
    }

    
    if ( var105 > 100 )
    {
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( ( ( ( ( ( ( ( AI_CHK_PLAYER_ID( 2 ) == 1 ) || ( AI_CHK_PLAYER_ID( 3 ) == 1 ) ) || ( AI_CHK_PLAYER_ID( 4 ) == 1 ) ) || ( AI_CHK_PLAYER_ID( 5 ) == 1 ) ) || ( AI_CHK_PLAYER_ID( 7 ) == 1 ) ) || ( AI_CHK_PLAYER_ID( 8 ) == 1 ) ) || ( AI_CHK_PLAYER_ID( 9 ) == 1 ) ) || ( AI_CHK_PLAYER_ID( 10 ) == 1 ) )
    {
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( ( FUNCTION_0059( 278 ) == 1 ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( ( ( FUNCTION_0044( 0x00010000 ) == 1 ) || ( FUNCTION_0044( 0x00020000 ) == 1 ) ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) ) == 1 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 480 ) );
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( ( FUNCTION_0033( 50 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) ) == 0 ) )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 481 ) );
        AI_ELIZABETH_STOJKOVIC2();
        return;
    }

    
    if ( FUNCTION_0033( 30 ) == 1 )
    {
        AI_ELIZABETH_STOJKOVIC();
        return;
    }

    
    if ( ( FUNCTION_01DE() == 1 ) && ( FUNCTION_008F() == 0 ) )
    {
        
        if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else if ( ( ( ( ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 1 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 0 ) )
        {
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }
        else 
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) );
        }

    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 464 ) ) == 1 )
    {
        AI_ELIZABETH_SURUTO();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 465 ) ) == 1 )
    {
        AI_ELIZABETH_JACK();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 466 ) ) == 1 )
    {
        AI_ELIZABETH_TORU();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 467 ) ) == 1 )
    {
        AI_ELIZABETH_KUR();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 468 ) ) == 1 )
    {
        AI_ELIZABETH_META();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 469 ) ) == 1 )
    {
        AI_ELIZABETH_ARISU();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 470 ) ) == 1 )
    {
        AI_ELIZABETH_NEVI();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 471 ) ) == 1 )
    {
        AI_ELIZABETH_MASA();
        return;
    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

    AI_ACT_WAIT();
}


void AI_ELIZABETH_SURUTO()
{
    int var106 = RNG( 100 );
    FUNCTION_011E( 216 );
    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 451 ) ) == 0 ) )
    {
        
        if ( var106 < 55 )
        {
            AI_ACT_PERSONA( 48, 80 );
            AI_TAR_RND();
            return;
        }
        else if ( var106 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var106 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_JACK()
{
    int var107 = RNG( 100 );
    FUNCTION_011E( 217 );
    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 0 ) )
    {
        
        if ( var107 < 55 )
        {
            AI_ACT_PERSONA( 7, 82 );
            AI_TAR_RND();
            return;
        }
        else if ( var107 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var107 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_TORU()
{
    int var108 = RNG( 100 );
    FUNCTION_011E( 218 );
    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 0 ) )
    {
        
        if ( var108 < 55 )
        {
            AI_ACT_PERSONA( 77, 83 );
            AI_TAR_RND();
            return;
        }
        else if ( var108 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var108 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_KUR()
{
    int var109 = RNG( 100 );
    FUNCTION_011E( 219 );
    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) ) == 0 ) )
    {
        
        if ( var109 < 55 )
        {
            AI_ACT_PERSONA( 11, 81 );
            AI_TAR_RND();
            return;
        }
        else if ( var109 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var109 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_META()
{
    int var110 = RNG( 100 );
    FUNCTION_011E( 211 );
    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) ) == 0 ) )
    {
        
        if ( var110 < 55 )
        {
            AI_ACT_PERSONA( 140, 85 );
            AI_TAR_RND();
            return;
        }
        else if ( var110 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var110 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_ARISU()
{
    int var111 = RNG( 100 );
    FUNCTION_011E( 212 );
    
    if ( ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) ) == 0 ) )
    {
        
        if ( var111 < 55 )
        {
            AI_ACT_PERSONA( 91, 86 );
            AI_TAR_RND();
            return;
        }
        else if ( var111 < 70 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var111 < 85 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_NEVI()
{
    int var112 = RNG( 100 );
    FUNCTION_011E( 213 );
    
    if ( ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
    {
        
        if ( var112 < 15 )
        {
            AI_ACT_PERSONA( 0x40, 87 );
            AI_TAR_RND();
            return;
        }
        else if ( var112 < 30 )
        {
            AI_ACT_PERSONA( 0x40, 88 );
            AI_TAR_RND();
            return;
        }
        else if ( var112 < 45 )
        {
            AI_ACT_PERSONA( 0x40, 89 );
            AI_TAR_RND();
            return;
        }
        else if ( var112 < 60 )
        {
            AI_ACT_PERSONA( 0x40, 90 );
            AI_TAR_RND();
            return;
        }
        else if ( var112 < 75 )
        {
            AI_ACT_PERSONA( 0x40, 91 );
            AI_TAR_RND();
            return;
        }
        else if ( var112 < 82 )
        {
            AI_ACT_ATTACK( 105 );
            AI_TAR_RND();
            return;
        }
        else if ( var112 < 90 )
        {
            AI_ACT_ATTACK( 106 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_ATTACK( 107 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ELIZABETH_MASA();
        return;
    }

}


void AI_ELIZABETH_MASA()
{
    FUNCTION_011E( 214 );
    AI_ACT_PERSONA( 113, 84 );
    AI_TAR_RND();
}


void AI_ELIZABETH_MASA2()
{
    FUNCTION_011E( 214 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 510 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 510 ) );
        AI_ACT_PERSONA( 113, 84 );
        AI_TAR_RND();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 510 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 510 ) );
        FUNCTION_01D2( 224 );
        AI_TAR_RND();
        return;
    }

}


void AI_ELIZABETH_STOJKOVIC()
{
    FUNCTION_011E( 215 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 511 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 511 ) );
        AI_ACT_PERSONA( 46, 194 );
        FUNCTION_0066();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 511 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 511 ) );
        AI_ACT_PERSONA( 46, 84 );
        AI_TAR_RND();
        return;
    }

}


void AI_ELIZABETH_STOJKOVIC2()
{
    FUNCTION_011E( 215 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 509 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 509 ) );
        AI_ACT_PERSONA( 46, 194 );
        FUNCTION_0066();
        return;
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 509 ) ) == 1 )
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 509 ) );
        FUNCTION_01D2( 224 );
        AI_TAR_RND();
        return;
    }

}


void AI_DEBUG()
{
    
    if ( FUNCTION_003B( 4 ) == 1 )
    {
        FUNCTION_0074( 1 );
        return;
    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_OSHIETE_MAYA()
{
    int var113 = RNG( 100 );
    
    if ( FUNCTION_0158( 1, 20 ) == 1 )
    {
        
        if ( var113 < 50 )
        {
            FUNCTION_01D2( 218 );
            FUNCTION_0066();
            return;
        }
        else if ( var113 < ( 50 + 50 ) )
        {
            
            if ( ( AI_CHK_PLAYER_ID( 2 ) == 1 ) || ( AI_CHK_PLAYER_ID( 5 ) == 1 ) )
            {
                AI_ACT_WEAPON();
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                FUNCTION_01D2( 218 );
                FUNCTION_0066();
                return;
            }

        }

    }
    else if ( FUNCTION_0158( 1, 20 ) == 0 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Eagle()
{
    int var114 = RNG( 100 );
    int var115 = RNG( 100 );
    int var116 = RNG( 100 );
    
    if ( var114 < 25 )
    {
        AI_ACT_SKILL( 10 );
        AI_TAR_RND();
    }
    else if ( var114 < ( 25 + 45 ) )
    {
        
        if ( FUNCTION_0057( 13 ) == 0 )
        {
            AI_ACT_SKILL( 10 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var114 < ( ( 25 + 45 ) + 30 ) )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_HENYOU()
{
    int var117 = RNG( 100 );
    int var118 = RNG( 100 );
    
    if ( FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( var117 < 20 )
        {
            AI_ACT_SKILL( 11 );
            AI_TAR_RND();
            return;
        }
        else if ( var117 < ( 20 + 35 ) )
        {
            AI_ACT_SKILL( 14 );
            AI_TAR_RND();
        }
        else if ( var117 < ( ( 20 + 35 ) + 10 ) )
        {
            
            if ( FUNCTION_01C7( 0x80 ) == 1 )
            {
                AI_ACT_SKILL( 212 );
                FUNCTION_0066();
                return;
            }
            else if ( FUNCTION_01C7( 0x40 ) == 0 )
            {
                AI_ACT_SKILL( 218 );
                FUNCTION_0066();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( var117 < ( ( ( 20 + 35 ) + 10 ) + 5 ) )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var117 < ( ( ( ( 20 + 35 ) + 10 ) + 5 ) + 30 ) )
        {
            
            if ( FUNCTION_0040( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 69 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 11 );
                AI_TAR_RND();
                return;
            }

        }

    }
    else if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( var118 < 10 )
        {
            
            if ( FUNCTION_0057( 192 ) == 0 )
            {
                AI_ACT_SKILL( 192 );
                FUNCTION_0066();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( var118 < ( 10 + 5 ) )
        {
            
            if ( FUNCTION_01C7( 0x80 ) == 1 )
            {
                AI_ACT_SKILL( 212 );
                FUNCTION_0066();
                return;
            }
            else if ( FUNCTION_01C7( 0x40 ) == 0 )
            {
                AI_ACT_SKILL( 218 );
                FUNCTION_0066();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 14 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var118 < ( ( 10 + 5 ) + 25 ) )
        {
            AI_ACT_SKILL( 11 );
            AI_TAR_RND();
            return;
        }
        else if ( var118 < ( ( ( 10 + 5 ) + 25 ) + 35 ) )
        {
            AI_ACT_SKILL( 14 );
            AI_TAR_RND();
            return;
        }
        else if ( var118 < ( ( ( ( 10 + 5 ) + 25 ) + 35 ) + 20 ) )
        {
            
            if ( FUNCTION_0040( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 69 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( var118 < ( ( ( ( ( 10 + 5 ) + 25 ) + 35 ) + 20 ) + 5 ) )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_KING()
{
    int var119 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        AI_ACT_SKILL( 37 );
        AI_TAR_RND();
        return;
    }

    
    if ( var119 < 10 )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( 63 );
            FUNCTION_0064( 8 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 47 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var119 < ( 10 + 20 ) )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 221 );
            FUNCTION_0066();
            return;
        }

    }
    else if ( var119 < ( ( 10 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 221 );
        FUNCTION_0066();
        return;
    }
    else if ( var119 < ( ( ( 10 + 20 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 47 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 48 );
        AI_TAR_RND();
        return;
    }

}


void AI_DANCING_KAI()
{
    int var120 = RNG( 100 );
    int var121 = RNG( 100 );
    
    if ( FUNCTION_0033( 60 ) == 0 )
    {
        
        if ( var120 < 30 )
        {
            AI_ACT_SKILL( 28 );
            FUNCTION_0064( 0x00100000 );
            return;
        }
        else if ( var120 < ( 30 + 30 ) )
        {
            AI_ACT_SKILL( 19 );
            FUNCTION_0064( 0x00100000 );
            return;
        }
        else if ( var120 < ( ( 30 + 30 ) + 30 ) )
        {
            AI_ACT_SKILL( 1 );
            FUNCTION_0064( 0x00100000 );
            return;
        }
        else if ( var120 < ( ( ( 30 + 30 ) + 30 ) + 10 ) )
        {
            
            if ( FUNCTION_0040( 4 ) == 0 )
            {
                AI_ACT_SKILL( 62 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 1 );
                FUNCTION_0064( 0x00100000 );
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 60 ) == 1 )
    {
        
        if ( var121 < 50 )
        {
            AI_ACT_SKILL( 13 );
            AI_TAR_RND();
            return;
        }
        else if ( var121 < ( 50 + 5 ) )
        {
            AI_ACT_SKILL( 192 );
            FUNCTION_0060();
            return;
        }
        else if ( var121 < ( ( 50 + 5 ) + 15 ) )
        {
            AI_ACT_SKILL( 28 );
            AI_TAR_RND();
            return;
        }
        else if ( var121 < ( ( ( 50 + 5 ) + 15 ) + 15 ) )
        {
            AI_ACT_SKILL( 19 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 1 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_NAKU_KAI()
{
    int var122 = RNG( 100 );
    int var123 = RNG( 100 );
    
    if ( FUNCTION_008F() == 0 )
    {
        
        if ( var122 < 30 )
        {
            AI_ACT_SKILL( 4 );
            AI_TAR_RND();
            return;
        }
        else if ( var122 < ( 30 + 50 ) )
        {
            AI_ACT_SKILL( 2 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0040( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 68 );
            FUNCTION_0064( 0x80 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 4 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_008F() == 1 )
    {
        
        if ( var123 < 50 )
        {
            AI_ACT_SKILL( 125 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 140 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_GOUKI_KAI()
{
    int var124 = RNG( 100 );
    int var125 = RNG( 100 );
    
    if ( FUNCTION_0047() == 1 )
    {
        AI_ACT_SKILL( 214 );
        FUNCTION_0066();
        return;
    }

    
    if ( FUNCTION_01C7( 1 ) == 1 )
    {
        
        if ( var125 < 50 )
        {
            AI_ACT_SKILL( 114 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_01C7( 1 ) == 0 )
    {
        
        if ( var124 < 40 )
        {
            AI_ACT_SKILL( 214 );
            FUNCTION_0066();
            return;
        }
        else if ( var124 < ( 40 + 20 ) )
        {
            
            if ( FUNCTION_0044( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 211 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( var124 < ( ( 40 + 20 ) + 30 ) )
        {
            AI_ACT_SKILL( 140 );
            AI_TAR_RND();
            return;
        }
        else if ( var124 < ( ( ( 40 + 20 ) + 30 ) + 10 ) )
        {
            
            if ( FUNCTION_0195( 0x10 ) < 3 )
            {
                AI_ACT_SKILL( 216 );
                NOTHOJO( 272 );
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            FUNCTION_0066();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        FUNCTION_0066();
        return;
    }

}


void AI_FUKUTU_KAI()
{
    int var126 = RNG( 100 );
    int var127 = RNG( 100 );
    int var128 = RNG( 100 );
    int var129 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( 192 );
        FUNCTION_0066();
        return;
    }

    
    if ( FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( var127 < 70 )
            {
                AI_ACT_SKILL( 14 );
                AI_TAR_RND();
                return;
            }
            else if ( var127 < ( 70 + 30 ) )
            {
                AI_ACT_SKILL( 12 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WAIT();
                FUNCTION_0066();
                return;
            }

        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            
            if ( ( ( FUNCTION_004D( 6 ) == 1 ) || ( FUNCTION_004F( 6 ) == 1 ) ) || ( FUNCTION_0051( 6 ) == 1 ) )
            {
                
                if ( var129 < 50 )
                {
                    
                    if ( FUNCTION_004D( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( 231 );
                        FUNCTION_0068( 6 );
                        return;
                    }
                    else if ( FUNCTION_004F( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( 231 );
                        FUNCTION_0069( 6 );
                        return;
                    }
                    else if ( FUNCTION_0051( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( 231 );
                        FUNCTION_006A( 6 );
                        return;
                    }

                }
                else if ( var129 < ( 50 + 50 ) )
                {
                    
                    if ( var126 < 30 )
                    {
                        AI_ACT_SKILL( 12 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var126 < ( 30 + 15 ) )
                    {
                        AI_ACT_SKILL( 114 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var126 < ( ( 30 + 15 ) + 30 ) )
                    {
                        AI_ACT_SKILL( 221 );
                        FUNCTION_0066();
                        return;
                    }
                    else if ( var126 < ( ( ( 30 + 15 ) + 30 ) + 20 ) )
                    {
                        AI_ACT_SKILL( 45 );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_WEAPON();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_WAIT();
                    FUNCTION_0066();
                    return;
                }

            }
            else if ( var126 < 30 )
            {
                AI_ACT_SKILL( 12 );
                AI_TAR_RND();
                return;
            }
            else if ( var126 < ( 30 + 15 ) )
            {
                AI_ACT_SKILL( 114 );
                AI_TAR_RND();
                return;
            }
            else if ( var126 < ( ( 30 + 15 ) + 30 ) )
            {
                AI_ACT_SKILL( 221 );
                FUNCTION_0066();
                return;
            }
            else if ( var126 < ( ( ( 30 + 15 ) + 30 ) + 20 ) )
            {
                AI_ACT_SKILL( 45 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            FUNCTION_0066();
            return;
        }

    }
    else if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( var127 < 70 )
            {
                AI_ACT_SKILL( 14 );
                AI_TAR_RND();
                return;
            }
            else if ( var127 < ( 70 + 30 ) )
            {
                AI_ACT_SKILL( 12 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WAIT();
                FUNCTION_0066();
                return;
            }

        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            
            if ( ( ( FUNCTION_004D( 6 ) == 1 ) || ( FUNCTION_004F( 6 ) == 1 ) ) || ( FUNCTION_0051( 6 ) == 1 ) )
            {
                
                if ( var129 < 50 )
                {
                    
                    if ( FUNCTION_004D( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( 231 );
                        FUNCTION_0068( 6 );
                        return;
                    }
                    else if ( FUNCTION_004F( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( 231 );
                        FUNCTION_0069( 6 );
                        return;
                    }
                    else if ( FUNCTION_0051( 6 ) == 1 )
                    {
                        AI_ACT_SKILL( 231 );
                        FUNCTION_006A( 6 );
                        return;
                    }

                }
                else if ( var129 < ( 50 + 50 ) )
                {
                    
                    if ( var128 < 10 )
                    {
                        AI_ACT_SKILL( 117 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var128 < ( 10 + 25 ) )
                    {
                        AI_ACT_SKILL( 221 );
                        FUNCTION_0066();
                        return;
                    }
                    else if ( var128 < ( ( 10 + 25 ) + 35 ) )
                    {
                        AI_ACT_SKILL( 12 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var128 < ( ( ( 10 + 25 ) + 35 ) + 20 ) )
                    {
                        
                        if ( FUNCTION_01C7( 0x40 ) == 0 )
                        {
                            AI_ACT_SKILL( 218 );
                            FUNCTION_0066();
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( 114 );
                            AI_TAR_RND();
                        }

                    }
                    else if ( var128 < ( ( ( ( 10 + 25 ) + 35 ) + 20 ) + 10 ) )
                    {
                        
                        if ( FUNCTION_01C7( 0x00020000 ) == 0 )
                        {
                            AI_ACT_SKILL( 242 );
                            AI_TAR_RND();
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( 114 );
                            AI_TAR_RND();
                            return;
                        }

                    }
                    else 
                    {
                        AI_ACT_WAIT();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_WAIT();
                    FUNCTION_0066();
                    return;
                }

            }
            else if ( var128 < 10 )
            {
                AI_ACT_SKILL( 117 );
                AI_TAR_RND();
                return;
            }
            else if ( var128 < ( 10 + 25 ) )
            {
                AI_ACT_SKILL( 221 );
                FUNCTION_0066();
                return;
            }
            else if ( var128 < ( ( 10 + 25 ) + 35 ) )
            {
                AI_ACT_SKILL( 12 );
                AI_TAR_RND();
                return;
            }
            else if ( var128 < ( ( ( 10 + 25 ) + 35 ) + 20 ) )
            {
                
                if ( FUNCTION_01C7( 0x40 ) == 0 )
                {
                    AI_ACT_SKILL( 218 );
                    FUNCTION_0066();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 114 );
                    AI_TAR_RND();
                }

            }
            else if ( var128 < ( ( ( ( 10 + 25 ) + 35 ) + 20 ) + 10 ) )
            {
                
                if ( FUNCTION_01C7( 0x00020000 ) == 0 )
                {
                    AI_ACT_SKILL( 242 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 114 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_WAIT();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            FUNCTION_0066();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        FUNCTION_0066();
        return;
    }

}


void AI_GAIA_KAI()
{
    int var130 = RNG( 100 );
    int var131 = RNG( 100 );
    int var132 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( 75 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var131 < 40 )
        {
            
            if ( var132 < 10 )
            {
                AI_ACT_SKILL( 118 );
                FUNCTION_0065( 1 );
                return;
            }
            else if ( var132 < ( 10 + 90 ) )
            {
                AI_ACT_SKILL( 118 );
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( var131 < ( 40 + 40 ) )
        {
            
            if ( var132 < 10 )
            {
                AI_ACT_SKILL( 122 );
                FUNCTION_0065( 1 );
                return;
            }
            else if ( var132 < ( 10 + 90 ) )
            {
                AI_ACT_SKILL( 122 );
                FUNCTION_013D( 1 );
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_01C7( 0x0400 ) == 0 )
    {
        
        if ( var130 < 40 )
        {
            AI_ACT_SKILL( 220 );
            FUNCTION_0066();
            return;
        }
        else if ( var130 < ( 40 + 30 ) )
        {
            
            if ( FUNCTION_0044( 0x4000 ) == 0 )
            {
                AI_ACT_SKILL( 226 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 220 );
                FUNCTION_0066();
                return;
            }

        }
        else if ( var130 < ( ( 40 + 30 ) + 15 ) )
        {
            
            if ( FUNCTION_0043( 0x10 ) == 0 )
            {
                AI_ACT_SKILL( 216 );
                NOTHOJO( 272 );
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        FUNCTION_0066();
        return;
    }

}


void AI_MEGATON_KAI()
{
    int var133 = RNG( 100 );
    int var134 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var134 < 50 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else if ( var134 < ( 50 + 50 ) )
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( 147 );
        FUNCTION_0063( 0x00100000 );
        return;
    }

    
    if ( var133 < 15 )
    {
        
        if ( FUNCTION_0040( 2 ) == 0 )
        {
            AI_ACT_SKILL( 60 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 221 );
            FUNCTION_0066();
            return;
        }

    }
    else if ( var133 < ( 15 + 20 ) )
    {
        
        if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var133 < ( ( 15 + 20 ) + 35 ) )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( var133 < ( ( ( 15 + 20 ) + 35 ) + 30 ) )
    {
        AI_ACT_SKILL( 221 );
        FUNCTION_0066();
        return;
    }
    else 
    {
        AI_ACT_WAIT();
        AI_TAR_RND();
        return;
    }

}


void AI_NEMURU_KAI()
{
    int var135 = RNG( 100 );
    
    if ( AI_ENBAD( 8 ) == 1 )
    {
        AI_ACT_SKILL( 65 );
        AI_TAR_RND();
        return;
    }

    
    if ( var135 < 25 )
    {
        
        if ( FUNCTION_003C( 1 ) == 0 )
        {
            AI_ACT_SKILL( 47 );
            FUNCTION_013D( 1 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var135 < ( 25 + 35 ) )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( var135 < ( ( 25 + 35 ) + 25 ) )
    {
        AI_ACT_SKILL( 38 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0040( 8 ) == 0 )
    {
        AI_ACT_SKILL( 63 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 65 );
        AI_TAR_RND();
        return;
    }

}


void AI_JIGOKU_KAI()
{
    int var136 = RNG( 100 );
    int var137 = RNG( 100 );
    int var138 = RNG( 100 );
    int var139 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_0040( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( var137 < 70 )
            {
                AI_ACT_SKILL( 33 );
                AI_TAR_RND();
                return;
            }
            else if ( var137 < ( 70 + 30 ) )
            {
                AI_ACT_SKILL( 30 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WAIT();
                FUNCTION_0066();
                return;
            }

        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            
            if ( ( ( FUNCTION_004D( 5 ) == 1 ) || ( FUNCTION_004F( 5 ) == 1 ) ) || ( FUNCTION_0051( 5 ) == 1 ) )
            {
                
                if ( var139 < 50 )
                {
                    
                    if ( FUNCTION_004D( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( 232 );
                        FUNCTION_0068( 5 );
                        return;
                    }
                    else if ( FUNCTION_004F( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( 232 );
                        FUNCTION_0069( 5 );
                        return;
                    }
                    else if ( FUNCTION_0051( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( 232 );
                        FUNCTION_006A( 5 );
                        return;
                    }

                }
                else if ( var139 < ( 50 + 50 ) )
                {
                    
                    if ( var136 < 30 )
                    {
                        AI_ACT_SKILL( 30 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var136 < ( 30 + 20 ) )
                    {
                        AI_ACT_SKILL( 117 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var136 < ( ( 30 + 20 ) + 30 ) )
                    {
                        AI_ACT_SKILL( 221 );
                        FUNCTION_0066();
                        return;
                    }
                    else if ( var136 < ( ( ( 30 + 20 ) + 30 ) + 10 ) )
                    {
                        AI_ACT_SKILL( 51 );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_WEAPON();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_WAIT();
                    FUNCTION_0066();
                    return;
                }

            }
            else if ( var136 < 30 )
            {
                AI_ACT_SKILL( 30 );
                AI_TAR_RND();
                return;
            }
            else if ( var136 < ( 30 + 20 ) )
            {
                AI_ACT_SKILL( 117 );
                AI_TAR_RND();
                return;
            }
            else if ( var136 < ( ( 30 + 20 ) + 30 ) )
            {
                AI_ACT_SKILL( 221 );
                FUNCTION_0066();
                return;
            }
            else if ( var136 < ( ( ( 30 + 20 ) + 30 ) + 10 ) )
            {
                AI_ACT_SKILL( 51 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            FUNCTION_0066();
            return;
        }

    }
    else if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( var137 < 70 )
            {
                AI_ACT_SKILL( 33 );
                AI_TAR_RND();
                return;
            }
            else if ( var137 < ( 70 + 30 ) )
            {
                AI_ACT_SKILL( 30 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WAIT();
                FUNCTION_0066();
                return;
            }

        }
        else if ( FUNCTION_01C7( 221 ) == 0 )
        {
            
            if ( ( ( FUNCTION_004D( 5 ) == 1 ) || ( FUNCTION_004F( 5 ) == 1 ) ) || ( FUNCTION_0051( 5 ) == 1 ) )
            {
                
                if ( var139 < 50 )
                {
                    
                    if ( FUNCTION_004D( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( 232 );
                        FUNCTION_0068( 5 );
                        return;
                    }
                    else if ( FUNCTION_004F( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( 232 );
                        FUNCTION_0069( 5 );
                        return;
                    }
                    else if ( FUNCTION_0051( 5 ) == 1 )
                    {
                        AI_ACT_SKILL( 232 );
                        FUNCTION_006A( 5 );
                        return;
                    }

                }
                else if ( var139 < ( 50 + 50 ) )
                {
                    
                    if ( var138 < 20 )
                    {
                        AI_ACT_SKILL( 140 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var138 < ( 20 + 20 ) )
                    {
                        AI_ACT_SKILL( 221 );
                        FUNCTION_0066();
                        return;
                    }
                    else if ( var138 < ( ( 20 + 20 ) + 30 ) )
                    {
                        AI_ACT_SKILL( 30 );
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var138 < ( ( ( 20 + 20 ) + 30 ) + 20 ) )
                    {
                        
                        if ( FUNCTION_01C7( 0x40 ) == 0 )
                        {
                            AI_ACT_SKILL( 218 );
                            FUNCTION_0066();
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( 140 );
                            AI_TAR_RND();
                        }

                    }
                    else if ( var138 < ( ( ( ( 20 + 20 ) + 30 ) + 20 ) + 10 ) )
                    {
                        
                        if ( FUNCTION_0043( 0x00010000 ) == 0 )
                        {
                            AI_ACT_SKILL( 241 );
                            AI_TAR_RND();
                            return;
                        }
                        else 
                        {
                            AI_ACT_SKILL( 140 );
                            AI_TAR_RND();
                            return;
                        }

                    }
                    else 
                    {
                        AI_ACT_WAIT();
                        AI_TAR_RND();
                        return;
                    }

                }
                else 
                {
                    AI_ACT_WAIT();
                    FUNCTION_0066();
                    return;
                }

            }
            else if ( var138 < 20 )
            {
                AI_ACT_SKILL( 140 );
                AI_TAR_RND();
                return;
            }
            else if ( var138 < ( 20 + 20 ) )
            {
                AI_ACT_SKILL( 221 );
                FUNCTION_0066();
                return;
            }
            else if ( var138 < ( ( 20 + 20 ) + 30 ) )
            {
                AI_ACT_SKILL( 30 );
                AI_TAR_RND();
                return;
            }
            else if ( var138 < ( ( ( 20 + 20 ) + 30 ) + 20 ) )
            {
                
                if ( FUNCTION_01C7( 0x40 ) == 0 )
                {
                    AI_ACT_SKILL( 218 );
                    FUNCTION_0066();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 140 );
                    AI_TAR_RND();
                }

            }
            else if ( var138 < ( ( ( ( 20 + 20 ) + 30 ) + 20 ) + 10 ) )
            {
                
                if ( FUNCTION_0043( 0x00010000 ) == 0 )
                {
                    AI_ACT_SKILL( 241 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 140 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_WAIT();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            FUNCTION_0066();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        FUNCTION_0066();
        return;
    }

}


void AI_BURNING()
{
    int var140 = RNG( 100 );
    int var141 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var141 < 70 )
        {
            AI_ACT_SKILL( 147 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x80 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_01C7( 0x0400 ) == 0 )
    {
        
        if ( var140 < 25 )
        {
            AI_ACT_SKILL( 220 );
            FUNCTION_0066();
            return;
        }
        else if ( var140 < ( 25 + 20 ) )
        {
            
            if ( FUNCTION_0044( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 211 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 6 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var140 < ( ( 25 + 20 ) + 25 ) )
        {
            AI_ACT_SKILL( 0x80 );
            AI_TAR_RND();
            return;
        }
        else if ( var140 < ( ( ( 25 + 20 ) + 25 ) + 15 ) )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        FUNCTION_0066();
        return;
    }

}


void AI_HEIKOU_KAI()
{
    int var142 = RNG( 100 );
    int var143 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var143 < 50 )
        {
            AI_ACT_SKILL( 118 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 127 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_003E( 0x80 ) == 1 )
        {
            AI_ACT_SKILL( 202 );
            FUNCTION_0063( 0x80 );
            return;
        }
        else if ( FUNCTION_003E( 4 ) == 1 )
        {
            
            if ( FUNCTION_003D( 4 ) == 0 )
            {
                AI_ACT_SKILL( 200 );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_003D( 4 ) == 1 )
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else if ( FUNCTION_0035( 90 ) == 1 )
        {
            AI_ACT_SKILL( 193 );
            FUNCTION_0060();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 122 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_008F() == 0 )
    {
        
        if ( var142 < 10 )
        {
            AI_ACT_SKILL( 118 );
            AI_TAR_RND();
            return;
        }
        else if ( var142 < ( 10 + 5 ) )
        {
            AI_ACT_SKILL( 124 );
            AI_TAR_RND();
            return;
        }
        else if ( var142 < ( ( 10 + 5 ) + 10 ) )
        {
            AI_ACT_SKILL( 125 );
            AI_TAR_RND();
            return;
        }
        else if ( var142 < ( ( ( 10 + 5 ) + 10 ) + 5 ) )
        {
            AI_ACT_SKILL( 126 );
            AI_TAR_RND();
            return;
        }
        else if ( var142 < ( ( ( ( 10 + 5 ) + 10 ) + 5 ) + 10 ) )
        {
            AI_ACT_SKILL( 127 );
            AI_TAR_RND();
            return;
        }
        else if ( var142 < ( ( ( ( ( 10 + 5 ) + 10 ) + 5 ) + 10 ) + 15 ) )
        {
            
            if ( FUNCTION_0058( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 0x80 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 129 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var142 < ( ( ( ( ( ( 10 + 5 ) + 10 ) + 5 ) + 10 ) + 15 ) + 25 ) )
        {
            AI_ACT_SKILL( 129 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_01C7( 0x0400 ) == 0 )
        {
            AI_ACT_SKILL( 220 );
            FUNCTION_0066();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x80 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        FUNCTION_0066();
        return;
    }

}


void AI_TENBATU()
{
    int var144 = RNG( 100 );
    
    if ( ( AI_ENBAD( 0x10 ) == 1 ) && ( FUNCTION_01C7( 0x00010000 ) == 0 ) )
    {
        AI_ACT_SKILL( 241 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_01C7( 0x00010000 ) == 1 )
    {
        AI_ACT_SKILL( 66 );
        AI_TAR_RND();
        return;
    }

    
    if ( var144 < 30 )
    {
        AI_ACT_SKILL( 38 );
        AI_TAR_RND();
        return;
    }
    else if ( var144 < ( 30 + 30 ) )
    {
        
        if ( FUNCTION_0057( 39 ) == 0 )
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 38 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var144 < ( ( 30 + 30 ) + 30 ) )
    {
        
        if ( FUNCTION_01C7( 0x00010000 ) == 1 )
        {
            AI_ACT_SKILL( 66 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 241 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0043( 0x00010000 ) == 0 )
    {
        AI_ACT_SKILL( 241 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }

}


void AI_ROYAL_KAI()
{
    int var145 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_0033( 90 ) == 1 )
        {
            AI_ACT_SKILL( 192 );
            FUNCTION_0060();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_003E( 1 ) == 1 )
    {
        AI_ACT_SKILL( 237 );
        FUNCTION_0063( 1 );
        return;
    }

    
    if ( FUNCTION_003E( 4 ) == 1 )
    {
        AI_ACT_SKILL( 199 );
        FUNCTION_0063( 4 );
        return;
    }

    
    if ( FUNCTION_003E( 0x80 ) == 1 )
    {
        AI_ACT_SKILL( 202 );
        FUNCTION_0063( 0x80 );
        return;
    }

    
    if ( FUNCTION_003E( 8 ) == 1 )
    {
        AI_ACT_SKILL( 199 );
        FUNCTION_0063( 8 );
        return;
    }

    
    if ( var145 < 20 )
    {
        
        if ( AI_CHK_PLAYER_ID( 2 ) == 1 )
        {
            AI_ACT_SKILL( 57 );
            FUNCTION_0065( 2 );
            return;
        }
        else if ( ( ( AI_ENBAD( 1 ) == 1 ) || ( AI_ENBAD( 4 ) == 1 ) ) || ( AI_ENBAD( 0x80 ) == 1 ) )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( ( ( AI_ENBAD( 1 ) == 0 ) && ( AI_ENBAD( 4 ) == 0 ) ) && ( AI_ENBAD( 0x80 ) == 0 ) )
        {
            AI_ACT_SKILL( 57 );
            FUNCTION_0064( 1 );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            FUNCTION_0066();
            return;
        }

    }
    else if ( var145 < ( 20 + 10 ) )
    {
        
        if ( ( ( AI_ENBAD( 1 ) == 0 ) || ( AI_ENBAD( 4 ) == 0 ) ) || ( AI_ENBAD( 0x80 ) == 0 ) )
        {
            AI_ACT_SKILL( 58 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 125 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var145 < ( ( 20 + 10 ) + 20 ) )
    {
        
        if ( ( ( AI_ENBAD( 4 ) == 1 ) || ( AI_ENBAD( 1 ) == 1 ) ) || ( AI_ENBAD( 0x80 ) == 1 ) )
        {
            AI_ACT_SKILL( 117 );
            AI_TAR_RND();
            return;
        }
        else if ( ( ( AI_ENBAD( 13 ) == 0 ) && ( AI_ENBAD( 1 ) == 0 ) ) && ( AI_ENBAD( 0x80 ) == 0 ) )
        {
            AI_ACT_SKILL( 61 );
            FUNCTION_0064( 13 );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( var145 < ( ( ( 20 + 10 ) + 20 ) + 10 ) )
    {
        
        if ( ( ( AI_ENBAD( 4 ) == 0 ) || ( AI_ENBAD( 1 ) == 0 ) ) || ( AI_ENBAD( 0x80 ) == 0 ) )
        {
            AI_ACT_SKILL( 62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var145 < ( ( ( ( 20 + 10 ) + 20 ) + 10 ) + 20 ) )
    {
        
        if ( ( ( AI_ENBAD( 4 ) == 1 ) || ( AI_ENBAD( 1 ) == 1 ) ) || ( AI_ENBAD( 0x80 ) == 1 ) )
        {
            AI_ACT_SKILL( 68 );
            AI_TAR_RND();
            return;
        }
        else if ( ( ( AI_ENBAD( 13 ) == 0 ) && ( AI_ENBAD( 1 ) == 0 ) ) && ( AI_ENBAD( 0x80 ) == 0 ) )
        {
            AI_ACT_SKILL( 68 );
            FUNCTION_0064( 0x80 );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            FUNCTION_0066();
            return;
        }

    }
    else if ( var145 < ( ( ( ( ( 20 + 10 ) + 20 ) + 10 ) + 20 ) + 10 ) )
    {
        
        if ( ( ( AI_ENBAD( 4 ) == 0 ) || ( AI_ENBAD( 1 ) == 0 ) ) || ( AI_ENBAD( 0x80 ) == 0 ) )
        {
            AI_ACT_SKILL( 69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( 143 );
        AI_TAR_RND();
        return;
    }

}


void AI_NORBLE_KAI()
{
    int var146 = RNG( 100 );
    int var147 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_0058( 144 ) == 0 )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 75 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0033( 20 ) == 0 )
    {
        
        if ( var146 < 25 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else if ( var146 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }
        else if ( var146 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }
        else if ( var146 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( FUNCTION_0033( 20 ) == 1 )
    {
        
        if ( var147 < 18 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else if ( var147 < ( 18 + 18 ) )
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }
        else if ( var147 < ( ( 18 + 18 ) + 18 ) )
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }
        else if ( var147 < ( ( ( 18 + 18 ) + 18 ) + 18 ) )
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }
        else if ( var147 < ( ( ( ( 18 + 18 ) + 18 ) + 18 ) + 7 ) )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( var147 < ( ( ( ( ( 18 + 18 ) + 18 ) + 18 ) + 7 ) + 7 ) )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( var147 < ( ( ( ( ( ( 18 + 18 ) + 18 ) + 18 ) + 7 ) + 7 ) + 7 ) )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }
        else if ( var147 < ( ( ( ( ( ( ( 18 + 18 ) + 18 ) + 18 ) + 7 ) + 7 ) + 7 ) + 7 ) )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_NIKUYOKU_KAI()
{
    int var148 = RNG( 100 );
    int var149 = RNG( 100 );
    
    if ( FUNCTION_004D( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        FUNCTION_0068( 3 );
        return;
    }
    else if ( FUNCTION_004F( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        FUNCTION_0069( 3 );
        return;
    }
    else if ( FUNCTION_0051( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        FUNCTION_006A( 3 );
        return;
    }

    
    if ( FUNCTION_0033( 30 ) == 0 )
    {
        
        if ( var148 < 20 )
        {
            AI_ACT_SKILL( 94 );
            AI_TAR_RND();
            return;
        }
        else if ( var148 < ( 20 + 15 ) )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( var148 < ( ( 20 + 15 ) + 25 ) )
        {
            AI_ACT_SKILL( 53 );
            AI_TAR_RND();
            return;
        }
        else if ( var148 < ( ( ( 20 + 15 ) + 25 ) + 10 ) )
        {
            
            if ( FUNCTION_01C7( 0x00010000 ) == 0 )
            {
                AI_ACT_SKILL( 241 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( ( ( FUNCTION_0044( 1 ) == 1 ) || ( FUNCTION_0044( 0x40 ) == 1 ) ) || ( FUNCTION_0044( 0x10 ) == 1 ) )
        {
            AI_ACT_SKILL( 223 );
            AI_TAR_RND();
            return;
        }
        else if ( ( ( FUNCTION_0043( 2 ) == 1 ) || ( FUNCTION_0043( 0x80 ) == 1 ) ) || ( FUNCTION_0043( 0x20 ) == 1 ) )
        {
            AI_ACT_SKILL( 212 );
            AI_TAR_RND();
            return;
        }
        else if ( var149 < 30 )
        {
            AI_ACT_SKILL( 93 );
            AI_TAR_RND();
            return;
        }
        else if ( var149 < ( 30 + 30 ) )
        {
            AI_ACT_SKILL( 52 );
            AI_TAR_RND();
            return;
        }
        else if ( var149 < ( ( 30 + 30 ) + 20 ) )
        {
            
            if ( FUNCTION_0043( 1 ) == 0 )
            {
                AI_ACT_SKILL( 214 );
                NOTHOJO( 5 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 93 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var149 < ( ( ( 30 + 30 ) + 20 ) + 20 ) )
        {
            
            if ( FUNCTION_0043( 0x40 ) == 0 )
            {
                AI_ACT_SKILL( 218 );
                NOTHOJO( 0x40 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 52 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_ZENNOU()
{
    int var150 = RNG( 100 );
    int var151 = RNG( 100 );
    
    if ( FUNCTION_0044( 0x00020000 ) == 1 )
    {
        
        if ( FUNCTION_0049( 5 ) == 0 )
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0049( 5 ) == 1 )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( FUNCTION_0033( 30 ) == 0 )
        {
            
            if ( FUNCTION_0159( 1, 5 ) == 0 )
            {
                AI_ACT_SKILL( 94 );
                FUNCTION_0065( 1 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 38 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var150 < 20 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( var150 < ( 20 + 20 ) )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( var150 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }
        else if ( var150 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( ( FUNCTION_0162( 1, 9 ) == 1 ) && ( FUNCTION_015B( 1, 0x00100000 ) == 0 ) )
    {
        
        if ( ( FUNCTION_0160( 1, 3 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 3 );
            FUNCTION_0065( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 4 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 21 );
            FUNCTION_0065( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 5 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 30 );
            FUNCTION_0065( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 6 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 12 );
            FUNCTION_0065( 1 );
        }

    }

    
    if ( ( FUNCTION_0162( 1, 18 ) == 1 ) && ( FUNCTION_015B( 1, 0x00100000 ) == 0 ) )
    {
        
        if ( ( FUNCTION_0160( 1, 3 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 3 );
            FUNCTION_0065( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 4 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 21 );
            FUNCTION_0065( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 5 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 30 );
            FUNCTION_0065( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 6 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 12 );
            FUNCTION_0065( 1 );
        }

    }

    
    if ( ( FUNCTION_0162( 1, 27 ) == 1 ) && ( FUNCTION_015B( 1, 0x00100000 ) == 0 ) )
    {
        
        if ( ( FUNCTION_0160( 1, 3 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 3 );
            FUNCTION_0065( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 4 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 21 );
            FUNCTION_0065( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 5 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 30 );
            FUNCTION_0065( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 6 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 12 );
            FUNCTION_0065( 1 );
        }

    }

    
    if ( ( FUNCTION_0162( 1, 36 ) == 1 ) && ( FUNCTION_015B( 1, 0x00100000 ) == 0 ) )
    {
        
        if ( ( FUNCTION_0160( 1, 3 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 3 );
            FUNCTION_0065( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 4 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 21 );
            FUNCTION_0065( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 5 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 30 );
            FUNCTION_0065( 1 );
            return;
        }
        else if ( ( FUNCTION_0160( 1, 6 ) == 1 ) && ( FUNCTION_0057( 94 ) == 0 ) )
        {
            AI_ACT_SKILL( 12 );
            FUNCTION_0065( 1 );
        }

    }

    
    if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( var150 < 20 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( var150 < ( 20 + 20 ) )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( var150 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }
        else if ( var150 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 38 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( ( FUNCTION_0033( 50 ) == 1 ) && ( FUNCTION_0033( 20 ) == 0 ) )
    {
        
        if ( var151 < 25 )
        {
            AI_ACT_SKILL( 54 );
            AI_TAR_RND();
            return;
        }
        else if ( var151 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( 48 );
            AI_TAR_RND();
            return;
        }
        else if ( var151 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( 38 );
            AI_TAR_RND();
            return;
        }
        else if ( var151 < ( ( ( 25 + 25 ) + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( FUNCTION_0033( 20 ) == 1 )
    {
        
        if ( ENWEAK_ST_PAI( 3 ) == 1 )
        {
            AI_ACT_SKILL( 3 );
            FUNCTION_006B( 3 );
            return;
        }
        else if ( ENWEAK_ST_PAI( 4 ) == 1 )
        {
            AI_ACT_SKILL( 21 );
            FUNCTION_006B( 4 );
            return;
        }
        else if ( ENWEAK_ST_PAI( 6 ) == 1 )
        {
            AI_ACT_SKILL( 12 );
            FUNCTION_006B( 6 );
            return;
        }
        else if ( ENWEAK_ST_PAI( 5 ) == 1 )
        {
            AI_ACT_SKILL( 30 );
            FUNCTION_006B( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_FUNNU_KAI()
{
    int var152 = RNG( 100 );
    int var153 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_0033( 20 ) == 0 )
    {
        
        if ( var152 < 20 )
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }
        else if ( var152 < ( 20 + 20 ) )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else if ( var152 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( 220 );
            FUNCTION_0066();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 20 ) == 1 )
    {
        
        if ( var153 < 50 )
        {
            AI_ACT_SKILL( 40 );
            AI_TAR_RND();
            return;
        }
        else if ( var153 < ( 50 + 50 ) )
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_AIHEK()
{
    int var154 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_005E( 20 ) == 1 )
    {
        AI_ACT_SKILL( 221 );
        FUNCTION_0066();
        return;
    }

    
    if ( var154 < 5 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( var154 < ( 5 + 20 ) )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( 67 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var154 < ( ( 5 + 20 ) + 15 ) )
    {
        
        if ( FUNCTION_0044( 0x00400000 ) == 0 )
        {
            AI_ACT_SKILL( 74 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var154 < ( ( ( 5 + 20 ) + 15 ) + 25 ) )
    {
        AI_ACT_SKILL( 143 );
        AI_TAR_RND();
        return;
    }
    else if ( var154 < ( ( ( ( 5 + 20 ) + 15 ) + 25 ) + 20 ) )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }
    else if ( var154 < ( ( ( ( ( 5 + 20 ) + 15 ) + 25 ) + 20 ) + 5 ) )
    {
        
        if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var154 < ( ( ( ( ( ( 5 + 20 ) + 15 ) + 25 ) + 20 ) + 5 ) + 5 ) )
    {
        
        if ( FUNCTION_0044( 0x20 ) == 0 )
        {
            AI_ACT_SKILL( 209 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var154 < ( ( ( ( ( ( ( 5 + 20 ) + 15 ) + 25 ) + 20 ) + 5 ) + 5 ) + 5 ) )
    {
        
        if ( FUNCTION_0044( 2 ) == 0 )
        {
            AI_ACT_SKILL( 207 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_KYOUSIN()
{
    int var155 = RNG( 100 );
    int var156 = RNG( 100 );
    int var157 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var156 < 50 )
        {
            AI_ACT_SKILL( 29 );
            AI_TAR_RND();
            return;
        }
        else if ( var156 < ( 50 + 50 ) )
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }

    
    if ( FUNCTION_0033( 30 ) == 1 )
    {
        
        if ( var157 < 20 )
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }
        else if ( var157 < ( 20 + 20 ) )
        {
            
            if ( AI_ENBAD( 0x80 ) == 1 )
            {
                AI_ACT_SKILL( 0x20 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 69 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var157 < ( ( 20 + 20 ) + 30 ) )
        {
            AI_ACT_SKILL( 221 );
            FUNCTION_0066();
            return;
        }
        else if ( var157 < ( ( ( 20 + 20 ) + 30 ) + 30 ) )
        {
            
            if ( FUNCTION_004D( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                FUNCTION_0068( 5 );
                return;
            }
            else if ( FUNCTION_004F( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                FUNCTION_0069( 5 );
                return;
            }
            else if ( FUNCTION_0051( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                FUNCTION_006A( 5 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 0x20 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( var155 < 20 )
    {
        
        if ( AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var155 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( 0x20 );
        AI_TAR_RND();
        return;
    }
    else if ( var155 < ( ( 20 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 221 );
        FUNCTION_0066();
        return;
    }
    else if ( var155 < ( ( ( 20 + 20 ) + 20 ) + 30 ) )
    {
        AI_ACT_SKILL( 29 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_MAGS_KAI()
{
    int var158 = RNG( 100 );
    int var159 = RNG( 100 );
    int var160 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var159 < 45 )
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }
        else if ( var159 < ( 45 + 15 ) )
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }
        else if ( var159 < ( ( 45 + 15 ) + 40 ) )
        {
            
            if ( FUNCTION_0033( 30 ) == 1 )
            {
                
                if ( FUNCTION_004D( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    FUNCTION_0068( 4 );
                    return;
                }
                else if ( FUNCTION_004F( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    FUNCTION_0069( 4 );
                    return;
                }
                else if ( FUNCTION_0051( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    FUNCTION_006A( 4 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 23 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( 23 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }

    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( var158 < 35 )
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }
        else if ( var158 < ( 35 + 5 ) )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var158 < ( ( 35 + 5 ) + 20 ) )
        {
            AI_ACT_SKILL( 221 );
            FUNCTION_0066();
            return;
        }
        else if ( var158 < ( ( ( 35 + 5 ) + 20 ) + 20 ) )
        {
            
            if ( FUNCTION_0043( 0x00020000 ) == 0 )
            {
                AI_ACT_SKILL( 242 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 23 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( var160 < 50 )
        {
            AI_ACT_SKILL( 21 );
            FUNCTION_0060();
            return;
        }
        else if ( var160 < ( 50 + 50 ) )
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }
        else if ( var160 < ( ( 50 + 50 ) + 50 ) )
        {
            AI_ACT_SKILL( 221 );
            FUNCTION_0066();
            return;
        }
        else if ( FUNCTION_004D( 4 ) == 1 )
        {
            AI_ACT_SKILL( 230 );
            FUNCTION_0068( 4 );
            return;
        }
        else if ( FUNCTION_004F( 4 ) == 1 )
        {
            AI_ACT_SKILL( 230 );
            FUNCTION_0069( 4 );
            return;
        }
        else if ( FUNCTION_0051( 4 ) == 1 )
        {
            AI_ACT_SKILL( 230 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_GRAND_MAGS()
{
    int var161 = RNG( 100 );
    int var162 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var162 < 50 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( var162 < ( 50 + 30 ) )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var161 < 20 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( var161 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        return;
    }
    else if ( var161 < ( ( 20 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 221 );
        FUNCTION_0066();
        return;
    }
    else if ( var161 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        
        if ( AI_ENBAD( 4 ) == 0 )
        {
            AI_ACT_SKILL( 62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var161 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 15 ) )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_KYOURAN_MALIA()
{
    int var163 = RNG( 100 );
    
    if ( var163 < 20 )
    {
        AI_ACT_SKILL( 21 );
        AI_TAR_RND();
        return;
    }
    else if ( var163 < ( 20 + 25 ) )
    {
        AI_ACT_SKILL( 24 );
        AI_TAR_RND();
        return;
    }
    else if ( var163 < ( ( 20 + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( 53 );
        AI_TAR_RND();
        return;
    }
    else if ( var163 < ( ( ( 20 + 25 ) + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( 54 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_ABYSS_MOTHER()
{
    int var164 = RNG( 100 );
    int var165 = RNG( 100 );
    
    if ( AI_ENBAD( 8 ) == 1 )
    {
        
        if ( var165 < 50 )
        {
            AI_ACT_SKILL( 65 );
            AI_TAR_RND();
            return;
        }
        else if ( var165 < ( 50 + 50 ) )
        {
            
            if ( var164 < 25 )
            {
                
                if ( FUNCTION_0040( 8 ) == 0 )
                {
                    AI_ACT_SKILL( 67 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 48 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( var164 < ( 25 + 5 ) )
            {
                AI_ACT_WEAPON();
                AI_TAR_RND();
                return;
            }
            else if ( var164 < ( ( 25 + 5 ) + 25 ) )
            {
                AI_ACT_SKILL( 46 );
                AI_TAR_RND();
                return;
            }
            else if ( var164 < ( ( ( 25 + 5 ) + 25 ) + 25 ) )
            {
                AI_ACT_SKILL( 48 );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0044( 2 ) == 0 )
            {
                AI_ACT_SKILL( 207 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 48 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( var164 < 25 )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( 67 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 48 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var164 < ( 25 + 5 ) )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( var164 < ( ( 25 + 5 ) + 25 ) )
    {
        AI_ACT_SKILL( 46 );
        AI_TAR_RND();
        return;
    }
    else if ( var164 < ( ( ( 25 + 5 ) + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( 48 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 2 ) == 0 )
    {
        AI_ACT_SKILL( 207 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 48 );
        AI_TAR_RND();
        return;
    }

}


void AI_KING_CATHLE()
{
    int var166 = RNG( 100 );
    int var167 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var167 < 50 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 120 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var166 < 20 )
    {
        AI_ACT_SKILL( 220 );
        FUNCTION_0066();
        return;
    }
    else if ( var166 < ( 20 + 10 ) )
    {
        
        if ( FUNCTION_0040( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var166 < ( ( 20 + 10 ) + 25 ) )
    {
        AI_ACT_SKILL( 120 );
        AI_TAR_RND();
        return;
    }
    else if ( var166 < ( ( ( 20 + 10 ) + 25 ) + 20 ) )
    {
        AI_ACT_SKILL( 33 );
        AI_TAR_RND();
        return;
    }
    else if ( var166 < ( ( ( ( 20 + 10 ) + 25 ) + 20 ) + 10 ) )
    {
        AI_ACT_SKILL( 30 );
        AI_TAR_RND();
        return;
    }
    else if ( var166 < ( ( ( ( ( 20 + 10 ) + 25 ) + 20 ) + 10 ) + 10 ) )
    {
        
        if ( FUNCTION_0051( 5 ) == 1 )
        {
            AI_ACT_SKILL( 232 );
            FUNCTION_006A( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_WHITE_SIJIL()
{
    int var168 = RNG( 100 );
    int var169 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var169 < 50 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var168 < 20 )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }
    else if ( var168 < ( 20 + 30 ) )
    {
        AI_ACT_SKILL( 221 );
        FUNCTION_0066();
        return;
    }
    else if ( var168 < ( ( 20 + 30 ) + 20 ) )
    {
        AI_ACT_SKILL( 54 );
        AI_TAR_RND();
        return;
    }
    else if ( var168 < ( ( ( 20 + 30 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 70 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_INYOKU_HEBI()
{
    int var170 = RNG( 100 );
    int var171 = RNG( 100 );
    int var172 = RNG( 100 );
    int var173 = RNG( 100 );
    
    if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( var171 < 30 )
        {
            FUNCTION_0074( 88 );
            AI_TAR_RND();
            return;
        }
        else if ( var171 < ( 30 + 25 ) )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( var171 < ( ( 30 + 25 ) + 15 ) )
        {
            AI_ACT_SKILL( 58 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 48 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0035( 15 ) == 1 )
    {
        
        if ( var172 < 40 )
        {
            AI_ACT_SKILL( 193 );
            FUNCTION_0060();
            return;
        }
        else if ( var172 < ( 40 + 40 ) )
        {
            AI_ACT_SKILL( 197 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_003E( 0x00100000 ) == 1 )
    {
        
        if ( var173 < 60 )
        {
            AI_ACT_SKILL( 201 );
            FUNCTION_0063( 0x00100000 );
            return;
        }
        else if ( var173 < ( 60 + 20 ) )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 46 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var170 < 25 )
    {
        
        if ( FUNCTION_0040( 1 ) == 0 )
        {
            AI_ACT_SKILL( 58 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var170 < ( 25 + 25 ) )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        return;
    }
    else if ( var170 < ( ( 25 + 25 ) + 25 ) )
    {
        
        if ( FUNCTION_003B( 1 ) == 1 )
        {
            AI_ACT_SKILL( 70 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( 46 );
        AI_TAR_RND();
        return;
    }

}


void AI_OMEGA_TANK()
{
    int var174 = RNG( 100 );
    int var175 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var175 < 30 )
        {
            AI_ACT_SKILL( 147 );
            AI_TAR_RND();
            return;
        }
        else if ( var175 < ( 30 + 30 ) )
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var174 < 20 )
    {
        AI_ACT_SKILL( 220 );
        FUNCTION_0066();
        return;
    }
    else if ( var174 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( 147 );
        AI_TAR_RND();
        return;
    }
    else if ( var174 < ( ( 20 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 143 );
        AI_TAR_RND();
        return;
    }
    else if ( var174 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        
        if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_LAST_SAMRAI()
{
    int var176 = RNG( 100 );
    int var177 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var177 < 30 )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else if ( var177 < ( 30 + 40 ) )
        {
            AI_ACT_SKILL( 142 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var176 < 20 )
    {
        AI_ACT_SKILL( 144 );
        AI_TAR_RND();
        return;
    }
    else if ( var176 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( 220 );
        FUNCTION_0066();
        return;
    }
    else if ( var176 < ( ( 20 + 20 ) + 20 ) )
    {
        
        if ( FUNCTION_0043( 1 ) == 0 )
        {
            AI_ACT_SKILL( 215 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var176 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 142 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_AKERON_SERCH()
{
    int var178 = RNG( 100 );
    
    if ( var178 < 20 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( var178 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( 24 );
        AI_TAR_RND();
        return;
    }
    else if ( var178 < ( ( 20 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 33 );
        AI_TAR_RND();
        return;
    }
    else if ( var178 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 15 );
        AI_TAR_RND();
        return;
    }
    else if ( var178 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 10 ) )
    {
        
        if ( ( FUNCTION_01C7( 0x00010000 ) == 1 ) || ( FUNCTION_0043( 0x00010000 ) == 1 ) )
        {
            AI_ACT_SKILL( 67 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 241 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var178 < ( ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 10 ) + 10 ) )
    {
        
        if ( FUNCTION_01C7( 0x00010000 ) == 0 )
        {
            AI_ACT_SKILL( 241 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 67 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_EIEN_TOKEI()
{
    int var179 = RNG( 100 );
    
    if ( var179 < 20 )
    {
        AI_ACT_SKILL( 15 );
        AI_TAR_RND();
        return;
    }
    else if ( var179 < ( 20 + 20 ) )
    {
        AI_ACT_SKILL( 12 );
        AI_TAR_RND();
        return;
    }
    else if ( var179 < ( ( 20 + 20 ) + 20 ) )
    {
        
        if ( FUNCTION_0044( 0x20 ) == 0 )
        {
            AI_ACT_SKILL( 209 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var179 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        
        if ( FUNCTION_0051( 6 ) == 1 )
        {
            AI_ACT_SKILL( 231 );
            FUNCTION_006A( 6 );
            return;
        }
        else if ( FUNCTION_004D( 6 ) == 1 )
        {
            AI_ACT_SKILL( 231 );
            FUNCTION_0068( 6 );
            return;
        }
        else if ( FUNCTION_004F( 6 ) == 1 )
        {
            AI_ACT_SKILL( 231 );
            FUNCTION_0069( 6 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var179 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 20 ) )
    {
        
        if ( ( AI_ENBAD( 2 ) == 0 ) || ( AI_ENBAD( 4 ) == 0 ) )
        {
            AI_ACT_SKILL( 60 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var179 < ( ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 20 ) + 20 ) )
    {
        
        if ( ( AI_ENBAD( 2 ) == 0 ) || ( AI_ENBAD( 4 ) == 0 ) )
        {
            AI_ACT_SKILL( 62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_MU_KYOJIN()
{
    int var180 = RNG( 100 );
    
    if ( var180 < 10 )
    {
        AI_ACT_SKILL( 48 );
        AI_TAR_RND();
        return;
    }
    else if ( var180 < ( 10 + 10 ) )
    {
        AI_ACT_SKILL( 47 );
        AI_TAR_RND();
        return;
    }
    else if ( var180 < ( ( 10 + 10 ) + 10 ) )
    {
        AI_ACT_SKILL( 54 );
        AI_TAR_RND();
        return;
    }
    else if ( var180 < ( ( ( 10 + 10 ) + 10 ) + 10 ) )
    {
        AI_ACT_SKILL( 53 );
        AI_TAR_RND();
        return;
    }
    else if ( var180 < ( ( ( ( 10 + 10 ) + 10 ) + 10 ) + 10 ) )
    {
        AI_ACT_SKILL( 142 );
        AI_TAR_RND();
        return;
    }
    else if ( var180 < ( ( ( ( ( 10 + 10 ) + 10 ) + 10 ) + 10 ) + 10 ) )
    {
        AI_ACT_SKILL( 0x80 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_KONTON_KYUKURO()
{
    int var181 = RNG( 100 );
    int var182 = RNG( 100 );
    
    if ( FUNCTION_0033( 15 ) == 1 )
    {
        
        if ( var182 < 20 )
        {
            AI_ACT_SKILL( 194 );
            FUNCTION_0066();
            return;
        }
        else if ( var182 < ( 20 + 40 ) )
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var181 < 20 )
    {
        AI_ACT_SKILL( 21 );
        AI_TAR_RND();
        return;
    }
    else if ( var181 < ( 20 + 20 ) )
    {
        
        if ( FUNCTION_0043( 0x40 ) == 0 )
        {
            AI_ACT_SKILL( 219 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var181 < ( ( 20 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 120 );
        AI_TAR_RND();
        return;
    }
    else if ( var181 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 67 );
        AI_TAR_RND();
        return;
    }

}


void AI_HONSYO_AEGIS()
{
    int var183 = RNG( 100 );
    
    if ( FUNCTION_0041( 122 ) == 1 )
    {
        
        if ( FUNCTION_00AB( 122, 1 ) == 0 )
        {
            AI_ACT_SKILL( 214 );
            FUNCTION_0065( 122 );
            return;
        }
        else if ( FUNCTION_00AB( 122, 0x40 ) == 0 )
        {
            AI_ACT_SKILL( 218 );
            FUNCTION_0065( 122 );
            return;
        }
        else if ( FUNCTION_00AB( 122, 0x10 ) == 0 )
        {
            AI_ACT_SKILL( 216 );
            FUNCTION_0065( 122 );
            return;
        }
        else if ( ( ( FUNCTION_00AB( 122, 2 ) == 1 ) || ( FUNCTION_00AB( 122, 0x80 ) == 1 ) ) || ( FUNCTION_00AB( 122, 0x20 ) == 1 ) )
        {
            AI_ACT_SKILL( 212 );
            FUNCTION_0065( 122 );
            return;
        }

        
        if ( MYBAD( 122, 0x00100000 ) == 1 )
        {
            AI_ACT_SKILL( 201 );
            FUNCTION_0065( 122 );
            return;
        }
        else if ( var183 < 34 )
        {
            AI_ACT_SKILL( 112 );
            AI_TAR_RND();
            return;
        }
        else if ( var183 < ( 34 + 33 ) )
        {
            AI_ACT_SKILL( 121 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 126 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var183 < 34 )
    {
        AI_ACT_SKILL( 112 );
        AI_TAR_RND();
        return;
    }
    else if ( var183 < ( 34 + 33 ) )
    {
        AI_ACT_SKILL( 121 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 126 );
        AI_TAR_RND();
        return;
    }

}


void AI_GOUWAN_AEGIS()
{
    int var184 = RNG( 100 );
    int var185 = RNG( 100 );
    
    if ( FUNCTION_0033( 80 ) == 0 )
    {
        
        if ( var184 < 10 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var184 < ( 10 + 30 ) )
        {
            AI_ACT_SKILL( 20 );
            FUNCTION_006B( 4 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 60 ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 )
        {
            FUNCTION_0074( 320 );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
            return;
        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 )
        {
            FUNCTION_0074( 320 );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
            return;
        }
        else if ( var185 < 34 )
        {
            AI_ACT_SKILL( 114 );
            AI_TAR_RND();
            return;
        }
        else if ( var185 < ( 34 + 33 ) )
        {
            AI_ACT_SKILL( 21 );
            FUNCTION_006B( 4 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 80 ) == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 )
        {
            FUNCTION_0074( 320 );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
            return;
        }
        else if ( var185 < 34 )
        {
            AI_ACT_SKILL( 114 );
            AI_TAR_RND();
            return;
        }
        else if ( var185 < ( 34 + 33 ) )
        {
            AI_ACT_SKILL( 21 );
            FUNCTION_006B( 4 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_CATHLE_AEGIS()
{
    int var186 = RNG( 100 );
    
    if ( ( FUNCTION_0035( 25 ) == 1 ) && ( FUNCTION_003B( 1 ) == 0 ) )
    {
        AI_ACT_SKILL( 196 );
        AI_TAR_RND();
        return;
    }

    
    if ( MYBAD( 325, 4 ) == 1 )
    {
        AI_ACT_SKILL( 199 );
        FUNCTION_0063( 4 );
        return;
    }

    
    if ( MYBAD( 325, 0x00100000 ) == 1 )
    {
        AI_ACT_SKILL( 201 );
        FUNCTION_0063( 0x00100000 );
        return;
    }

    
    if ( FUNCTION_004D( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        FUNCTION_0068( 3 );
        return;
    }
    else if ( FUNCTION_004F( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        FUNCTION_0069( 3 );
        return;
    }
    else if ( FUNCTION_0051( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        FUNCTION_006A( 3 );
        return;
    }

    
    if ( var186 < 30 )
    {
        AI_ACT_SKILL( 0x20 );
        AI_TAR_RND();
        return;
    }
    else if ( var186 < ( 30 + 20 ) )
    {
        
        if ( FUNCTION_0043( 0x10 ) == 0 )
        {
            AI_ACT_SKILL( 217 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var186 < ( ( 30 + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 29 );
        AI_TAR_RND();
        return;
    }
    else if ( var186 < ( ( ( 30 + 20 ) + 20 ) + 5 ) )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0056( 4 ) == 1 )
    {
        AI_ACT_SKILL( 62 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 61 );
        FUNCTION_0064( 4 );
        return;
    }

}


void AI_SLAVE_AEGIS()
{
    int var187 = RNG( 100 );
    
    if ( var187 < 30 )
    {
        AI_ACT_SKILL( 2 );
        AI_TAR_RND();
        return;
    }
    else if ( var187 < ( 30 + 30 ) )
    {
        
        if ( FUNCTION_0058( 115 ) == 0 )
        {
            AI_ACT_SKILL( 115 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 114 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var187 < ( ( 30 + 30 ) + 30 ) )
    {
        AI_ACT_SKILL( 114 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_ROYAL_AEGIS()
{
    int var188 = RNG( 100 );
    var188 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( 117 );
        AI_TAR_RND();
        return;
    }

    
    if ( AI_ENBAD( 2 ) == 1 )
    {
        AI_ACT_SKILL( 117 );
        AI_TAR_RND();
        return;
    }

    int var189 = 0;
    
    if ( FUNCTION_0033( 20 ) == 0 )
    {
        
        if ( var188 < 30 )
        {
            AI_ACT_SKILL( 117 );
            AI_TAR_RND();
            return;
        }
        else if ( var188 < ( 30 + 30 ) )
        {
            
            if ( FUNCTION_0040( 1 ) == 0 )
            {
                AI_ACT_SKILL( 57 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 117 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var188 < ( ( 30 + 30 ) + 20 ) )
        {
            
            if ( AI_ENBAD( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 69 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 117 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 5 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var189 < 35 )
    {
        AI_ACT_SKILL( 117 );
        AI_TAR_RND();
        return;
    }
    else if ( var189 < ( 35 + 15 ) )
    {
        
        if ( FUNCTION_0040( 1 ) == 0 )
        {
            AI_ACT_SKILL( 57 );
            FUNCTION_0064( 1 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 117 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var189 < ( ( 35 + 15 ) + 15 ) )
    {
        
        if ( AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 69 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 117 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0053( 3 ) == 1 )
    {
        AI_ACT_SKILL( 3 );
        FUNCTION_006B( 3 );
        return;
    }
    else 
    {
        AI_ACT_SKILL( 5 );
        AI_TAR_RND();
        return;
    }

}


void AI_ZANKOKU_AEGIS()
{
    int var190 = RNG( 100 );
    int var191 = RNG( 100 );
    int var192 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( 2 );
        STAND();
        return;
    }

    
    if ( var190 < 35 )
    {
        
        if ( FUNCTION_0053( 3 ) == 1 )
        {
            AI_ACT_SKILL( 2 );
            FUNCTION_006B( 3 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 2 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var190 < ( 35 + 30 ) )
    {
        AI_ACT_SKILL( 70 );
        AI_TAR_RND();
        return;
    }
    else if ( var190 < ( ( 35 + 30 ) + 20 ) )
    {
        
        if ( AI_ENBAD( 2 ) == 0 )
        {
            AI_ACT_SKILL( 60 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 2 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0043( 0x00020000 ) == 0 )
    {
        AI_ACT_SKILL( 242 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0053( 3 ) == 1 )
    {
        AI_ACT_SKILL( 2 );
        FUNCTION_006B( 3 );
        return;
    }
    else 
    {
        AI_ACT_SKILL( 2 );
        AI_TAR_RND();
        return;
    }

}


void AI_BRAVE_AEGIS()
{
    int var193 = RNG( 100 );
    int var194 = RNG( 100 );
    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( var193 < 35 )
        {
            AI_ACT_SKILL( 2 );
            AI_TAR_RND();
            return;
        }
        else if ( var193 < ( 35 + 35 ) )
        {
            AI_ACT_SKILL( 5 );
            AI_TAR_RND();
            return;
        }
        else if ( var193 < ( ( 35 + 35 ) + 15 ) )
        {
            
            if ( FUNCTION_0041( 167 ) == 1 )
            {
                
                if ( FUNCTION_004D( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    FUNCTION_0068( 5 );
                    return;
                }
                else if ( FUNCTION_004F( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    FUNCTION_0069( 5 );
                    return;
                }
                else if ( FUNCTION_0051( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    FUNCTION_006A( 5 );
                    return;
                }
                else if ( FUNCTION_0044( 2 ) == 0 )
                {
                    AI_ACT_SKILL( 207 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 2 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( FUNCTION_0041( 135 ) == 1 )
            {
                
                if ( FUNCTION_004D( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    FUNCTION_0068( 4 );
                    return;
                }
                else if ( FUNCTION_004F( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    FUNCTION_0069( 4 );
                    return;
                }
                else if ( FUNCTION_0051( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    FUNCTION_006A( 4 );
                    return;
                }
                else if ( FUNCTION_0044( 2 ) == 0 )
                {
                    AI_ACT_SKILL( 207 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 2 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( 39 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            AI_ACT_SKILL( 5 );
            AI_TAR_RND();
            return;
        }
        else if ( var194 < 30 )
        {
            AI_ACT_SKILL( 2 );
            AI_TAR_RND();
            return;
        }
        else if ( var194 < ( 30 + 30 ) )
        {
            AI_ACT_SKILL( 5 );
            AI_TAR_RND();
            return;
        }
        else if ( var194 < ( ( 30 + 30 ) + 20 ) )
        {
            
            if ( FUNCTION_004D( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                FUNCTION_0068( 3 );
                return;
            }
            else if ( FUNCTION_004F( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                FUNCTION_0069( 3 );
                return;
            }
            else if ( FUNCTION_0051( 3 ) == 1 )
            {
                AI_ACT_SKILL( 229 );
                FUNCTION_006A( 3 );
                return;
            }
            else if ( FUNCTION_01C7( 0x0800 ) == 0 )
            {
                AI_ACT_SKILL( 221 );
                FUNCTION_0066();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 122 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 122 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_HANKETU_AEGIS()
{
    int var195 = RNG( 100 );
    int var196 = RNG( 100 );
    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( var195 < 35 )
        {
            AI_ACT_SKILL( 29 );
            AI_TAR_RND();
            return;
        }
        else if ( var195 < ( 35 + 35 ) )
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }
        else if ( var195 < ( ( 35 + 35 ) + 15 ) )
        {
            
            if ( FUNCTION_0041( 103 ) == 1 )
            {
                
                if ( FUNCTION_004D( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    FUNCTION_0068( 229 );
                    return;
                }
                else if ( FUNCTION_004F( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    FUNCTION_0069( 3 );
                    return;
                }
                else if ( FUNCTION_0051( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    FUNCTION_006A( 3 );
                    return;
                }
                else if ( FUNCTION_0044( 0x80 ) == 0 )
                {
                    AI_ACT_SKILL( 211 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 29 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( FUNCTION_0041( 135 ) == 1 )
            {
                
                if ( FUNCTION_004D( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    FUNCTION_0068( 4 );
                    return;
                }
                else if ( FUNCTION_004F( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    FUNCTION_0069( 4 );
                    return;
                }
                else if ( FUNCTION_0051( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    FUNCTION_006A( 4 );
                    return;
                }
                else if ( FUNCTION_0044( 0x80 ) == 0 )
                {
                    AI_ACT_SKILL( 211 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 29 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( 39 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }
        else if ( var196 < 30 )
        {
            AI_ACT_SKILL( 29 );
            AI_TAR_RND();
            return;
        }
        else if ( var196 < ( 30 + 30 ) )
        {
            AI_ACT_SKILL( 0x20 );
            AI_TAR_RND();
            return;
        }
        else if ( var196 < ( ( 30 + 30 ) + 20 ) )
        {
            
            if ( FUNCTION_004D( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                FUNCTION_0068( 5 );
                return;
            }
            else if ( FUNCTION_004F( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                FUNCTION_0069( 5 );
                return;
            }
            else if ( FUNCTION_0051( 5 ) == 1 )
            {
                AI_ACT_SKILL( 232 );
                FUNCTION_006A( 5 );
                return;
            }
            else if ( FUNCTION_01C7( 0x0800 ) == 0 )
            {
                AI_ACT_SKILL( 221 );
                FUNCTION_0066();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 125 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 125 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_ICE_AEGIS()
{
    int var197 = RNG( 100 );
    int var198 = RNG( 100 );
    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( var197 < 25 )
        {
            AI_ACT_SKILL( 20 );
            AI_TAR_RND();
            return;
        }
        else if ( var197 < ( 25 + 35 ) )
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }
        else if ( var197 < ( ( 25 + 35 ) + 15 ) )
        {
            
            if ( FUNCTION_0041( 103 ) == 1 )
            {
                
                if ( FUNCTION_004D( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    FUNCTION_0068( 229 );
                    return;
                }
                else if ( FUNCTION_004F( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    FUNCTION_0069( 3 );
                    return;
                }
                else if ( FUNCTION_0051( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    FUNCTION_006A( 3 );
                    return;
                }
                else if ( FUNCTION_0044( 0x20 ) == 0 )
                {
                    AI_ACT_SKILL( 209 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 20 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( FUNCTION_0041( 167 ) == 1 )
            {
                
                if ( FUNCTION_004D( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    FUNCTION_0068( 5 );
                    return;
                }
                else if ( FUNCTION_004F( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    FUNCTION_0069( 5 );
                    return;
                }
                else if ( FUNCTION_0051( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    FUNCTION_006A( 5 );
                    return;
                }
                else if ( FUNCTION_0044( 0x20 ) == 0 )
                {
                    AI_ACT_SKILL( 209 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 20 );
                    AI_TAR_RND();
                    return;
                }

            }
            else 
            {
                AI_ACT_SKILL( 39 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( FUNCTION_0040( 4 ) == 0 )
        {
            AI_ACT_SKILL( 62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 20 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( FUNCTION_01C7( 0x0400 ) == 1 )
        {
            AI_ACT_SKILL( 133 );
            AI_TAR_RND();
            return;
        }
        else if ( var198 < 30 )
        {
            AI_ACT_SKILL( 20 );
            AI_TAR_RND();
            return;
        }
        else if ( var198 < ( 30 + 30 ) )
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }
        else if ( var198 < ( ( 30 + 30 ) + 20 ) )
        {
            
            if ( FUNCTION_004D( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                FUNCTION_0068( 4 );
                return;
            }
            else if ( FUNCTION_004F( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                FUNCTION_0069( 4 );
                return;
            }
            else if ( FUNCTION_0051( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                FUNCTION_006A( 4 );
                return;
            }
            else if ( FUNCTION_01C7( 0x0400 ) == 0 )
            {
                AI_ACT_SKILL( 220 );
                FUNCTION_0066();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 133 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 133 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_HAKAI_AEGIS()
{
    int var199 = RNG( 100 );
    int var200 = RNG( 100 );
    int var201 = RNG( 100 );
    
    if ( ( FUNCTION_003B( 1 ) == 0 ) || ( FUNCTION_0033( 30 ) == 0 ) )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            AI_ACT_SKILL( 23 );
            AI_TAR_RND();
            return;
        }
        else if ( var199 < 25 )
        {
            
            if ( FUNCTION_01C7( 0x0800 ) == 0 )
            {
                AI_ACT_SKILL( 221 );
                FUNCTION_0066();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 24 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var199 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( var199 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 37 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( ( FUNCTION_003B( 1 ) == 1 ) || ( FUNCTION_0033( 30 ) == 1 ) )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 1 )
        {
            
            if ( var200 < 30 )
            {
                AI_ACT_SKILL( 24 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 37 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var201 < 25 )
        {
            
            if ( FUNCTION_01C7( 0x0800 ) == 0 )
            {
                AI_ACT_SKILL( 221 );
                FUNCTION_0066();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 37 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var201 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( var201 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( 47 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 37 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_IKARI_AEGIS()
{
    
    if ( FUNCTION_0044( 0x00400000 ) == 0 )
    {
        AI_ACT_SKILL( 74 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_0044( 0x00400000 ) == 1 )
    {
        
        if ( AI_ENBAD( 0x10 ) == 1 )
        {
            AI_ACT_WEAPON();
            FUNCTION_0063( 0x10 );
            return;
        }
        else if ( AI_ENBAD( 0x10 ) == 0 )
        {
            AI_ACT_SKILL( 67 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 0x20 ) == 0 )
        {
            AI_ACT_SKILL( 209 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 2 ) == 0 )
        {
            AI_ACT_SKILL( 207 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_SAKEBU_AEGIS()
{
    
    if ( ( AI_ENBAD( 0x10 ) == 1 ) && ( FUNCTION_0043( 0x00010000 ) == 0 ) )
    {
        AI_ACT_SKILL( 241 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0035( 20 ) == 1 )
    {
        AI_ACT_SKILL( 195 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0043( 0x10 ) == 0 )
    {
        AI_ACT_SKILL( 217 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_004D( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        FUNCTION_0068( 4 );
        return;
    }
    else if ( FUNCTION_004F( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        FUNCTION_0069( 4 );
        return;
    }
    else if ( FUNCTION_0051( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        FUNCTION_006A( 4 );
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_WANDA_AEGIS()
{
    int var202 = RNG( 100 );
    int var203 = RNG( 100 );
    int var204 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( ( var203 < 50 ) && ( FUNCTION_0053( 6 ) == 1 ) )
        {
            AI_ACT_SKILL( 12 );
            FUNCTION_006B( 6 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( var202 < 25 )
        {
            
            if ( FUNCTION_0040( 4 ) == 0 )
            {
                AI_ACT_SKILL( 62 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 21 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var202 < ( 25 + 25 ) )
        {
            
            if ( FUNCTION_01C7( 0x0800 ) == 0 )
            {
                AI_ACT_SKILL( 221 );
                FUNCTION_0066();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 23 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var202 < ( ( 25 + 25 ) + 20 ) )
        {
            
            if ( FUNCTION_0057( 12 ) == 1 )
            {
                AI_ACT_SKILL( 3 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 12 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var202 < ( ( ( 25 + 25 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 1 )
    {
        
        if ( var204 < 20 )
        {
            
            if ( ( FUNCTION_0057( 62 ) == 0 ) && ( FUNCTION_0040( 4 ) == 0 ) )
            {
                AI_ACT_SKILL( 62 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 221 );
                FUNCTION_0066();
                return;
            }

        }
        else if ( var204 < ( 20 + 20 ) )
        {
            
            if ( FUNCTION_0044( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 211 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 24 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var204 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( var204 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            AI_ACT_SKILL( 221 );
            FUNCTION_0066();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_OKUBYOU_AEGIS()
{
    int var205 = RNG( 100 );
    
    if ( AI_ENBAD( 8 ) == 1 )
    {
        AI_ACT_SKILL( 65 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_003E( 0x00100000 ) == 1 )
    {
        AI_ACT_SKILL( 201 );
        FUNCTION_0063( 0x00100000 );
        return;
    }

    
    if ( var205 < 20 )
    {
        
        if ( ( ( FUNCTION_0044( 1 ) == 1 ) || ( FUNCTION_0044( 0x40 ) == 1 ) ) || ( ( FUNCTION_0044( 216 ) == 1 ) && ( FUNCTION_003B( 1 ) == 0 ) ) )
        {
            AI_ACT_SKILL( 223 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0053( 4 ) == 1 )
        {
            AI_ACT_SKILL( 20 );
            FUNCTION_006B( 4 );
            return;
        }
        else if ( FUNCTION_003E( 4 ) == 1 )
        {
            AI_ACT_SKILL( 199 );
            FUNCTION_0063( 4 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 20 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var205 < ( 20 + 20 ) )
    {
        
        if ( ( ( FUNCTION_0043( 2 ) == 1 ) || ( FUNCTION_0043( 0x80 ) == 1 ) ) || ( ( FUNCTION_0043( 0x20 ) == 1 ) && ( FUNCTION_003B( 1 ) == 0 ) ) )
        {
            AI_ACT_SKILL( 212 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 138 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var205 < ( ( 20 + 20 ) + 20 ) )
    {
        
        if ( FUNCTION_0053( 4 ) == 1 )
        {
            AI_ACT_SKILL( 20 );
            FUNCTION_006B( 4 );
            return;
        }
        else if ( FUNCTION_003E( 4 ) == 1 )
        {
            AI_ACT_SKILL( 199 );
            FUNCTION_0063( 4 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 20 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var205 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 138 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0041( 10 ) == 1 )
    {
        
        if ( FUNCTION_004D( 3 ) == 1 )
        {
            AI_ACT_SKILL( 229 );
            FUNCTION_0068( 3 );
            return;
        }
        else if ( FUNCTION_004F( 3 ) == 1 )
        {
            AI_ACT_SKILL( 229 );
            FUNCTION_0069( 3 );
            return;
        }
        else if ( FUNCTION_0051( 3 ) == 1 )
        {
            AI_ACT_SKILL( 229 );
            FUNCTION_006A( 3 );
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( 138 );
        AI_TAR_RND();
        return;
    }

}


void AI_NAKU_AEGIS()
{
    int var206 = RNG( 100 );
    
    if ( ( FUNCTION_003E( 0x00100000 ) == 1 ) && ( FUNCTION_0043( 0x00020000 ) == 0 ) )
    {
        AI_ACT_SKILL( 242 );
        AI_TAR_RND();
        return;
    }

    
    if ( var206 < 25 )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        return;
    }
    else if ( var206 < ( 25 + 30 ) )
    {
        AI_ACT_SKILL( 5 );
        AI_TAR_RND();
        return;
    }
    else if ( var206 < ( ( 25 + 30 ) + 25 ) )
    {
        
        if ( FUNCTION_0040( 8 ) == 0 )
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var206 < ( ( ( 25 + 30 ) + 25 ) + 10 ) )
    {
        AI_ACT_SKILL( 93 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 94 );
        AI_TAR_RND();
        return;
    }

}


void AI_KYOUKI_AEGIS()
{
    int var207 = RNG( 100 );
    int var208 = RNG( 100 );
    
    if ( FUNCTION_0044( 0x00010000 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        
        if ( FUNCTION_0057( 119 ) == 1 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
        }

    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 )
    {
        AI_ACT_SKILL( 93 );
        AI_TAR_RND();
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
        return;
    }

    
    if ( FUNCTION_0044( 225 ) == 1 )
    {
        AI_ACT_SKILL( 15 );
        AI_TAR_RND();
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
        return;
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 1 )
    {
        AI_ACT_SKILL( 94 );
        AI_TAR_RND();
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) );
        return;
    }

    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_SKILL( 136 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( FUNCTION_0053( 6 ) == 1 )
        {
            AI_ACT_SKILL( 15 );
            FUNCTION_006B( 6 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var207 < 20 )
    {
        AI_ACT_SKILL( 15 );
        AI_TAR_RND();
        return;
    }
    else if ( var207 < ( 20 + 20 ) )
    {
        
        if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 136 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var207 < ( ( 20 + 20 ) + 20 ) )
    {
        
        if ( var208 < 50 )
        {
            AI_ACT_SKILL( 220 );
            FUNCTION_0066();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 221 );
            FUNCTION_0066();
            return;
        }

    }
    else if ( var207 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        AI_ACT_SKILL( 119 );
        AI_TAR_RND();
        return;
    }
    else if ( var207 < ( ( ( ( 20 + 20 ) + 20 ) + 20 ) + 10 ) )
    {
        
        if ( FUNCTION_004D( 6 ) == 1 )
        {
            AI_ACT_SKILL( 231 );
            FUNCTION_0068( 6 );
            return;
        }
        else if ( FUNCTION_004F( 6 ) == 1 )
        {
            AI_ACT_SKILL( 231 );
            FUNCTION_0069( 6 );
            return;
        }
        else if ( FUNCTION_0051( 6 ) == 1 )
        {
            AI_ACT_SKILL( 231 );
            FUNCTION_006A( 6 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 136 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_01C7( 0x00008000 ) == 0 )
    {
        AI_ACT_SKILL( 227 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_KYOEIM_AEGIS()
{
    int var209 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        AI_ACT_SKILL( 146 );
        FUNCTION_0063( 0x00100000 );
        return;
    }

    
    if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) || ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) )
    {
        
        if ( FUNCTION_0033( 70 ) == 0 )
        {
            
            if ( FUNCTION_0053( 3 ) == 1 )
            {
                AI_ACT_SKILL( 1 );
                FUNCTION_006B( 3 );
                return;
            }
            else if ( FUNCTION_0053( 4 ) == 1 )
            {
                AI_ACT_SKILL( 19 );
                FUNCTION_006B( 4 );
                return;
            }
            else if ( FUNCTION_0053( 5 ) == 1 )
            {
                AI_ACT_SKILL( 28 );
                FUNCTION_006B( 5 );
                return;
            }
            else if ( FUNCTION_0053( 6 ) == 1 )
            {
                AI_ACT_SKILL( 10 );
                FUNCTION_006B( 6 );
                return;
            }
            else if ( var209 < 25 )
            {
                AI_ACT_SKILL( 1 );
                AI_TAR_RND();
                return;
            }
            else if ( var209 < ( 25 + 25 ) )
            {
                AI_ACT_SKILL( 19 );
                AI_TAR_RND();
                return;
            }
            else if ( var209 < ( ( 25 + 25 ) + 25 ) )
            {
                AI_ACT_SKILL( 28 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 10 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 )
        {
            FUNCTION_0074( 186 );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
            return;
        }
        else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 )
        {
            FUNCTION_0074( 186 );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
            return;
        }
        else 
        {
            AI_ACT_WAIT();
            return;
        }

    }
    else if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( FUNCTION_003E( 0x80 ) == 1 )
        {
            AI_ACT_SKILL( 202 );
            FUNCTION_0063( 0x80 );
            return;
        }
        else if ( FUNCTION_003E( 4 ) == 1 )
        {
            AI_ACT_SKILL( 199 );
            FUNCTION_0063( 4 );
            return;
        }
        else if ( FUNCTION_0044( 2 ) == 0 )
        {
            AI_ACT_SKILL( 207 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 0x20 ) == 0 )
        {
            AI_ACT_SKILL( 209 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0043( 1 ) == 0 )
        {
            AI_ACT_SKILL( 215 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0043( 0x40 ) == 0 )
        {
            AI_ACT_SKILL( 219 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0043( 0x10 ) == 0 )
        {
            AI_ACT_SKILL( 217 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0053( 3 ) == 1 )
        {
            AI_ACT_SKILL( 1 );
            FUNCTION_006B( 3 );
            return;
        }
        else if ( FUNCTION_0053( 4 ) == 1 )
        {
            AI_ACT_SKILL( 19 );
            FUNCTION_006B( 4 );
            return;
        }
        else if ( FUNCTION_0053( 5 ) == 1 )
        {
            AI_ACT_SKILL( 28 );
            FUNCTION_006B( 5 );
            return;
        }
        else if ( FUNCTION_0053( 6 ) == 1 )
        {
            AI_ACT_SKILL( 10 );
            FUNCTION_006B( 6 );
            return;
        }
        else if ( var209 < 25 )
        {
            AI_ACT_SKILL( 1 );
            AI_TAR_RND();
            return;
        }
        else if ( var209 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( 19 );
            AI_TAR_RND();
            return;
        }
        else if ( var209 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( 28 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 10 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var209 < 25 )
    {
        AI_ACT_SKILL( 5 );
        AI_TAR_RND();
        return;
    }
    else if ( var209 < ( 25 + 25 ) )
    {
        AI_ACT_SKILL( 23 );
        AI_TAR_RND();
        return;
    }
    else if ( var209 < ( ( 25 + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( 0x20 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 14 );
        AI_TAR_RND();
        return;
    }

}


void AI_TINOHE_AEGIS()
{
    int var210 = RNG( 100 );
    int var211 = RNG( 100 );
    int var212 = RNG( 100 );
    int var213 = RNG( 100 );
    
    if ( FUNCTION_008F() == 1 )
    {
        
        if ( var213 < 70 )
        {
            AI_ACT_SKILL( 38 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 53 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var211 < 25 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else if ( var211 < ( 25 + 25 ) )
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }
        else if ( var211 < ( ( 25 + 25 ) + 25 ) )
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0053( 4 ) == 1 )
    {
        
        if ( var212 < 60 )
        {
            AI_ACT_SKILL( 21 );
            FUNCTION_006B( 4 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0053( 5 ) == 1 )
    {
        
        if ( var212 < 60 )
        {
            AI_ACT_SKILL( 30 );
            FUNCTION_006B( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0053( 6 ) == 1 )
    {
        
        if ( var212 < 60 )
        {
            AI_ACT_SKILL( 12 );
            FUNCTION_006B( 6 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0053( 3 ) == 1 )
    {
        
        if ( var212 < 60 )
        {
            AI_ACT_SKILL( 3 );
            FUNCTION_006B( 3 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var210 < 20 )
    {
        
        if ( FUNCTION_00B2( 186 ) == 0 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var210 < ( 20 + 20 ) )
    {
        
        if ( FUNCTION_00B2( 186 ) == 0 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 21 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var210 < ( ( 20 + 20 ) + 20 ) )
    {
        
        if ( FUNCTION_00B2( 186 ) == 0 )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var210 < ( ( ( 20 + 20 ) + 20 ) + 20 ) )
    {
        
        if ( FUNCTION_00B2( 186 ) == 0 )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0044( 0x0800 ) == 0 )
    {
        AI_ACT_SKILL( 221 );
        FUNCTION_0066();
        return;
    }
    else if ( var211 < 25 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( var211 < ( 25 + 25 ) )
    {
        AI_ACT_SKILL( 24 );
        AI_TAR_RND();
        return;
    }
    else if ( var211 < ( ( 25 + 25 ) + 25 ) )
    {
        AI_ACT_SKILL( 33 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 15 );
        AI_TAR_RND();
        return;
    }

}


void AI_SINKNO_AEGIS()
{
    int var214 = RNG( 100 );
    
    if ( ( MYHP( 107, 30 ) == 1 ) && ( FUNCTION_01C7( 0x0800 ) == 0 ) )
    {
        AI_ACT_SKILL( 221 );
        FUNCTION_0066();
        return;
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
        return;
    }

    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        
        if ( var214 < 30 )
        {
            AI_ACT_SKILL( 6 );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
            AI_TAR_RND();
            return;
        }
        else if ( var214 < ( 30 + 30 ) )
        {
            
            if ( FUNCTION_0053( 3 ) == 1 )
            {
                AI_ACT_SKILL( 3 );
                BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
                FUNCTION_006B( 3 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 3 );
                BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var214 < ( ( 30 + 30 ) + 20 ) )
        {
            AI_ACT_SKILL( 147 );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            AI_ACT_SKILL( 221 );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
            FUNCTION_0066();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 6 );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_003B( 1 ) == 1 )
    {
        FUNCTION_0074( 107 );
        AI_TAR_RND();
        return;
    }

    
    if ( var214 < 30 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( var214 < ( 30 + 30 ) )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        return;
    }
    else if ( var214 < ( ( 30 + 30 ) + 20 ) )
    {
        AI_ACT_SKILL( 147 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x0800 ) == 0 )
    {
        AI_ACT_SKILL( 221 );
        FUNCTION_0066();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }

}


void AI_SULOUT_AEGIS()
{
    int var215 = RNG( 100 );
    
    if ( FUNCTION_0033( 20 ) == 1 )
    {
        AI_ACT_SKILL( 40 );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
        AI_TAR_RND();
        return;
    }

    
    if ( ( FUNCTION_01DC( 1, 330 ) == 1 ) && ( FUNCTION_0043( 0x00020000 ) == 0 ) )
    {
        AI_ACT_SKILL( 242 );
        AI_TAR_RND();
        return;
    }

    
    if ( var215 < 40 )
    {
        
        if ( ( FUNCTION_0058( 0x80 ) == 0 ) && ( FUNCTION_0058( 40 ) == 0 ) )
        {
            AI_ACT_SKILL( 0x80 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 140 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var215 < ( 40 + 50 ) )
    {
        AI_ACT_SKILL( 140 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_AKERON_AEGIS()
{
    int var216 = RNG( 100 );
    int var217 = RNG( 100 );
    int var218 = RNG( 100 );
    
    if ( FUNCTION_0053( 8 ) == 1 )
    {
        AI_ACT_SKILL( 49 );
        FUNCTION_006B( 8 );
        return;
    }
    else if ( FUNCTION_0053( 9 ) == 1 )
    {
        AI_ACT_SKILL( 55 );
        FUNCTION_006B( 9 );
        return;
    }

    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var217 < 45 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( var217 < ( 45 + 10 ) )
        {
            AI_ACT_SKILL( 38 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var216 < 30 )
    {
        
        if ( var218 < 50 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var216 < ( 30 + 30 ) )
    {
        
        if ( var218 < 50 )
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var216 < ( ( 30 + 30 ) + 10 ) )
    {
        
        if ( ( AI_ENBAD( 4 ) == 0 ) && ( FUNCTION_0040( 8 ) == 0 ) )
        {
            AI_ACT_SKILL( 62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var216 < ( ( ( 30 + 30 ) + 10 ) + 10 ) )
    {
        
        if ( ( AI_ENBAD( 8 ) == 0 ) && ( FUNCTION_0040( 4 ) == 0 ) )
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 12 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( 221 );
        FUNCTION_0066();
        return;
    }

}


void AI_KONKYU_AEGIS()
{
    int var219 = RNG( 100 );
    int var220 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( var220 < 35 )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else if ( var220 < ( 35 + 35 ) )
        {
            AI_ACT_SKILL( 136 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 141 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( ( ( FUNCTION_0033( 75 ) == 1 ) && ( FUNCTION_0033( 50 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 ) )
    {
        AI_ACT_SKILL( 220 );
        FUNCTION_0066();
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
        return;
    }
    else if ( ( ( FUNCTION_0033( 50 ) == 1 ) && ( FUNCTION_0033( 25 ) == 0 ) ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) )
    {
        AI_ACT_SKILL( 220 );
        FUNCTION_0066();
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
        return;
    }
    else if ( ( FUNCTION_0033( 25 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 450 ) ) == 0 ) )
    {
        AI_ACT_SKILL( 220 );
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_003B( 1 ) == 0 )
    {
        
        if ( var219 < 20 )
        {
            AI_ACT_SKILL( 134 );
            AI_TAR_RND();
            return;
        }
        else if ( var219 < ( 20 + 20 ) )
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }
        else if ( var219 < ( ( 20 + 20 ) + 20 ) )
        {
            AI_ACT_SKILL( 120 );
            AI_TAR_RND();
            return;
        }
        else if ( AI_ENBAD( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 148 );
            FUNCTION_0064( 0x80 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 134 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var220 < 35 )
    {
        AI_ACT_SKILL( 144 );
        AI_TAR_RND();
        return;
    }
    else if ( var220 < ( 35 + 35 ) )
    {
        AI_ACT_SKILL( 136 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 141 );
        AI_TAR_RND();
        return;
    }

}


void AI_KAIDEN_AEGIS()
{
    int var221 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_SKILL( 129 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x0400 ) == 0 )
    {
        
        if ( var221 < 70 )
        {
            AI_ACT_SKILL( 129 );
            AI_TAR_RND();
            return;
        }
        else if ( var221 < ( 70 + 10 ) )
        {
            AI_ACT_SKILL( 220 );
            AI_TAR_RND();
            return;
        }
        else if ( var221 < ( ( 70 + 10 ) + 10 ) )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else if ( var221 < ( ( ( 70 + 10 ) + 10 ) + 10 ) )
        {
            AI_ACT_SKILL( 50 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_ONNENM_AEGIS()
{
    int var222 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_SKILL( 129 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x0400 ) == 0 )
    {
        
        if ( var222 < 30 )
        {
            AI_ACT_SKILL( 93 );
            AI_TAR_RND();
            return;
        }
        else if ( var222 < ( 30 + 10 ) )
        {
            AI_ACT_SKILL( 220 );
            AI_TAR_RND();
            return;
        }
        else if ( var222 < ( ( 30 + 10 ) + 10 ) )
        {
            AI_ACT_SKILL( 56 );
            AI_TAR_RND();
            return;
        }
        else if ( var222 < ( ( ( 30 + 10 ) + 10 ) + 50 ) )
        {
            AI_ACT_SKILL( 148 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_TENJIN_AEGIS()
{
    
    if ( FUNCTION_0035( 30 ) == 0 )
    {
        
        if ( FUNCTION_0044( 0x00008000 ) == 0 )
        {
            AI_ACT_SKILL( 227 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0043( 1 ) == 0 )
        {
            AI_ACT_SKILL( 215 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 0x80 ) == 0 )
        {
            AI_ACT_SKILL( 211 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0035( 30 ) == 1 )
    {
        
        if ( FUNCTION_0043( 0x00020000 ) == 0 )
        {
            AI_ACT_SKILL( 242 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 196 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WAIT();
        return;
    }

}


void AI_HAGURE_AEGIS()
{
    
    if ( FUNCTION_005E( 3 ) == 1 )
    {
        AI_ASK_TO_LEAVE();
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_005E( 3 ) == 0 )
    {
        AI_ACT_SKILL( 43 );
        FUNCTION_013D( 1 );
        return;
    }

}


void AI_K_GARDKILL()
{
    
    if ( FUNCTION_004D( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        FUNCTION_0068( 3 );
        return;
    }
    else if ( FUNCTION_004F( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        FUNCTION_0069( 3 );
        return;
    }
    else if ( FUNCTION_0051( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        FUNCTION_006A( 3 );
        return;
    }

    FUNCTION_0075();
}


void AI_H_GARDKILL()
{
    
    if ( FUNCTION_004D( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        FUNCTION_0068( 4 );
        return;
    }
    else if ( FUNCTION_004F( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        FUNCTION_0069( 4 );
        return;
    }
    else if ( FUNCTION_0051( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        FUNCTION_006A( 4 );
        return;
    }

    FUNCTION_0075();
}


void AI_D_GARDKILL()
{
    
    if ( FUNCTION_004D( 5 ) == 1 )
    {
        AI_ACT_SKILL( 232 );
        FUNCTION_0068( 5 );
        return;
    }
    else if ( FUNCTION_004F( 5 ) == 1 )
    {
        AI_ACT_SKILL( 232 );
        FUNCTION_0069( 5 );
        return;
    }
    else if ( FUNCTION_0051( 5 ) == 1 )
    {
        AI_ACT_SKILL( 232 );
        FUNCTION_006A( 5 );
        return;
    }

    FUNCTION_0075();
}


void AI_S_GARDKILL()
{
    
    if ( FUNCTION_004D( 6 ) == 1 )
    {
        AI_ACT_SKILL( 231 );
        FUNCTION_0068( 6 );
        return;
    }
    else if ( FUNCTION_004F( 6 ) == 1 )
    {
        AI_ACT_SKILL( 231 );
        FUNCTION_0069( 6 );
        return;
    }
    else if ( FUNCTION_0051( 6 ) == 1 )
    {
        AI_ACT_SKILL( 231 );
        FUNCTION_006A( 6 );
        return;
    }

    FUNCTION_0075();
}


void AI_ZAKO_DEKAJYA()
{
    
    if ( FUNCTION_0044( 1 ) == 1 )
    {
        AI_ACT_SKILL( 223 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 0x40 ) == 1 )
    {
        AI_ACT_SKILL( 223 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 0x10 ) == 1 )
    {
        AI_ACT_SKILL( 223 );
        AI_TAR_RND();
        return;
    }

    FUNCTION_0075();
}


void AI_ZAKO_DEKNDA()
{
    
    if ( ( FUNCTION_01C7( 2 ) == 1 ) || ( FUNCTION_0043( 2 ) == 1 ) )
    {
        AI_ACT_SKILL( 212 );
        AI_TAR_RND();
        return;
    }
    else if ( ( FUNCTION_01C7( 0x80 ) == 1 ) || ( FUNCTION_0043( 0x80 ) == 1 ) )
    {
        AI_ACT_SKILL( 212 );
        AI_TAR_RND();
        return;
    }
    else if ( ( FUNCTION_01C7( 0x20 ) == 1 ) || ( FUNCTION_0043( 0x20 ) == 1 ) )
    {
        AI_ACT_SKILL( 212 );
        AI_TAR_RND();
        return;
    }

    FUNCTION_0075();
}


void AI_ZAKO_DEKAJYA_DEKNDA()
{
    
    if ( FUNCTION_0044( 1 ) == 1 )
    {
        AI_ACT_SKILL( 223 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 0x40 ) == 1 )
    {
        AI_ACT_SKILL( 223 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 0x10 ) == 1 )
    {
        AI_ACT_SKILL( 223 );
        AI_TAR_RND();
        return;
    }

    
    if ( ( FUNCTION_01C7( 2 ) == 1 ) || ( FUNCTION_0043( 2 ) == 1 ) )
    {
        AI_ACT_SKILL( 212 );
        AI_TAR_RND();
        return;
    }
    else if ( ( FUNCTION_01C7( 0x80 ) == 1 ) || ( FUNCTION_0043( 0x80 ) == 1 ) )
    {
        AI_ACT_SKILL( 212 );
        AI_TAR_RND();
        return;
    }
    else if ( ( FUNCTION_01C7( 0x20 ) == 1 ) || ( FUNCTION_0043( 0x20 ) == 1 ) )
    {
        AI_ACT_SKILL( 212 );
        AI_TAR_RND();
        return;
    }

    FUNCTION_0075();
}


void AI_MAYA_GARDKILL()
{
    
    if ( FUNCTION_003B( 1 ) == 1 )
    {
        AI_ASK_TO_LEAVE();
        AI_TAR_RND();
        return;
    }

    
    if ( FUNCTION_004D( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        FUNCTION_0068( 3 );
        return;
    }
    else if ( FUNCTION_004F( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        FUNCTION_0069( 3 );
        return;
    }
    else if ( FUNCTION_0051( 3 ) == 1 )
    {
        AI_ACT_SKILL( 229 );
        FUNCTION_006A( 3 );
        return;
    }

    
    if ( FUNCTION_004D( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        FUNCTION_0068( 4 );
        return;
    }
    else if ( FUNCTION_004F( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        FUNCTION_0069( 4 );
        return;
    }
    else if ( FUNCTION_0051( 4 ) == 1 )
    {
        AI_ACT_SKILL( 230 );
        FUNCTION_006A( 4 );
        return;
    }

    FUNCTION_0075();
}


void AI_TAIDA_ZAKO()
{
    
    if ( FUNCTION_0044( 2 ) == 0 )
    {
        AI_ACT_SKILL( 207 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 0x80 ) == 0 )
    {
        AI_ACT_SKILL( 211 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0044( 0x20 ) == 0 )
    {
        AI_ACT_SKILL( 209 );
        AI_TAR_RND();
        return;
    }

    FUNCTION_0075();
}


void test()
{
}


void kakunin()
{
}


void AI_metis()
{
    
    if ( FUNCTION_0158( 1, 50 ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }
    else 
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
    }

    int var224 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 )
    {
        FUNCTION_01D2( 222 );
        return;
    }
    else if ( var224 < 50 )
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }
    else if ( var224 < ( ( 50 + 50 ) + 25 ) )
    {
        AI_ACT_SKILL( 122 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 125 );
        AI_TAR_RND();
        return;
    }

}


void AI_Erebos()
{
    int var225 = 0;
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 511 ) ) == 1 )
    {
        var225 = FUNCTION_0192( 2 );
        var225 = ( var225 + 1 );
        FUNCTION_0193( 2, var225 );
        
        if ( var225 < 3 )
        {
            FUNCTION_011E( 243 );
            BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 511 ) );
            FUNCTION_01D2( 226 );
            return;
        }
        else 
        {
            FUNCTION_0193( 2, 0 );
        }

    }
    else 
    {
        FUNCTION_0193( 2, 0 );
    }

    
    if ( FUNCTION_0176() == 1 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) ) == 1 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 454 ) );
        }

        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) );
        FUNCTION_011E( 244 );
        AI_Erebos_B();
    }
    else if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 452 ) ) == 1 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 453 ) );
    }

    FUNCTION_011E( 241 );
    AI_Erebos_A();
}


void AI_Erebos_A()
{
    FUNCTION_0193( 1, 0 );
    int var227 = RNG( 100 );
    int var228 = FUNCTION_0192( 0 );
    var228 = ( var228 + 1 );
    FUNCTION_0193( 0, var228 );
    
    if ( var228 > 4 )
    {
        FUNCTION_0193( 0, 0 );
        FUNCTION_0175( 1200 );
        FUNCTION_0066();
        FUNCTION_011E( 244 );
        return;
    }

    
    if ( var227 < 20 )
    {
        AI_ACT_SKILL( 111 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_TUJYOU();
    }

}


void AI_Erebos_B()
{
    FUNCTION_0193( 0, 0 );
    int var229 = RNG( 100 );
    int var230 = FUNCTION_0192( 1 );
    var230 = ( var230 + 1 );
    FUNCTION_0193( 1, var230 );
    
    if ( var230 == 3 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
    }
    else 
    {
        BIT_OFF( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 502 ) );
    }

    
    if ( var230 > 3 )
    {
        
        if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 0 )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 498 ) );
            FUNCTION_0193( 1, 0 );
            FUNCTION_011E( 241 );
            AI_ACT_SKILL( 293 );
            AI_TAR_RND();
            return;
        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 499 ) );
            FUNCTION_0193( 1, 0 );
            FUNCTION_011E( 241 );
            AI_ACT_SKILL( 295 );
            AI_TAR_RND();
            return;
        }
        else if ( ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 448 ) ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 1 ) )
        {
            BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 506 ) );
            FUNCTION_0193( 1, 0 );
            FUNCTION_011E( 241 );
            AI_ACT_SKILL( 296 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( ( ( AI_ENBAD( 2 ) == 1 ) || ( AI_ENBAD( 4 ) == 1 ) ) || ( AI_ENBAD( 8 ) == 1 ) )
    {
        AI_ACT_SKILL( 111 );
        AI_TAR_RND();
        return;
    }

    
    if ( var229 < 10 )
    {
        AI_ACT_SKILL( 111 );
        AI_TAR_RND();
        return;
    }
    else if ( var229 < 15 )
    {
        AI_ACT_SKILL( 48 );
        AI_TAR_RND();
        return;
    }
    else if ( var229 < 20 )
    {
        AI_ACT_SKILL( 54 );
        AI_TAR_RND();
        return;
    }
    else if ( var229 < 30 )
    {
        
        if ( FUNCTION_0040( 8 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var229 < 40 )
    {
        
        if ( FUNCTION_0040( 2 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var229 < 50 )
    {
        
        if ( FUNCTION_0040( 4 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var229 < 60 )
    {
        
        if ( FUNCTION_0040( 0x80 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 69 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var229 < 70 )
    {
        
        if ( FUNCTION_0044( 8 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 207 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var229 < 80 )
    {
        
        if ( FUNCTION_0044( 0x20 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 209 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var229 < 90 )
    {
        
        if ( FUNCTION_0044( 0x0200 ) == 1 )
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 209 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_SKILL( 70 );
        AI_TAR_RND();
        return;
    }

}


void AI_TUJYOU()
{
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        
        if ( RNG( 100 ) < 25 )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 50 )
        {
            AI_ACT_SKILL( 119 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 75 )
        {
            AI_ACT_SKILL( 142 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( RNG( 100 ) < 15 )
        {
            AI_ACT_SKILL( 9 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 30 )
        {
            AI_ACT_SKILL( 27 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 45 )
        {
            AI_ACT_SKILL( 36 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 60 )
        {
            AI_ACT_SKILL( 18 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( RNG( 100 ) < 14 )
        {
            
            if ( FUNCTION_0033( 75 ) == 0 )
            {
                AI_ACT_SKILL( 3 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 21 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( RNG( 100 ) < 28 )
        {
            
            if ( FUNCTION_0033( 75 ) == 0 )
            {
                AI_ACT_SKILL( 6 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 24 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( RNG( 100 ) < 42 )
        {
            
            if ( FUNCTION_0033( 75 ) == 0 )
            {
                AI_ACT_SKILL( 30 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 12 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( RNG( 100 ) < 56 )
        {
            
            if ( FUNCTION_0033( 75 ) == 0 )
            {
                AI_ACT_SKILL( 33 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 15 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( RNG( 100 ) < 70 )
        {
            
            if ( RNG( 100 ) < 33 )
            {
                AI_ACT_SKILL( 0x80 );
                AI_TAR_RND();
                return;
            }
            else if ( RNG( 100 ) < 66 )
            {
                AI_ACT_SKILL( 136 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 141 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( RNG( 100 ) < 80 )
        {
            
            if ( FUNCTION_0033( 75 ) == 0 )
            {
                
                if ( FUNCTION_004D( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    FUNCTION_0068( 3 );
                    return;
                }
                else if ( FUNCTION_004F( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    FUNCTION_0069( 3 );
                    return;
                }
                else if ( FUNCTION_0051( 3 ) == 1 )
                {
                    AI_ACT_SKILL( 229 );
                    FUNCTION_006A( 3 );
                    return;
                }
                else if ( FUNCTION_004D( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    FUNCTION_0068( 5 );
                    return;
                }
                else if ( FUNCTION_004F( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    FUNCTION_0069( 5 );
                    return;
                }
                else if ( FUNCTION_0051( 5 ) == 1 )
                {
                    AI_ACT_SKILL( 232 );
                    FUNCTION_006A( 5 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 111 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( FUNCTION_004D( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                FUNCTION_0068( 4 );
                return;
            }
            else if ( FUNCTION_004F( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                FUNCTION_0069( 4 );
                return;
            }
            else if ( FUNCTION_0051( 4 ) == 1 )
            {
                AI_ACT_SKILL( 230 );
                FUNCTION_006A( 4 );
                return;
            }
            else if ( FUNCTION_004D( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                FUNCTION_0068( 6 );
                return;
            }
            else if ( FUNCTION_004F( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                FUNCTION_0069( 6 );
                return;
            }
            else if ( FUNCTION_0051( 6 ) == 1 )
            {
                AI_ACT_SKILL( 231 );
                FUNCTION_006A( 6 );
                return;
            }
            else 
            {
                AI_ACT_SKILL( 111 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( ( FUNCTION_0033( 50 ) == 1 ) && ( FUNCTION_0033( 25 ) == 0 ) )
    {
        
        if ( RNG( 100 ) < 8 )
        {
            AI_ACT_SKILL( 9 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 0x10 )
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 24 )
        {
            AI_ACT_SKILL( 27 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 0x20 )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 40 )
        {
            AI_ACT_SKILL( 36 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 48 )
        {
            AI_ACT_SKILL( 33 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 56 )
        {
            AI_ACT_SKILL( 18 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 0x40 )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 72 )
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 80 )
        {
            AI_ACT_SKILL( 119 );
            AI_TAR_RND();
            return;
        }
        else if ( RNG( 100 ) < 88 )
        {
            AI_ACT_SKILL( 142 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 111 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( RNG( 100 ) < 8 )
    {
        AI_ACT_SKILL( 9 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 0x10 )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 24 )
    {
        AI_ACT_SKILL( 27 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 0x20 )
    {
        AI_ACT_SKILL( 24 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 40 )
    {
        AI_ACT_SKILL( 36 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 48 )
    {
        AI_ACT_SKILL( 33 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 56 )
    {
        AI_ACT_SKILL( 18 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 0x40 )
    {
        AI_ACT_SKILL( 15 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 72 )
    {
        AI_ACT_SKILL( 144 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 80 )
    {
        AI_ACT_SKILL( 119 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 88 )
    {
        AI_ACT_SKILL( 142 );
        AI_TAR_RND();
        return;
    }
    else if ( RNG( 100 ) < 50 )
    {
        AI_ACT_SKILL( 220 );
        FUNCTION_0066();
        return;
    }
    else 
    {
        AI_ACT_SKILL( 221 );
        FUNCTION_0066();
        return;
    }

}


void AI_Shadow_hero()
{
    int var232 = FUNCTION_0192( 0 );
    var232 = ( var232 + 1 );
    FUNCTION_0193( 0, var232 );
    
    if ( var232 > 3 )
    {
        FUNCTION_0193( 0, 0 );
        FUNCTION_01DF();
        return;
    }

    int var231 = RNG( 100 );
    
    if ( FUNCTION_01EC() == 225 )
    {
        AI_Shadow_hero_AIGISU();
    }
    else if ( FUNCTION_01EC() == 224 )
    {
        AI_Shadow_hero_YUKARI();
    }
    else if ( FUNCTION_01EC() == 226 )
    {
        AI_Shadow_hero_MITURU();
    }
    else if ( FUNCTION_01EC() == 227 )
    {
        AI_Shadow_hero_JUNPEI();
    }
    else if ( FUNCTION_01EC() == 228 )
    {
        AI_Shadow_hero_SANADA();
    }
    else if ( FUNCTION_01EC() == 229 )
    {
        AI_Shadow_hero_AMADA();
    }
    else if ( FUNCTION_01EC() == 230 )
    {
        AI_Shadow_hero_KOROMARU();
    }

}


void AI_Shadow_hero_AIGISU()
{
    int var233 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 455 ) );
        AI_ACT_PERSONA( 225, 120 );
        FUNCTION_0060();
        FUNCTION_011E( 297 );
        return;
    }

    
    if ( FUNCTION_003C( 1 ) == 0 )
    {
        
        if ( var233 < 30 )
        {
            
            if ( FUNCTION_019A( 1 ) != -1 && FUNCTION_019A( 0x10 ) != -1 && FUNCTION_019A( 0x40 ) != -1 )
            {
                AI_ACT_PERSONA( 225, 239 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_PERSONA( 225, 120 );
                FUNCTION_0060();
                return;
            }

        }
        else if ( var233 < 60 )
        {
            AI_ACT_PERSONA( 225, 120 );
            AI_TAR_RND();
            return;
        }
        else if ( var233 < 90 )
        {
            AI_ACT_PERSONA( 225, 119 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( ( ( FUNCTION_015D( 1, 1 ) == 1 ) || ( FUNCTION_015E( 1, 1 ) == 1 ) ) || ( FUNCTION_015F( 1, 1 ) == 1 ) )
    {
        
        if ( var233 < 25 )
        {
            AI_ACT_PERSONA( 225, 134 );
            AI_TAR_RND();
            return;
        }
        else if ( var233 < 50 )
        {
            AI_ACT_PERSONA( 225, 12 );
            AI_TAR_RND();
            return;
        }
        else if ( var233 < 75 )
        {
            AI_ACT_PERSONA( 225, 147 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 2 ) == 0 || FUNCTION_0044( 40 ) == 0 || FUNCTION_0044( 80 ) == 0 )
        {
            AI_ACT_PERSONA( 225, 250 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_PERSONA( 225, 134 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var233 < 30 )
    {
        
        if ( FUNCTION_019A( 1 ) != -1 && FUNCTION_019A( 0x10 ) != -1 && FUNCTION_019A( 0x40 ) != -1 )
        {
            AI_ACT_PERSONA( 225, 239 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_PERSONA( 225, 120 );
            FUNCTION_0060();
            return;
        }

    }
    else if ( var233 < 60 )
    {
        AI_ACT_PERSONA( 225, 120 );
        AI_TAR_RND();
        return;
    }
    else if ( var233 < 90 )
    {
        AI_ACT_PERSONA( 225, 119 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Shadow_hero_YUKARI()
{
    int var234 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 456 ) );
        AI_ACT_PERSONA( 224, 18 );
        FUNCTION_0060();
        FUNCTION_011E( 298 );
        return;
    }

    
    if ( var234 < 25 )
    {
        AI_ACT_PERSONA( 224, 18 );
        AI_TAR_RND();
        return;
    }
    else if ( var234 < 45 )
    {
        AI_ACT_PERSONA( 224, 15 );
        AI_TAR_RND();
        return;
    }
    else if ( var234 < 65 )
    {
        AI_ACT_PERSONA( 224, 18 );
        AI_TAR_RND();
        return;
    }
    else if ( var234 < 85 )
    {
        
        if ( FUNCTION_0033( 90 ) == 1 )
        {
            AI_ACT_PERSONA( 224, 193 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_PERSONA( 224, 18 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Shadow_hero_MITURU()
{
    int var235 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 457 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 457 ) );
        AI_ACT_PERSONA( 226, 27 );
        FUNCTION_0060();
        FUNCTION_011E( 299 );
        return;
    }

    
    if ( var235 < 25 )
    {
        AI_ACT_PERSONA( 226, 27 );
        AI_TAR_RND();
        return;
    }
    else if ( var235 < 45 )
    {
        AI_ACT_PERSONA( 226, 24 );
        AI_TAR_RND();
        return;
    }
    else if ( var235 < 65 )
    {
        
        if ( FUNCTION_01C7( 0x0800 ) == 0 )
        {
            AI_ACT_PERSONA( 226, 221 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_PERSONA( 226, 27 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var235 < 85 )
    {
        AI_ACT_PERSONA( 226, 27 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_PERSONA( 226, 57 );
        FUNCTION_006E( 1 );
        return;
    }

}


void AI_Shadow_hero_JUNPEI()
{
    int var236 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 458 ) );
        AI_ACT_PERSONA( 227, 144 );
        FUNCTION_0060();
        FUNCTION_011E( 300 );
        return;
    }

    
    if ( var236 < 25 )
    {
        AI_ACT_PERSONA( 227, 144 );
        AI_TAR_RND();
        return;
    }
    else if ( var236 < 45 )
    {
        AI_ACT_PERSONA( 227, 3 );
        AI_TAR_RND();
        return;
    }
    else if ( var236 < 65 )
    {
        AI_ACT_PERSONA( 227, 134 );
        AI_TAR_RND();
        return;
    }
    else if ( var236 < 85 )
    {
        AI_ACT_PERSONA( 227, 0x80 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Shadow_hero_SANADA()
{
    int var237 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 459 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 459 ) );
        AI_ACT_PERSONA( 228, 36 );
        FUNCTION_0060();
        FUNCTION_011E( 301 );
        return;
    }

    
    if ( ( ( FUNCTION_0044( 2 ) == 0 ) || ( FUNCTION_0044( 0x20 ) == 0 ) ) || ( FUNCTION_0044( 0x80 ) == 0 ) )
    {
        
        if ( var237 < 30 )
        {
            AI_ACT_PERSONA( 228, 36 );
            AI_TAR_RND();
            return;
        }
        else if ( var237 < 60 )
        {
            AI_ACT_PERSONA( 228, 33 );
            AI_TAR_RND();
            return;
        }
        else if ( var237 < 90 )
        {
            AI_ACT_PERSONA( 228, 36 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

	}
    else if ( var237 < 90 )
    {
        
        if ( FUNCTION_0043( 2 ) == 1 || FUNCTION_0043( 0x80 ) == 1 || FUNCTION_0043( 0x20 ) == 1 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_PERSONA( 228, 250 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Shadow_hero_AMADA()
{
    int var238 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 460 ) );
        AI_ACT_PERSONA( 229, 47 );
        FUNCTION_0060();
        FUNCTION_011E( 302 );
        return;
    }

    
    if ( AI_ENBAD( 0x00100000 ) == 1 )
    {
        AI_ACT_PERSONA( 229, 147 );
        FUNCTION_0063( 0x00100000 );
        return;
    }

    
    if ( var238 < 55 )
    {
        AI_ACT_PERSONA( 229, 33 );
        AI_TAR_RND();
        return;
    }
    else if ( var238 < 90 )
    {
        AI_ACT_PERSONA( 229, 47 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Shadow_hero_KOROMARU()
{
    int var239 = RNG( 100 );
    
    if ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) ) == 0 )
    {
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 461 ) );
        AI_ACT_PERSONA( 230, 54 );
        FUNCTION_0060();
        FUNCTION_011E( 303 );
        return;
    }

    
    if ( var239 < 25 )
    {
        AI_ACT_PERSONA( 230, 6 );
        AI_TAR_RND();
    }
    else if ( var239 < 45 )
    {
        AI_ACT_PERSONA( 230, 9 );
        AI_TAR_RND();
    }
    else if ( var239 < 65 )
    {
        AI_ACT_PERSONA( 230, 9 );
        AI_TAR_RND();
    }
    else if ( var239 < 85 )
    {
        AI_ACT_PERSONA( 230, 54 );
        AI_TAR_RND();
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Shadow_hero_METIS()
{
    AI_ACT_PERSONA( 231, 29 );
    AI_TAR_RND();
}


void AI_AMADAK_AEGIS()
{
    int var240 = RNG( 100 );
    int var241 = RNG( 100 );
    int var242 = RNG( 100 );
    int var243 = RNG( 100 );
    
    if ( FUNCTION_004D( 5 ) == 1 )
    {
        
        if ( RNG( 100 ) < 60 )
        {
            AI_ACT_SKILL( 232 );
            FUNCTION_0068( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 30 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_004F( 5 ) == 1 )
    {
        
        if ( RNG( 100 ) < 70 )
        {
            AI_ACT_SKILL( 232 );
            FUNCTION_0069( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 47 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0051( 5 ) == 1 )
    {
        
        if ( RNG( 100 ) < 50 )
        {
            AI_ACT_SKILL( 232 );
            FUNCTION_006A( 5 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 147 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( ( MYHP( 235, 50 ) == 1 ) && ( BIT_CHK( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) ) == 0 ) )
    {
        AI_ACT_SKILL( 194 );
        FUNCTION_0065( 235 );
        BIT_ON( ( ( ( ( ( 0 + 0x0400 ) + 0x0800 ) + 0x0400 ) + 0x0400 ) + 449 ) );
        return;
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( AI_ENBAD( 0x00100000 ) == 1 )
        {
            AI_ACT_SKILL( 147 );
            FUNCTION_008C();
            return;
        }
        else if ( AI_ENBAD( 0x00100000 ) == 0 )
        {
            
            if ( FUNCTION_0044( 0x4000 ) == 0 )
            {
                
                if ( var240 < 10 )
                {
                    AI_ACT_WEAPON();
                    AI_TAR_RND();
                    return;
                }
                else if ( var240 < ( 10 + 20 ) )
                {
                    AI_ACT_SKILL( 30 );
                    AI_TAR_RND();
                    return;
                }
                else if ( var240 < ( ( 10 + 20 ) + 20 ) )
                {
                    AI_ACT_SKILL( 47 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 226 );
                    AI_TAR_RND();
                    return;
                }

            }
            else if ( FUNCTION_0044( 0x4000 ) == 1 )
            {
                
                if ( var241 < 10 )
                {
                    AI_ACT_WEAPON();
                    AI_TAR_RND();
                    return;
                }
                else if ( var241 < ( 10 + 60 ) )
                {
                    AI_ACT_SKILL( 30 );
                    AI_TAR_RND();
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 47 );
                    AI_TAR_RND();
                    return;
                }

            }

        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        
        if ( AI_ENBAD( 0x00100000 ) == 1 )
        {
            AI_ACT_SKILL( 147 );
            FUNCTION_008C();
            return;
        }
        else if ( AI_ENBAD( 0x00100000 ) == 0 )
        {
            
            if ( FUNCTION_0044( 0x00008000 ) == 0 )
            {
                AI_ACT_SKILL( 227 );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0044( 0x00008000 ) == 1 )
            {
                
                if ( FUNCTION_0043( 0x00020000 ) == 0 )
                {
                    
                    if ( var242 < 10 )
                    {
                        AI_ACT_WEAPON();
                        AI_TAR_RND();
                        return;
                    }
                    else if ( var242 < ( 10 + 70 ) )
                    {
                        AI_ACT_SKILL( 147 );
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( 242 );
                        AI_TAR_RND();
                        return;
                    }

                }
                else if ( FUNCTION_0043( 0x00020000 ) == 1 )
                {
                    
                    if ( var243 < 10 )
                    {
                        AI_ACT_WEAPON();
                        AI_TAR_RND();
                        return;
                    }
                    else 
                    {
                        AI_ACT_SKILL( 147 );
                        AI_TAR_RND();
                        return;
                    }

                }

            }

        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_TAR_RND();
        return;
    }

}


void AI_SANADA_AEGIS()
{
    int var244 = RNG( 100 );
    int var245 = RNG( 100 );
    int var246 = RNG( 100 );
    int var247 = RNG( 100 );
    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_SKILL( 118 );
        STAND();
        return;
    }
    else if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        AI_ACT_SKILL( 30 );
        STAND();
        return;
    }
    else if ( FUNCTION_0044( 0x00010000 ) == 1 )
    {
        
        if ( FUNCTION_0044( 0x00020000 ) == 1 )
        {
            AI_ACT_SKILL( 39 );
            AI_TAR_RND();
            return;
        }
        else if ( FUNCTION_0044( 0x00020000 ) == 0 )
        {
            AI_ACT_SKILL( 221 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0044( 0x00020000 ) == 1 )
    {
        AI_ACT_SKILL( 220 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( FUNCTION_0044( 0x20 ) == 0 )
        {
            
            if ( var244 < 10 )
            {
                AI_ACT_WEAPON();
                STAND();
                return;
            }
            else if ( var244 < ( 10 + 40 ) )
            {
                AI_ACT_SKILL( 118 );
                STAND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 209 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( FUNCTION_0044( 0x20 ) == 1 )
        {
            
            if ( var245 < 20 )
            {
                AI_ACT_WEAPON();
                STAND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 118 );
                STAND();
                return;
            }

        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        
        if ( FUNCTION_0158( 236, 30 ) == 0 )
        {
            
            if ( var246 < 20 )
            {
                AI_ACT_WEAPON();
                STAND();
                return;
            }
            else if ( var246 < ( 20 + 40 ) )
            {
                AI_ACT_SKILL( 220 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 221 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( FUNCTION_0158( 236, 30 ) == 1 )
        {
            
            if ( var247 < 10 )
            {
                AI_ACT_WEAPON();
                STAND();
                return;
            }
            else if ( var247 < ( 10 + 20 ) )
            {
                AI_ACT_SKILL( 220 );
                AI_TAR_RND();
                return;
            }
            else if ( var247 < ( ( 10 + 20 ) + 20 ) )
            {
                AI_ACT_SKILL( 221 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 193 );
                FUNCTION_0065( 236 );
                return;
            }

        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_TAR_RND();
        return;
    }

}


void AI_Junpei()
{
    int var248 = RNG( 100 );
    
    if ( FUNCTION_003E( 4 ) == 1 )
    {
        AI_ACT_SKILL( 199 );
        FUNCTION_0063( 4 );
        return;
    }

    
    if ( FUNCTION_01C7( 0x0400 ) == 1 )
    {
        AI_ACT_SKILL( 144 );
        AI_TAR_RND();
        return;
    }

    
    if ( var248 < 13 )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        return;
    }
    else if ( var248 < ( 13 + 13 ) )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( var248 < ( ( 13 + 13 ) + 13 ) )
    {
        AI_ACT_SKILL( 144 );
        AI_TAR_RND();
        return;
    }
    else if ( var248 < ( ( ( 13 + 13 ) + 13 ) + 13 ) )
    {
        
        if ( FUNCTION_01C7( 0x40 ) == 0 )
        {
            AI_ACT_SKILL( 218 );
            FUNCTION_0066();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var248 < ( ( ( ( 13 + 13 ) + 13 ) + 13 ) + 12 ) )
    {
        
        if ( AI_ENBAD( 4 ) == 0 )
        {
            AI_ACT_SKILL( 62 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var248 < ( ( ( ( ( 13 + 13 ) + 13 ) + 13 ) + 12 ) + 13 ) )
    {
        
        if ( FUNCTION_004D( 3 ) == 1 )
        {
            AI_ACT_SKILL( 229 );
            FUNCTION_0068( 3 );
            return;
        }
        else if ( FUNCTION_004F( 3 ) == 1 )
        {
            AI_ACT_SKILL( 229 );
            FUNCTION_0069( 3 );
            return;
        }
        else if ( FUNCTION_0051( 3 ) == 1 )
        {
            AI_ACT_SKILL( 229 );
            FUNCTION_006A( 3 );
            return;
        }
        else 
        {
            AI_ACT_SKILL( 220 );
            FUNCTION_0066();
            return;
        }

    }
    else if ( var248 < ( ( ( ( ( ( 13 + 13 ) + 13 ) + 13 ) + 12 ) + 13 ) + 13 ) )
    {
        AI_ACT_SKILL( 129 );
        AI_TAR_RND();
        return;
    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_Koromaru()
{
    int var249 = RNG( 100 );
    int var250 = RNG( 100 );
    
    if ( FUNCTION_003E( 1 ) == 1 )
    {
        AI_ACT_SKILL( 237 );
        FUNCTION_0063( 1 );
        return;
    }

    
    if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        
        if ( var250 < 50 )
        {
            AI_ACT_SKILL( 3 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 6 );
            AI_TAR_RND();
            return;
        }

    }

    
    if ( var249 < 12 )
    {
        AI_ACT_SKILL( 3 );
        AI_TAR_RND();
        return;
    }
    else if ( var249 < ( 12 + 11 ) )
    {
        AI_ACT_SKILL( 6 );
        AI_TAR_RND();
        return;
    }
    else if ( var249 < ( ( 12 + 11 ) + 11 ) )
    {
        AI_ACT_SKILL( 53 );
        AI_TAR_RND();
        return;
    }
    else if ( var249 < ( ( ( 12 + 11 ) + 11 ) + 11 ) )
    {
        AI_ACT_SKILL( 54 );
        AI_TAR_RND();
        return;
    }
    else if ( var249 < ( ( ( ( 12 + 11 ) + 11 ) + 11 ) + 11 ) )
    {
        
        if ( AI_ENBAD( 8 ) == 0 )
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 65 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( var249 < ( ( ( ( ( 12 + 11 ) + 11 ) + 11 ) + 11 ) + 11 ) )
    {
        AI_ACT_SKILL( 134 );
        AI_TAR_RND();
        return;
    }
    else if ( var249 < ( ( ( ( ( ( 12 + 11 ) + 11 ) + 11 ) + 11 ) + 11 ) + 11 ) )
    {
        
        if ( FUNCTION_0057( 93 ) == 0 )
        {
            AI_ACT_SKILL( 93 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }

    }
    else if ( var249 < ( ( ( ( ( ( ( 12 + 11 ) + 11 ) + 11 ) + 11 ) + 11 ) + 11 ) + 11 ) )
    {
        
        if ( FUNCTION_0044( 0x00400000 ) == 0 )
        {
            AI_ACT_SKILL( 74 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 0x40 );
            AI_TAR_RND();
            return;
        }

    }
    else 
    {
        AI_ACT_WEAPON();
        AI_TAR_RND();
        return;
    }

}


void AI_YUKARI_AEGIS()
{
    int var251 = RNG( 100 );
    int var252 = RNG( 100 );
    
    if ( FUNCTION_0044( 0x00020000 ) == 1 )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( var251 < 33 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var251 < ( 33 + 33 ) )
        {
            AI_ACT_SKILL( 142 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        
        if ( var252 < 30 )
        {
            AI_ACT_SKILL( 15 );
            AI_TAR_RND();
            return;
        }
        else if ( var252 < ( 30 + 30 ) )
        {
            AI_ACT_SKILL( 143 );
            AI_TAR_RND();
            return;
        }
        else if ( var252 < ( ( 30 + 30 ) + 20 ) )
        {
            
            if ( FUNCTION_0044( 0x80 ) == 0 )
            {
                AI_ACT_SKILL( 211 );
                AI_TAR_RND();
                return;
            }
            else if ( FUNCTION_0044( 0x80 ) == 1 )
            {
                
                if ( FUNCTION_004D( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    FUNCTION_0068( 4 );
                    return;
                }
                else if ( FUNCTION_004F( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    FUNCTION_0069( 4 );
                    return;
                }
                else if ( FUNCTION_0051( 4 ) == 1 )
                {
                    AI_ACT_SKILL( 230 );
                    FUNCTION_006A( 4 );
                    return;
                }
                else 
                {
                    AI_ACT_SKILL( 143 );
                    AI_TAR_RND();
                    return;
                }

            }

        }
        else if ( var252 < ( ( ( 30 + 30 ) + 20 ) + 20 ) )
        {
            
            if ( FUNCTION_0043( 4 ) == 0 )
            {
                AI_ACT_SKILL( 214 );
                FUNCTION_0067();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 143 );
                AI_TAR_RND();
                return;
            }

        }

    }
    else 
    {
        AI_ACT_WAIT();
        AI_TAR_RND();
        return;
    }

}


void AI_MIRURU_AEGIS()
{
    int var253 = RNG( 100 );
    int var254 = RNG( 100 );
    
    if ( FUNCTION_0044( 0x00020000 ) == 1 )
    {
        AI_ACT_SKILL( 39 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_01C7( 0x0800 ) == 1 )
    {
        AI_ACT_SKILL( 24 );
        AI_TAR_RND();
        return;
    }
    else if ( FUNCTION_0033( 50 ) == 0 )
    {
        
        if ( var253 < 20 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var253 < ( 20 + 20 ) )
        {
            
            if ( AI_ENBAD( 1 ) == 0 )
            {
                AI_ACT_SKILL( 58 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 144 );
                AI_TAR_RND();
                return;
            }

        }
        else if ( var253 < ( ( 20 + 20 ) + 20 ) )
        {
            
            if ( AI_ENBAD( 4 ) == 0 )
            {
                AI_ACT_SKILL( 62 );
                AI_TAR_RND();
                return;
            }
            else 
            {
                AI_ACT_SKILL( 144 );
                AI_TAR_RND();
                return;
            }

        }
        else 
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }

    }
    else if ( FUNCTION_0033( 50 ) == 1 )
    {
        
        if ( var254 < 10 )
        {
            AI_ACT_WEAPON();
            AI_TAR_RND();
            return;
        }
        else if ( var254 < ( 10 + 40 ) )
        {
            AI_ACT_SKILL( 221 );
            AI_TAR_RND();
            return;
        }
        else if ( var254 < ( ( 10 + 40 ) + 40 ) )
        {
            AI_ACT_SKILL( 24 );
            AI_TAR_RND();
            return;
        }
        else 
        {
            AI_ACT_SKILL( 144 );
            AI_TAR_RND();
            return;
        }

    }

}

